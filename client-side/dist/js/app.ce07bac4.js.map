{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?8419","webpack:///./src/App.vue?bff9","webpack:///./src/views/Database.vue?e52a","webpack:///./src/helper.js","webpack:///src/views/Database.vue","webpack:///./src/views/Database.vue?dfa8","webpack:///./src/views/Database.vue?1119","webpack:///./src/views/PdfCanvas.vue?6bb3","webpack:///src/views/PdfCanvas.vue","webpack:///./src/views/PdfCanvas.vue?c180","webpack:///./src/views/PdfCanvas.vue?9f91","webpack:///./src/router.js","webpack:///./src/store.js","webpack:///./src/main.js","webpack:///./src/views/PdfCanvas.vue?468a","webpack:///./src/App.vue?8732","webpack:///./src/views/Database.vue?beb6"],"names":["i","chunkIds","length","deferredModules","j","deferredModule","chunkId","type","target","script","enumerable","get","getter","value","key","bind","module","Object","prototype","hasOwnProperty","call","object","property","console","error","err","jsonpArray","webpackJsonpCallback","_vm","this","_h","$createElement","_c","_self","attrs","_v","staticRenderFns","component","staticClass","staticStyle","_s","faultMessage","on","triggerUpload","hideImportWarning","hideErrorTypePopup","modus","_e","directives","name","rawName","expression","domProps","$event","composing","errorName","changeInErrorType","errorWeight","errorDescription","values","dropdownLearningOutcomes","model","callback","$$v","selectedLearningOutcome","pushErrorType","hideLearningOutcomePopup","learningName","changeInLearningOutcome","learningBloomLevelCognitive","learningBloomLevelKnowledge","dropdownLearningItems","selectedLearningItems","dropdownContentSections","selectedContentSections","dropdownDomainConcepts","selectedDomainConcepts","pushLearningOutcome","hideLearningItemPopup","learningItemName","changeInLearningItem","learningItemURL","Array","isArray","learningItemIsExercise","_i","$$a","$$el","$$c","checked","$$i","concat","slice","learningItemDifficulty","pushLearningItem","hideContentSectionPopup","contentSectionName","changeInContentSection","pushContentSection","hideDomainConceptPopup","domainConceptName","changeInDomainConcept","pushDomainConcept","importWarning","exportDatabase","deleteSelection","database","newError","newLearningOutcome","newContentSection","newDomainConcept","newLearningItem","changeDatabase","errorTypes","learningOutcomes","contentSections","domainConcepts","learningItems","_m","_l","errortype","_id","updateSelected","weight","description","learningOutcomeIDToName","learningOutcome","editError","learningoutcome","BloomLevelCognitive","BloomLevelKnowledge","multipleLearningItemIDsToString","LearningItems","multipleContentSectionIDsToString","ContentSections","multipleDomainConceptIDsToString","DomainConcepts","editLearningOutcome","learningitem","getValidURL","url","difficulty","editLearningItem","contentsection","editContentSection","domainconcept","editDomainConcept","server","baseURL","a","data","errorID","learningID","learningItemID","contentSectionID","domainConceptID","dropdownErrorTypes","sortedErrorTypeIDs","errorTypeIDToName","sortedOutcomeIDs","sortedDomainConceptIDs","domainConceptIDToName","sortedContentSectionIDs","contentSectionIDToName","sortedLearningItemIDs","learningItemIDToName","selected","Set","components","Circle2","mounted","vm","created","fetchDomainConcepts","fetchContentSections","fetchLearningItems","fetchLearningOutcomes","fetchErrorTypes","methods","prefix","prefix2","tableString","$modal","show","selection","from","safeToDelete","currentDomainConcepts","oldLength","index","indexOf","splice","deleteDomainConceptsInContentSections","deleteDomainConceptsInLearningItems","deleteDomainConceptsInLearningOutcomes","deleteID","deleteContentSectionsInLearningItems","deleteContentSectionsInLearningOutcomes","deleteLearningItemsInLearningOutcomes","deleteLearningOutcomesInErrorTypes","add","checkbox_id","delete","outcome","push","isExerciseItem","hide","areAttributesValid","currentLearningOutcome","Number","newDomainConcepts","newContentSections","__submitErrorTypeToServer","context","__submitLearningOutcomeToServer","__submitLearningItemToServer","__submitContentSectionToServer","__submitDomainConceptToServer","atLeastOneSymbol","numbers","currentWeight","onlyNumbers","updateNewErrorTypes","updateNewLearningOutcomes","updateNewLearningItems","updateNewContentSections","updateNewDomainConcepts","intersection","_intersection","setA","has","elem","difference","_difference","deleteLearningOutcomeInErrorTypes","id","ids","m","overlap","currentDomainConceptIds","idSet","currentContentSections","currentLearningItems","currentErrorType","domainconcepts","contentsections","learningitems","learningoutcomes","errortypes","opts","String","importDatabase","reader","FileReader","readAsArrayBuffer","e","files","onload","Uint8Array","result","wb","readedData","isImportReady","importDomainConcepts","sheet","Sheets","currentDifficulty","allIDs","domainconceptIDs","contentsectionIDs","learningitemIDs","learningoutcomeIDs","errortypeIDs","setAllIDs","split","createOldIDtoNew","oldIDToNew","oldObjects","newObjects","updateDomainSectionIDs","oldDomainConceptIDsToNew","updateContentSectionIDs","oldContentSectionIDsToNew","updateLearningItemIDs","newLearningItems","oldLearningItemIDsToNew","first","list","shift","all_data","importContentSections","importLearningItems","importLearningOutcomes","importErrorTypes","oldLearningOutcomeIDsToNew","isUndefinedOrEmpty","hideErrorType","changeInNewErrorType","pushText","updateText","unselect","selectedForm","$set","editText","pdfName","summaryNeeded","exportPDF","updateAnnotation","selectedErrorType","selectedWeight","openErrorTypePopup","feedback_value","select","upload","editName","updateZoom","updateTool","thinner","thicker","onColorChange","replace","firstPage","previousPage","nextPage","lastPage","copiedPagesA","forEach","copiedPagesB","Vue","use","Router","mode","routes","path","redirect","DatabaseComponent","PDFComponent","Vuex","store","Store","state","page_number","firstZoom","zoom","sliderValue","toolmode","thickness","drawings","lastWidth","lastHeight","summary","excel","mutations","update_url","new_url","update_page_number","new_page_number","update_firstZoom","new_firstZoom","update_zoom","new_zoom","update_slider","new_sliderValue","update_toolmode","new_toolmode","update_thickness","new_thickness","update_drawings","new_drawings","update_lastWidth","new_lastWidth","update_lastHeight","new_lastHeight","update_pdfName","new_pdfName","update_summary","new_summary","update_excel","new_excel","getters","get_url","get_page_number","get_firstZoom","get_zoom","get_sliderValue","get_toolmode","get_thickness","get_drawings","get_lastWidth","get_lastHeight","get_pdfName","get_summary","get_excel","Multiselect","VModal","dialog","PrettyCheckbox","vueXlsxTable","rABS","config","productionTip","el","router","render","h","App","$mount"],"mappings":"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","file":"js/app.ce07bac4.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"js/\" + ({\"pdfjs-dist\":\"pdfjs-dist\",\"pdfjsWorker\":\"pdfjsWorker\"}[chunkId]||chunkId) + \".\" + {\"pdfjs-dist\":\"93589680\",\"pdfjsWorker\":\"dbc92620\"}[chunkId] + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\tvar error = new Error('Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')');\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([1,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{attrs:{\"id\":\"nav\"}},[_c('link',{attrs:{\"rel\":\"stylesheet\",\"href\":\"https://use.fontawesome.com/releases/v5.2.0/css/all.css\",\"integrity\":\"sha384-hWVjflwFxL6sNzntih27bfxkr27PmbbK/iSvJ+a4+0owXq79v+lsFkW54bOGbiDQ\",\"crossorigin\":\"anonymous\"}}),_c('h3',[_c('router-link',{attrs:{\"to\":\"/pdf\"}},[_vm._v(\"Feedback tool\")]),_vm._v(\" |\\n      \"),_c('router-link',{attrs:{\"to\":\"/database\"}},[_vm._v(\"Database\")])],1)]),_c('router-view')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=7f8a52fe&\"\nvar script = {}\nimport style0 from \"vue-multiselect/dist/vue-multiselect.min.css?vue&type=style&index=0&lang=css&\"\nimport style1 from \"./App.vue?vue&type=style&index=1&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container-fluid\"},[_c('modal',{staticStyle:{\"background\":\"transparent\"},attrs:{\"name\":\"fault-popup\",\"height\":\"150\",\"width\":\"900\"}},[_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('br'),_c('h3',[_vm._v(_vm._s(this.faultMessage))])])]),_c('modal',{staticStyle:{\"background\":\"transparent\"},attrs:{\"name\":\"warning-popup\",\"height\":\"270\"}},[_c('div',{staticClass:\"col-md-12 form-wrapper\",staticStyle:{\"text-align\":\"center\"}},[_c('br'),_c('h2',[_vm._v(\"Are you sure you want to import a new database?\")]),_c('br'),_c('h2',[_vm._v(\"The current data in the database will be lost.\")]),_c('div',{staticClass:\"form-group col-md-4 pull-right\"},[_c('button',{staticClass:\"btn btn-success\",on:{\"click\":_vm.triggerUpload}},[_vm._v(\" Yes \")]),_c('button',{staticClass:\"btn btn-success\",attrs:{\"id\":\"cancelButton\"},on:{\"click\":_vm.hideImportWarning}},[_vm._v(\" No \")])])])]),_c('modal',{staticStyle:{\"background\":\"transparent\"},attrs:{\"name\":\"create-errortype\",\"height\":\"600\"},on:{\"closed\":_vm.hideErrorTypePopup}},[_c('div',{staticClass:\"col-md-12 form-wrapper\",staticStyle:{\"text-align\":\"center\"}},[_c('br'),(_vm.modus=='create')?_c('h2',[_vm._v(\" Create Errortype \")]):_vm._e(),(_vm.modus=='edit')?_c('h2',[_vm._v(\" Edit Errortype \")]):_vm._e(),_c('div',{staticClass:\"form-group col-md-12\"},[_c('label',{attrs:{\"for\":\"title\"}},[_vm._v(\" Name \")]),(_vm.modus=='create')?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.errorName),expression:\"errorName\"}],staticClass:\"form-control\",staticStyle:{\"border\":\"2px solid red\"},attrs:{\"type\":\"text\",\"id\":\"name\",\"name\":\"title\",\"placeholder\":\"Enter name\"},domProps:{\"value\":(_vm.errorName)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.errorName=$event.target.value},_vm.changeInErrorType]}}):_vm._e(),(_vm.modus=='edit')?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.errorName),expression:\"errorName\"}],staticClass:\"form-control\",staticStyle:{\"border\":\"2px solid green\"},attrs:{\"type\":\"text\",\"id\":\"name\",\"name\":\"title\",\"placeholder\":\"Enter name\"},domProps:{\"value\":(_vm.errorName)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.errorName=$event.target.value},_vm.changeInErrorType]}}):_vm._e()]),_c('div',{staticClass:\"form-group col-md-12\"},[_c('label',{attrs:{\"for\":\"title\"}},[_vm._v(\" Weight \")]),(_vm.modus=='create')?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.errorWeight),expression:\"errorWeight\"}],staticClass:\"form-control\",staticStyle:{\"border\":\"2px solid red\"},attrs:{\"type\":\"text\",\"id\":\"weight\",\"name\":\"title\",\"placeholder\":\"Enter weight\"},domProps:{\"value\":(_vm.errorWeight)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.errorWeight=$event.target.value},_vm.changeInErrorType]}}):_vm._e(),(_vm.modus=='edit')?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.errorWeight),expression:\"errorWeight\"}],staticClass:\"form-control\",staticStyle:{\"border\":\"2px solid green\"},attrs:{\"type\":\"text\",\"id\":\"weight\",\"name\":\"title\",\"placeholder\":\"Enter weight\"},domProps:{\"value\":(_vm.errorWeight)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.errorWeight=$event.target.value},_vm.changeInErrorType]}}):_vm._e()]),_c('div',{staticClass:\"form-group col-md-12\"},[_c('label',{attrs:{\"for\":\"description\"}},[_vm._v(\" Description \")]),(_vm.modus=='create')?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.errorDescription),expression:\"errorDescription\"}],staticClass:\"form-control\",staticStyle:{\"border\":\"2px solid red\"},attrs:{\"type\":\"text\",\"id\":\"description\",\"name\":\"description\",\"placeholder\":\"Enter description\"},domProps:{\"value\":(_vm.errorDescription)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.errorDescription=$event.target.value},_vm.changeInErrorType]}}):_vm._e(),(_vm.modus=='edit')?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.errorDescription),expression:\"errorDescription\"}],staticClass:\"form-control\",staticStyle:{\"border\":\"2px solid green\"},attrs:{\"type\":\"text\",\"id\":\"description\",\"name\":\"description\",\"placeholder\":\"Enter description\"},domProps:{\"value\":(_vm.errorDescription)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.errorDescription=$event.target.value},_vm.changeInErrorType]}}):_vm._e()]),_c('label',{attrs:{\"for\":\"learningOutcome\"}},[_vm._v(\" Learning outcome \")]),_c('div',{staticStyle:{\"display\":\"flex\",\"align-items\":\"center\",\"justify-content\":\"center\"}},[_c('div',{staticStyle:{\"width\":\"435px\",\"border\":\"2px solid green\",\"display\":\"flex\",\"align-items\":\"center\",\"justify-content\":\"center\"},attrs:{\"id\":\"dropdown\"}},[_c('multiselect',{staticStyle:{\"width\":\"435px\"},attrs:{\"options\":Object.values(_vm.dropdownLearningOutcomes),\"maxHeight\":180,\"placeholder\":\"Select learning outcome\"},on:{\"input\":_vm.changeInErrorType},model:{value:(_vm.selectedLearningOutcome),callback:function ($$v) {_vm.selectedLearningOutcome=$$v},expression:\"selectedLearningOutcome\"}})],1)]),_c('br'),_c('div',{staticClass:\"form-group col-md-4 pull-right\"},[(_vm.modus=='create')?_c('button',{staticClass:\"btn btn-success\",on:{\"click\":_vm.pushErrorType}},[_vm._v(\" Create new errortype \")]):_vm._e(),(_vm.modus=='edit')?_c('button',{staticClass:\"btn btn-success\",on:{\"click\":_vm.pushErrorType}},[_vm._v(\" Edit errortype \")]):_vm._e(),_c('button',{staticClass:\"btn btn-success\",attrs:{\"id\":\"cancelButton\"},on:{\"click\":_vm.hideErrorTypePopup}},[_vm._v(\" Cancel \")])])])]),_c('modal',{staticStyle:{\"background\":\"transparent\"},attrs:{\"name\":\"create-learningoutcome\",\"height\":\"780\"},on:{\"closed\":_vm.hideLearningOutcomePopup}},[_c('div',{staticClass:\"col-md-12 form-wrapper\",staticStyle:{\"text-align\":\"center\"}},[_c('br'),(_vm.modus=='create')?_c('h2',[_vm._v(\" Create learning outcome \")]):_vm._e(),(_vm.modus=='edit')?_c('h2',[_vm._v(\" Edit learning outcome \")]):_vm._e(),_c('div',{staticClass:\"form-group col-md-12\"},[_c('label',{attrs:{\"for\":\"title\"}},[_vm._v(\" Learning outcome \")]),(_vm.modus=='create')?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.learningName),expression:\"learningName\"}],staticClass:\"form-control\",staticStyle:{\"border\":\"2px solid red\"},attrs:{\"type\":\"text\",\"id\":\"learningName\",\"name\":\"title\",\"placeholder\":\"Enter name\"},domProps:{\"value\":(_vm.learningName)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.learningName=$event.target.value},_vm.changeInLearningOutcome]}}):_vm._e(),(_vm.modus=='edit')?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.learningName),expression:\"learningName\"}],staticClass:\"form-control\",staticStyle:{\"border\":\"2px solid green\"},attrs:{\"type\":\"text\",\"id\":\"learningName\",\"name\":\"title\",\"placeholder\":\"Enter name\"},domProps:{\"value\":(_vm.learningName)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.learningName=$event.target.value},_vm.changeInLearningOutcome]}}):_vm._e()]),_c('div',{staticClass:\"form-group col-md-12\"},[_c('label',{attrs:{\"for\":\"title\"}},[_vm._v(\" BloomLevel Cognitive \")]),(_vm.modus=='create')?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.learningBloomLevelCognitive),expression:\"learningBloomLevelCognitive\"}],staticClass:\"form-control\",staticStyle:{\"border\":\"2px solid red\"},attrs:{\"type\":\"text\",\"id\":\"learningBloomLevelCognitive\",\"name\":\"title\",\"placeholder\":\"Enter BloomLevel Cognitive\"},domProps:{\"value\":(_vm.learningBloomLevelCognitive)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.learningBloomLevelCognitive=$event.target.value},_vm.changeInLearningOutcome]}}):_vm._e(),(_vm.modus=='edit')?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.learningBloomLevelCognitive),expression:\"learningBloomLevelCognitive\"}],staticClass:\"form-control\",staticStyle:{\"border\":\"2px solid green\"},attrs:{\"type\":\"text\",\"id\":\"learningBloomLevelCognitive\",\"name\":\"title\",\"placeholder\":\"Enter BloomLevel Cognitive\"},domProps:{\"value\":(_vm.learningBloomLevelCognitive)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.learningBloomLevelCognitive=$event.target.value},_vm.changeInLearningOutcome]}}):_vm._e()]),_c('div',{staticClass:\"form-group col-md-12\"},[_c('label',{attrs:{\"for\":\"description\"}},[_vm._v(\" BloomLevel Knowledge \")]),(_vm.modus=='create')?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.learningBloomLevelKnowledge),expression:\"learningBloomLevelKnowledge\"}],staticClass:\"form-control\",staticStyle:{\"border\":\"2px solid red\"},attrs:{\"type\":\"text\",\"id\":\"learningBloomLevelKnowledge\",\"name\":\"description\",\"placeholder\":\"Enter BloomLevel Knowledge\"},domProps:{\"value\":(_vm.learningBloomLevelKnowledge)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.learningBloomLevelKnowledge=$event.target.value},_vm.changeInLearningOutcome]}}):_vm._e(),(_vm.modus=='edit')?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.learningBloomLevelKnowledge),expression:\"learningBloomLevelKnowledge\"}],staticClass:\"form-control\",staticStyle:{\"border\":\"2px solid green\"},attrs:{\"type\":\"text\",\"id\":\"learningBloomLevelKnowledge\",\"name\":\"description\",\"placeholder\":\"Enter BloomLevel Knowledge\"},domProps:{\"value\":(_vm.learningBloomLevelKnowledge)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.learningBloomLevelKnowledge=$event.target.value},_vm.changeInLearningOutcome]}}):_vm._e()]),_c('label',{attrs:{\"for\":\"description\"}},[_vm._v(\" Learning item(s) \")]),_c('div',{staticStyle:{\"display\":\"flex\",\"align-items\":\"center\",\"justify-content\":\"center\"}},[_c('div',{staticStyle:{\"width\":\"435px\",\"border\":\"2px solid green\",\"display\":\"flex\",\"align-items\":\"center\",\"justify-content\":\"center\"}},[_c('multiselect',{staticStyle:{\"width\":\"435px\"},attrs:{\"options\":Object.values(_vm.dropdownLearningItems),\"maxHeight\":180,\"placeholder\":\"Select learning item\",\"multiple\":true},on:{\"input\":_vm.changeInLearningOutcome},model:{value:(_vm.selectedLearningItems),callback:function ($$v) {_vm.selectedLearningItems=$$v},expression:\"selectedLearningItems\"}})],1)]),_c('br'),_c('label',{attrs:{\"for\":\"description\"}},[_vm._v(\" Content Section(s) \")]),_c('div',{staticStyle:{\"display\":\"flex\",\"align-items\":\"center\",\"justify-content\":\"center\"}},[_c('div',{staticStyle:{\"width\":\"435px\",\"border\":\"2px solid green\",\"display\":\"flex\",\"align-items\":\"center\",\"justify-content\":\"center\"}},[_c('multiselect',{staticStyle:{\"width\":\"435px\"},attrs:{\"options\":Object.values(_vm.dropdownContentSections),\"maxHeight\":180,\"placeholder\":\"Select content section\",\"multiple\":true},on:{\"input\":_vm.changeInLearningOutcome},model:{value:(_vm.selectedContentSections),callback:function ($$v) {_vm.selectedContentSections=$$v},expression:\"selectedContentSections\"}})],1)]),_c('br'),_c('label',{attrs:{\"for\":\"description\"}},[_vm._v(\" Domain Concept(s) \")]),_c('div',{staticStyle:{\"display\":\"flex\",\"align-items\":\"center\",\"justify-content\":\"center\"}},[_c('div',{staticStyle:{\"width\":\"435px\",\"border\":\"2px solid green\",\"display\":\"flex\",\"align-items\":\"center\",\"justify-content\":\"center\"}},[_c('multiselect',{staticStyle:{\"width\":\"435px\"},attrs:{\"options\":Object.values(_vm.dropdownDomainConcepts),\"maxHeight\":180,\"placeholder\":\"Select domain concept(s)\",\"multiple\":true},on:{\"input\":_vm.changeInLearningOutcome},model:{value:(_vm.selectedDomainConcepts),callback:function ($$v) {_vm.selectedDomainConcepts=$$v},expression:\"selectedDomainConcepts\"}})],1)]),_c('br'),_c('br'),_c('br'),_c('br'),_c('div',{staticClass:\"form-group col-md-4 pull-right\"},[(_vm.modus=='create')?_c('button',{staticClass:\"btn btn-success\",on:{\"click\":_vm.pushLearningOutcome}},[_vm._v(\" Create new learning outcome \")]):_vm._e(),(_vm.modus=='edit')?_c('button',{staticClass:\"btn btn-success\",on:{\"click\":_vm.pushLearningOutcome}},[_vm._v(\" Edit learning outcome \")]):_vm._e(),_c('button',{staticClass:\"btn btn-success\",attrs:{\"id\":\"cancelButton\"},on:{\"click\":_vm.hideLearningOutcomePopup}},[_vm._v(\" Cancel \")])])])]),_c('modal',{staticStyle:{\"background\":\"transparent\"},attrs:{\"name\":\"create-learningitem\",\"height\":\"720\"},on:{\"closed\":_vm.hideLearningItemPopup}},[_c('div',{staticClass:\"col-md-12 form-wrapper\",staticStyle:{\"text-align\":\"center\"}},[_c('br'),(_vm.modus=='create')?_c('h2',[_vm._v(\" Create learning item \")]):_vm._e(),(_vm.modus=='edit')?_c('h2',[_vm._v(\" Edit learning item \")]):_vm._e(),_c('div',{staticClass:\"form-group col-md-12\"},[_c('label',{attrs:{\"for\":\"title\"}},[_vm._v(\" Learning item \")]),(_vm.modus=='create')?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.learningItemName),expression:\"learningItemName\"}],staticClass:\"form-control\",staticStyle:{\"border\":\"2px solid red\"},attrs:{\"type\":\"text\",\"id\":\"learningItemName\",\"name\":\"title\",\"placeholder\":\"Enter name\"},domProps:{\"value\":(_vm.learningItemName)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.learningItemName=$event.target.value},_vm.changeInLearningItem]}}):_vm._e(),(_vm.modus=='edit')?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.learningItemName),expression:\"learningItemName\"}],staticClass:\"form-control\",staticStyle:{\"border\":\"2px solid green\"},attrs:{\"type\":\"text\",\"id\":\"learningItemName\",\"name\":\"title\",\"placeholder\":\"Enter name\"},domProps:{\"value\":(_vm.learningItemName)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.learningItemName=$event.target.value},_vm.changeInLearningItem]}}):_vm._e()]),_c('div',{staticClass:\"form-group col-md-12\"},[_c('label',{attrs:{\"for\":\"title\"}},[_vm._v(\" URL \")]),(_vm.modus=='create')?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.learningItemURL),expression:\"learningItemURL\"}],staticClass:\"form-control\",staticStyle:{\"border\":\"2px solid red\"},attrs:{\"type\":\"text\",\"id\":\"learningItemURL\",\"name\":\"title\",\"placeholder\":\"Enter URL\"},domProps:{\"value\":(_vm.learningItemURL)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.learningItemURL=$event.target.value},_vm.changeInLearningItem]}}):_vm._e(),(_vm.modus=='edit')?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.learningItemURL),expression:\"learningItemURL\"}],staticClass:\"form-control\",staticStyle:{\"border\":\"2px solid green\"},attrs:{\"type\":\"text\",\"id\":\"learningItemURL\",\"name\":\"title\",\"placeholder\":\"Enter URL\"},domProps:{\"value\":(_vm.learningItemURL)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.learningItemURL=$event.target.value},_vm.changeInLearningItem]}}):_vm._e()]),_c('div',{staticClass:\"form-group col-md-12\"},[_c('label',{attrs:{\"for\":\"title\"}},[_vm._v(\" Is an exercise item? \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.learningItemIsExercise),expression:\"learningItemIsExercise\"}],attrs:{\"type\":\"checkbox\",\"id\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.learningItemIsExercise)?_vm._i(_vm.learningItemIsExercise,null)>-1:(_vm.learningItemIsExercise)},on:{\"input\":_vm.changeInLearningItem,\"change\":function($event){var $$a=_vm.learningItemIsExercise,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.learningItemIsExercise=$$a.concat([$$v]))}else{$$i>-1&&(_vm.learningItemIsExercise=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.learningItemIsExercise=$$c}}}})])]),(_vm.learningItemIsExercise)?_c('div',{staticClass:\"form-group col-md-12\"},[_c('label',{attrs:{\"for\":\"description\"}},[_vm._v(\" Difficulty \")]),(_vm.modus=='create')?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.learningItemDifficulty),expression:\"learningItemDifficulty\"}],staticClass:\"form-control\",staticStyle:{\"border\":\"2px solid red\"},attrs:{\"type\":\"text\",\"id\":\"learningItemDifficulty\",\"name\":\"description\",\"placeholder\":\"Enter difficulty\"},domProps:{\"value\":(_vm.learningItemDifficulty)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.learningItemDifficulty=$event.target.value},_vm.changeInLearningItem]}}):_vm._e(),(_vm.modus=='edit' && _vm.learningItemDifficulty.length > 0)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.learningItemDifficulty),expression:\"learningItemDifficulty\"}],staticClass:\"form-control\",staticStyle:{\"border\":\"2px solid green\"},attrs:{\"type\":\"text\",\"id\":\"learningItemDifficulty\",\"name\":\"description\",\"placeholder\":\"Enter difficulty\"},domProps:{\"value\":(_vm.learningItemDifficulty)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.learningItemDifficulty=$event.target.value},_vm.changeInLearningItem]}}):_vm._e(),(_vm.modus=='edit' && _vm.learningItemDifficulty.length < 1)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.learningItemDifficulty),expression:\"learningItemDifficulty\"}],staticClass:\"form-control\",staticStyle:{\"border\":\"2px solid red\"},attrs:{\"type\":\"text\",\"id\":\"learningItemDifficulty\",\"name\":\"description\",\"placeholder\":\"Enter difficulty\"},domProps:{\"value\":(_vm.learningItemDifficulty)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.learningItemDifficulty=$event.target.value},_vm.changeInLearningItem]}}):_vm._e()]):_vm._e(),_c('label',{attrs:{\"for\":\"description\"}},[_vm._v(\" Content Section(s) \")]),_c('div',{staticStyle:{\"display\":\"flex\",\"align-items\":\"center\",\"justify-content\":\"center\"}},[_c('div',{staticStyle:{\"width\":\"435px\",\"border\":\"2px solid green\",\"display\":\"flex\",\"align-items\":\"center\",\"justify-content\":\"center\"}},[_c('multiselect',{staticStyle:{\"width\":\"435px\"},attrs:{\"options\":Object.values(_vm.dropdownContentSections),\"maxHeight\":180,\"placeholder\":\"Select content section(s)\",\"multiple\":true},on:{\"input\":_vm.changeInLearningItem},model:{value:(_vm.selectedContentSections),callback:function ($$v) {_vm.selectedContentSections=$$v},expression:\"selectedContentSections\"}})],1)]),_c('br'),_c('label',{attrs:{\"for\":\"description\"}},[_vm._v(\" Domain Concept(s) \")]),_c('div',{staticStyle:{\"display\":\"flex\",\"align-items\":\"center\",\"justify-content\":\"center\"}},[_c('div',{staticStyle:{\"width\":\"435px\",\"border\":\"2px solid green\",\"display\":\"flex\",\"align-items\":\"center\",\"justify-content\":\"center\"}},[_c('multiselect',{staticStyle:{\"width\":\"435px\"},attrs:{\"options\":Object.values(_vm.dropdownDomainConcepts),\"maxHeight\":180,\"placeholder\":\"Select domain concept(s)\",\"multiple\":true},on:{\"input\":_vm.changeInLearningItem},model:{value:(_vm.selectedDomainConcepts),callback:function ($$v) {_vm.selectedDomainConcepts=$$v},expression:\"selectedDomainConcepts\"}})],1)]),_c('br'),_c('br'),_c('br'),_c('br'),_c('div',{staticClass:\"form-group col-md-4 pull-right\"},[(_vm.modus=='create')?_c('button',{staticClass:\"btn btn-success\",on:{\"click\":_vm.pushLearningItem}},[_vm._v(\" Create new learning item \")]):_vm._e(),(_vm.modus=='edit')?_c('button',{staticClass:\"btn btn-success\",on:{\"click\":_vm.pushLearningItem}},[_vm._v(\" Edit learning item \")]):_vm._e(),_c('button',{staticClass:\"btn btn-success\",attrs:{\"id\":\"cancelButton\"},on:{\"click\":_vm.hideLearningItemPopup}},[_vm._v(\" Cancel \")])])])]),_c('modal',{staticStyle:{\"background\":\"transparent\"},attrs:{\"name\":\"create-contentsection\",\"height\":\"480\"},on:{\"closed\":_vm.hideContentSectionPopup}},[_c('div',{staticClass:\"col-md-12 form-wrapper\",staticStyle:{\"text-align\":\"center\"}},[_c('br'),(_vm.modus=='create')?_c('h2',[_vm._v(\" Create content section \")]):_vm._e(),(_vm.modus=='edit')?_c('h2',[_vm._v(\" Edit content section \")]):_vm._e(),_c('div',{staticClass:\"form-group col-md-12\"},[_c('label',{attrs:{\"for\":\"title\"}},[_vm._v(\" Content section \")]),(_vm.modus=='create')?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.contentSectionName),expression:\"contentSectionName\"}],staticClass:\"form-control\",staticStyle:{\"border\":\"2px solid red\"},attrs:{\"type\":\"text\",\"id\":\"contentSectionName\",\"name\":\"title\",\"placeholder\":\"Enter name\"},domProps:{\"value\":(_vm.contentSectionName)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.contentSectionName=$event.target.value},_vm.changeInContentSection]}}):_vm._e(),(_vm.modus=='edit')?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.contentSectionName),expression:\"contentSectionName\"}],staticClass:\"form-control\",staticStyle:{\"border\":\"2px solid green\"},attrs:{\"type\":\"text\",\"id\":\"contentSectionName\",\"name\":\"title\",\"placeholder\":\"Enter name\"},domProps:{\"value\":(_vm.contentSectionName)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.contentSectionName=$event.target.value},_vm.changeInContentSection]}}):_vm._e()]),_c('label',{attrs:{\"for\":\"description\"}},[_vm._v(\" Domain Concept(s) \")]),_c('div',{staticStyle:{\"display\":\"flex\",\"align-items\":\"center\",\"justify-content\":\"center\"}},[(_vm.selectedDomainConcepts != null)?_c('div',{staticStyle:{\"width\":\"435px\",\"border\":\"2px solid green\",\"display\":\"flex\",\"align-items\":\"center\",\"justify-content\":\"center\"},attrs:{\"id\":\"contentsection-dropdown\"}},[_c('multiselect',{staticStyle:{\"width\":\"435px\"},attrs:{\"options\":Object.values(_vm.dropdownDomainConcepts),\"maxHeight\":180,\"placeholder\":\"Select domain concept(s)\",\"multiple\":true},on:{\"input\":_vm.changeInContentSection},model:{value:(_vm.selectedDomainConcepts),callback:function ($$v) {_vm.selectedDomainConcepts=$$v},expression:\"selectedDomainConcepts\"}})],1):_vm._e()]),_c('div',{staticStyle:{\"display\":\"flex\",\"align-items\":\"center\",\"justify-content\":\"center\"}},[(_vm.selectedDomainConcepts == null)?_c('div',{staticStyle:{\"width\":\"435px\",\"border\":\"2px solid red\",\"display\":\"flex\",\"align-items\":\"center\",\"justify-content\":\"center\"},attrs:{\"id\":\"contentsection-dropdown\"}},[_c('multiselect',{staticStyle:{\"width\":\"435px\"},attrs:{\"options\":Object.values(_vm.dropdownDomainConcepts),\"maxHeight\":180,\"placeholder\":\"Select domain concept(s)\",\"multiple\":true},on:{\"input\":_vm.changeInContentSection},model:{value:(_vm.selectedDomainConcepts),callback:function ($$v) {_vm.selectedDomainConcepts=$$v},expression:\"selectedDomainConcepts\"}})],1):_vm._e()]),_c('br'),_c('br'),_c('br'),_c('br'),_c('div',{staticClass:\"form-group col-md-4 pull-right\"},[(_vm.modus=='create')?_c('button',{staticClass:\"btn btn-success\",on:{\"click\":_vm.pushContentSection}},[_vm._v(\" Create new content section \")]):_vm._e(),(_vm.modus=='edit')?_c('button',{staticClass:\"btn btn-success\",on:{\"click\":_vm.pushContentSection}},[_vm._v(\" Edit content section \")]):_vm._e(),_c('button',{staticClass:\"btn btn-success\",attrs:{\"id\":\"cancelButton\"},on:{\"click\":_vm.hideContentSectionPopup}},[_vm._v(\" Cancel \")])])])]),_c('modal',{staticStyle:{\"background\":\"transparent\"},attrs:{\"name\":\"create-domainconcept\",\"height\":\"200\"},on:{\"closed\":_vm.hideDomainConceptPopup}},[_c('div',{staticClass:\"col-md-12 form-wrapper\",staticStyle:{\"text-align\":\"center\"}},[_c('br'),(_vm.modus=='create')?_c('h2',[_vm._v(\" Create domain concept \")]):_vm._e(),(_vm.modus=='edit')?_c('h2',[_vm._v(\" Edit domain concept \")]):_vm._e(),_c('div',{staticClass:\"form-group col-md-12\"},[(_vm.modus=='create')?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.domainConceptName),expression:\"domainConceptName\"}],staticClass:\"form-control\",staticStyle:{\"border\":\"2px solid red\"},attrs:{\"type\":\"text\",\"id\":\"domainConceptName\",\"name\":\"title\",\"placeholder\":\"Enter name\"},domProps:{\"value\":(_vm.domainConceptName)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.domainConceptName=$event.target.value},_vm.changeInDomainConcept]}}):_vm._e(),(_vm.modus=='edit')?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.domainConceptName),expression:\"domainConceptName\"}],staticClass:\"form-control\",staticStyle:{\"border\":\"2px solid green\"},attrs:{\"type\":\"text\",\"id\":\"domainConceptName\",\"name\":\"title\",\"placeholder\":\"Enter name\"},domProps:{\"value\":(_vm.domainConceptName)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.domainConceptName=$event.target.value},_vm.changeInDomainConcept]}}):_vm._e()]),_c('div',{staticClass:\"form-group col-md-4 pull-right\"},[(_vm.modus=='create')?_c('button',{staticClass:\"btn btn-success\",on:{\"click\":_vm.pushDomainConcept}},[_vm._v(\" Create new domain concept \")]):_vm._e(),(_vm.modus=='edit')?_c('button',{staticClass:\"btn btn-success\",on:{\"click\":_vm.pushDomainConcept}},[_vm._v(\" Edit domain concept \")]):_vm._e(),_c('button',{staticClass:\"btn btn-success\",attrs:{\"id\":\"cancelButton\"},on:{\"click\":_vm.hideDomainConceptPopup}},[_vm._v(\" Cancel \")])])])]),_c('div',{staticClass:\"sidebar\"},[_c('div',{attrs:{\"id\":\"import-export\"}},[_c('b',{attrs:{\"href\":\"#\"}},[_vm._v(\"___________\")]),_c('br'),_c('input',{attrs:{\"type\":\"file\",\"id\":\"input-excel\",\"accept\":\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"}}),_c('b',[_c('p',[_c('i',{staticClass:\"fas fa-file-upload\",staticStyle:{\"font-size\":\"40px\"},on:{\"click\":_vm.importWarning}})]),_vm._v(\"Import database\")]),_c('b',{attrs:{\"href\":\"#\"}},[_vm._v(\"___________\")]),_c('br'),_c('b',[_c('p',[_c('i',{staticClass:\"fas fa-file-download\",staticStyle:{\"font-size\":\"40px\"},on:{\"click\":_vm.exportDatabase}})]),_vm._v(\"Download database\")]),_c('b',{attrs:{\"href\":\"#\"}},[_vm._v(\"___________\")])]),_c('br'),_c('b',[_c('p',[_c('i',{staticClass:\"fas fa-trash-alt\",staticStyle:{\"font-size\":\"40px\"},on:{\"click\":_vm.deleteSelection}})]),_vm._v(\"Delete selection\")]),_c('b',{attrs:{\"href\":\"#\"}},[_vm._v(\"___________\")]),_c('div',{staticClass:\"create\"},[_c('br'),(_vm.database=='errortype')?_c('b',[_c('p',[_c('i',{staticClass:\"fas fa-plus-square\",staticStyle:{\"font-size\":\"40px\"},on:{\"click\":_vm.newError}})]),_vm._v(\"Create error\")]):_vm._e(),(_vm.database=='learningoutcome')?_c('b',[_c('p',[_c('i',{staticClass:\"fas fa-plus-square\",staticStyle:{\"font-size\":\"40px\"},on:{\"click\":_vm.newLearningOutcome}})]),_vm._v(\"Create learning outcome\")]):_vm._e(),(_vm.database=='contentsection')?_c('b',[_c('p',[_c('i',{staticClass:\"fas fa-plus-square\",staticStyle:{\"font-size\":\"40px\"},on:{\"click\":_vm.newContentSection}})]),_vm._v(\"Create content section\")]):_vm._e(),(_vm.database=='domainconcept')?_c('b',[_c('p',[_c('i',{staticClass:\"fas fa-plus-square\",staticStyle:{\"font-size\":\"40px\"},on:{\"click\":_vm.newDomainConcept}})]),_vm._v(\"Create domain concept\")]):_vm._e(),(_vm.database=='learningitem')?_c('b',[_c('p',[_c('i',{staticClass:\"fas fa-plus-square\",staticStyle:{\"font-size\":\"40px\"},on:{\"click\":_vm.newLearningItem}})]),_vm._v(\"Create learning item\")]):_vm._e(),_c('b',{attrs:{\"href\":\"#\"}},[_vm._v(\"___________\")])])]),_c('div',{attrs:{\"id\":\"core\"}},[_c('br'),_c('div',[_c('button',{staticClass:\"btn btn-success\",attrs:{\"id\":\"errortype-database\"},on:{\"click\":function($event){_vm.changeDatabase('errortype')}}},[_vm._v(\" Errortypes \")]),_c('button',{staticClass:\"btn btn-success\",attrs:{\"id\":\"learningoutcome-database\"},on:{\"click\":function($event){_vm.changeDatabase('learningoutcome')}}},[_vm._v(\" Learning Outcomes \")]),_c('button',{staticClass:\"btn btn-success\",attrs:{\"id\":\"learningitem-database\"},on:{\"click\":function($event){_vm.changeDatabase('learningitem')}}},[_vm._v(\" Learning Items \")]),_c('button',{staticClass:\"btn btn-success\",attrs:{\"id\":\"contentsection-database\"},on:{\"click\":function($event){_vm.changeDatabase('contentsection')}}},[_vm._v(\" Content Sections \")]),_c('button',{staticClass:\"btn btn-success\",attrs:{\"id\":\"domainconcept-database\"},on:{\"click\":function($event){_vm.changeDatabase('domainconcept')}}},[_vm._v(\" Domain Concepts \")])]),_c('br'),_c('div',{staticClass:\"text-center\"},[((_vm.errorTypes == null && _vm.database=='errortype')\n              || (_vm.learningOutcomes == null && _vm.database=='learningoutcome')\n              || (_vm.contentSections == null && _vm.database=='contentsection')\n              || (_vm.domainConcepts == null && _vm.database=='domainconcept')\n              || (_vm.learningItems == null && _vm.database=='learningitem'))?_c('div',{staticStyle:{\"display\":\"flex\",\"align-items\":\"center\",\"justify-content\":\"center\"}},[_c('circle2')],1):_vm._e()]),(_vm.errorTypes != null && _vm.database == 'errortype')?_c('div',{},[_c('table',{staticClass:\"table table-bordered\"},[_vm._m(0),_c('tbody',_vm._l((_vm.errorTypes),function(errortype){return _c('tr',{key:errortype._id},[_c('td',[_c('div',{staticClass:\"pretty p-icon p-round p-smooth\"},[_c('input',{attrs:{\"type\":\"checkbox\",\"id\":errortype._id},on:{\"input\":function($event){_vm.updateSelected(errortype._id)}}}),_vm._m(1,true)])]),_c('td',[_vm._v(_vm._s(errortype.name))]),_c('td',[_vm._v(_vm._s(errortype.weight))]),_c('td',[_vm._v(_vm._s(errortype.description))]),_c('td',[_vm._v(_vm._s(_vm.learningOutcomeIDToName[errortype.learningOutcome]))]),_c('td',[_c('div',{staticStyle:{\"display\":\"flex\",\"align-items\":\"center\",\"justify-content\":\"center\"}},[_c('div',[_c('button',{staticClass:\"btn btn-sm btn-outline-secondary\",on:{\"click\":function($event){_vm.editError(errortype)}}},[_vm._v(\"Edit Errortype \")])])])])])}),0)])]):_vm._e(),(_vm.learningOutcomes != null && _vm.database == 'learningoutcome')?_c('div',{},[_c('table',{staticClass:\"table table-bordered\"},[_vm._m(2),_c('tbody',_vm._l((_vm.learningOutcomes),function(learningoutcome){return _c('tr',{key:learningoutcome._id},[_c('td',[_c('div',{staticClass:\"pretty p-icon p-round p-smooth\"},[_c('input',{attrs:{\"type\":\"checkbox\",\"id\":learningoutcome._id},on:{\"input\":function($event){_vm.updateSelected(learningoutcome._id)}}}),_vm._m(3,true)])]),_c('td',[_vm._v(_vm._s(learningoutcome.name))]),_c('td',[_vm._v(_vm._s(learningoutcome.BloomLevelCognitive))]),_c('td',[_vm._v(_vm._s(learningoutcome.BloomLevelKnowledge))]),_c('td',[_vm._v(_vm._s(_vm.multipleLearningItemIDsToString(learningoutcome.LearningItems)))]),_c('td',[_vm._v(_vm._s(_vm.multipleContentSectionIDsToString(learningoutcome.ContentSections)))]),_c('td',[_vm._v(_vm._s(_vm.multipleDomainConceptIDsToString(learningoutcome.DomainConcepts)))]),_c('td',[_c('div',{staticStyle:{\"display\":\"flex\",\"align-items\":\"center\",\"justify-content\":\"center\"}},[_c('div',[_c('button',{staticClass:\"btn btn-sm btn-outline-secondary\",on:{\"click\":function($event){_vm.editLearningOutcome(learningoutcome)}}},[_vm._v(\"Edit Learning Outcome \")])])])])])}),0)])]):_vm._e(),(_vm.learningItems != null && _vm.database == 'learningitem')?_c('div',{},[_c('table',{staticClass:\"table table-bordered\"},[_vm._m(4),_c('tbody',_vm._l((_vm.learningItems),function(learningitem){return _c('tr',{key:learningitem._id},[_c('td',[_c('div',{staticClass:\"pretty p-icon p-round p-smooth\"},[_c('input',{attrs:{\"type\":\"checkbox\",\"id\":learningitem._id},on:{\"input\":function($event){_vm.updateSelected(learningitem._id)}}}),_vm._m(5,true)])]),_c('td',[_vm._v(_vm._s(learningitem.name))]),_c('td',[_c('a',{staticClass:\"linkified\",attrs:{\"href\":_vm.getValidURL(learningitem.url),\"target\":\"_blank\"}},[_vm._v(_vm._s(learningitem.url))])]),_c('td',[_vm._v(_vm._s(learningitem.difficulty))]),_c('td',[_vm._v(_vm._s(_vm.multipleContentSectionIDsToString(learningitem.ContentSections)))]),_c('td',[_vm._v(_vm._s(_vm.multipleDomainConceptIDsToString(learningitem.DomainConcepts)))]),_c('td',[_c('div',{staticStyle:{\"display\":\"flex\",\"align-items\":\"center\",\"justify-content\":\"center\"}},[_c('div',[_c('button',{staticClass:\"btn btn-sm btn-outline-secondary\",on:{\"click\":function($event){_vm.editLearningItem(learningitem)}}},[_vm._v(\"Edit Learning Item \")])])])])])}),0)])]):_vm._e(),(_vm.contentSections != null && _vm.database == 'contentsection')?_c('div',{},[_c('table',{staticClass:\"table table-bordered\"},[_vm._m(6),_c('tbody',_vm._l((_vm.contentSections),function(contentsection){return _c('tr',{key:contentsection._id},[_c('td',[_c('div',{staticClass:\"pretty p-icon p-round p-smooth\"},[_c('input',{attrs:{\"type\":\"checkbox\",\"id\":contentsection._id},on:{\"input\":function($event){_vm.updateSelected(contentsection._id)}}}),_vm._m(7,true)])]),_c('td',[_vm._v(_vm._s(contentsection.name))]),_c('td',[_vm._v(_vm._s(_vm.multipleDomainConceptIDsToString(contentsection.DomainConcepts)))]),_c('td',[_c('div',{staticStyle:{\"display\":\"flex\",\"align-items\":\"center\",\"justify-content\":\"center\"}},[_c('div',[_c('button',{staticClass:\"btn btn-sm btn-outline-secondary\",on:{\"click\":function($event){_vm.editContentSection(contentsection)}}},[_vm._v(\"Edit Content Section \")])])])])])}),0)])]):_vm._e(),(_vm.domainConcepts != null && _vm.database == 'domainconcept')?_c('div',{},[_c('table',{staticClass:\"table table-bordered\"},[_vm._m(8),_c('tbody',_vm._l((_vm.domainConcepts),function(domainconcept){return _c('tr',{key:domainconcept._id},[_c('td',[_c('div',{staticClass:\"pretty p-icon p-round p-smooth\"},[_c('input',{attrs:{\"type\":\"checkbox\",\"id\":domainconcept._id},on:{\"input\":function($event){_vm.updateSelected(domainconcept._id)}}}),_vm._m(9,true)])]),_c('td',[_vm._v(_vm._s(domainconcept.name))]),_c('td',[_c('div',{staticStyle:{\"display\":\"flex\",\"align-items\":\"center\",\"justify-content\":\"center\"}},[_c('div',[_c('button',{staticClass:\"btn btn-sm btn-outline-secondary\",on:{\"click\":function($event){_vm.editDomainConcept(domainconcept)}}},[_vm._v(\"Edit Domain Concept \")])])])])])}),0)])]):_vm._e()])],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',{staticClass:\"thead-dark\"},[_c('tr',[_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Select \")]),_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Type of error\")]),_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Weight\")]),_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Description\")]),_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Learning outcome\")]),_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Actions\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"state p-success\"},[_c('i',{staticClass:\"icon mdi mdi-check\"}),_c('label')])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',{staticClass:\"thead-dark\"},[_c('tr',[_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Select \")]),_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Learning outcome\")]),_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"BloomLevel Cognitive\")]),_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"BloomLevel Knowledge\")]),_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Learning Items\")]),_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Content Sections\")]),_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Domain Concepts\")]),_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Actions\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"state p-success\"},[_c('i',{staticClass:\"icon mdi mdi-check\"}),_c('label')])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',{staticClass:\"thead-dark\"},[_c('tr',[_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Select \")]),_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Learning item\")]),_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"URL\")]),_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Difficulty\")]),_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Content Sections\")]),_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Domain Concepts\")]),_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Actions\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"state p-success\"},[_c('i',{staticClass:\"icon mdi mdi-check\"}),_c('label')])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',{staticClass:\"thead-dark\"},[_c('tr',[_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Select \")]),_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Content section\")]),_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Domain Concepts\")]),_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Actions\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"state p-success\"},[_c('i',{staticClass:\"icon mdi mdi-check\"}),_c('label')])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('thead',{staticClass:\"thead-dark\"},[_c('tr',[_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Select \")]),_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Domain Concept\")]),_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Actions\")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"state p-success\"},[_c('i',{staticClass:\"icon mdi mdi-check\"}),_c('label')])}]\n\nexport { render, staticRenderFns }","export const server = {\n    baseURL: 'https://ku-leuven-grader-server.herokuapp.com'\n}\n","<template>\n    <div class=\"container-fluid\">\n\n      <!-- Popup indicating mistake based on the global string variable 'faultMessage' which updates based on the kind of fault/error !-->\n      <modal name=\"fault-popup\" height=\"150\" width=\"900\" style=\"background: transparent;\">\n            <div style=\"text-align: center;\"><br>\n                <h3>{{this.faultMessage}}</h3>\n            </div>\n      </modal>\n\n      <!-- Import warning popup !-->\n      <!-- Is always shown when user tries to import a new database, the old one will be lost !-->\n        <modal name=\"warning-popup\"  height=\"270\" style=\"background: transparent;\" >\n            <div class=\"col-md-12 form-wrapper\" style=\"text-align: center;\">\n              <br><h2>Are you sure you want to import a new database?</h2><br>\n              <h2>The current data in the database will be lost.</h2>\n                <div class=\"form-group col-md-4 pull-right\">\n                    <button class=\"btn btn-success\" @click=\"triggerUpload\"> Yes </button>\n                    <button id=\"cancelButton\" class=\"btn btn-success\"  @click=\"hideImportWarning\"> No </button>  \n                </div>    \n        </div>\n      </modal>\n\n      <!-- Popup for creating/editing errortype !-->\n      <!-- Based on the global variable 'modus' some text/markup will be different: 'create' or 'edit' !-->\n        <modal name=\"create-errortype\"  height=\"600\" style=\"background: transparent;\" @closed=\"hideErrorTypePopup\" >\n            <div class=\"col-md-12 form-wrapper\" style=\"text-align: center;\">\n            <br><h2 v-if=\"modus=='create'\"> Create Errortype </h2>\n                <h2 v-if=\"modus=='edit'\"> Edit Errortype </h2>\n                <div class=\"form-group col-md-12\">\n                    <label for=\"title\"> Name </label>\n                    <input v-if=\"modus=='create'\" style=\"border: 2px solid red;\" @input=\"changeInErrorType\" type=\"text\" id=\"name\" v-model=\"errorName\" name=\"title\" class=\"form-control\" placeholder=\"Enter name\">\n                    <input v-if=\"modus=='edit'\" style=\"border: 2px solid green;\" @input=\"changeInErrorType\" type=\"text\" id=\"name\" v-model=\"errorName\" name=\"title\" class=\"form-control\" placeholder=\"Enter name\">\n                </div>\n                <div class=\"form-group col-md-12\">\n                    <label for=\"title\"> Weight </label>\n                    <input v-if=\"modus=='create'\" style=\"border: 2px solid red;\" @input=\"changeInErrorType\" type=\"text\" id=\"weight\" v-model=\"errorWeight\" name=\"title\" class=\"form-control\" placeholder=\"Enter weight\">\n                    <input v-if=\"modus=='edit'\" style=\"border: 2px solid green;\" @input=\"changeInErrorType\" type=\"text\" id=\"weight\" v-model=\"errorWeight\" name=\"title\" class=\"form-control\" placeholder=\"Enter weight\">\n                </div>\n                <div class=\"form-group col-md-12\">\n                    <label for=\"description\"> Description </label>\n                    <input v-if=\"modus=='create'\" style=\"border: 2px solid red;\" @input=\"changeInErrorType\" type=\"text\" id=\"description\" v-model=\"errorDescription\" name=\"description\" class=\"form-control\" placeholder=\"Enter description\">\n                    <input v-if=\"modus=='edit'\" style=\"border: 2px solid green;\" @input=\"changeInErrorType\" type=\"text\" id=\"description\" v-model=\"errorDescription\" name=\"description\" class=\"form-control\" placeholder=\"Enter description\">\n                </div>\n                <label for=\"learningOutcome\"> Learning outcome </label>\n                <div style=\"display: flex;align-items: center;justify-content: center;\">\n                <div id=\"dropdown\" style=\"width: 435px; border: 2px solid green; display: flex;align-items: center;justify-content: center;\">\n                  <multiselect \n                      v-model=\"selectedLearningOutcome\"\n                      :options=\"Object.values(dropdownLearningOutcomes)\"\n                      :maxHeight=\"180\"\n                      @input=\"changeInErrorType\"\n                      placeholder=\"Select learning outcome\"\n                      style=\"width: 435px;\"\n                  ></multiselect></div></div>\n                <br>\n                <div class=\"form-group col-md-4 pull-right\">\n                    <button v-if=\"modus=='create'\" class=\"btn btn-success\" @click=\"pushErrorType\"> Create new errortype </button>\n                    <button v-if=\"modus=='edit'\" class=\"btn btn-success\" @click=\"pushErrorType\"> Edit errortype </button>\n                    <button id=\"cancelButton\" class=\"btn btn-success\"  @click=\"hideErrorTypePopup\"> Cancel </button>  \n                </div>    \n        </div>\n      </modal>\n\n      <!-- Popup for creating/editing learning outcome !-->\n      <!-- Based on the global variable 'modus' some text/markup will be different: 'create' or 'edit' !-->\n        <modal name=\"create-learningoutcome\"  height=\"780\" style=\"background: transparent;\" @closed=\"hideLearningOutcomePopup\">\n            <div class=\"col-md-12 form-wrapper\" style=\"text-align: center;\">\n            <br><h2 v-if=\"modus=='create'\"> Create learning outcome </h2>\n                <h2 v-if=\"modus=='edit'\"> Edit learning outcome </h2>\n                <div class=\"form-group col-md-12\">\n                    <label for=\"title\"> Learning outcome </label>\n                    <input v-if=\"modus=='create'\" style=\"border: 2px solid red;\" @input=\"changeInLearningOutcome\" type=\"text\" id=\"learningName\" v-model=\"learningName\" name=\"title\" class=\"form-control\" placeholder=\"Enter name\">\n                    <input v-if=\"modus=='edit'\" style=\"border: 2px solid green;\" @input=\"changeInLearningOutcome\" type=\"text\" id=\"learningName\" v-model=\"learningName\" name=\"title\" class=\"form-control\" placeholder=\"Enter name\">\n                </div>\n                <div class=\"form-group col-md-12\">\n                    <label for=\"title\"> BloomLevel Cognitive </label>\n                    <input v-if=\"modus=='create'\" style=\"border: 2px solid red;\" @input=\"changeInLearningOutcome\" type=\"text\" id=\"learningBloomLevelCognitive\" v-model=\"learningBloomLevelCognitive\" name=\"title\" class=\"form-control\" placeholder=\"Enter BloomLevel Cognitive\">\n                    <input v-if=\"modus=='edit'\" style=\"border: 2px solid green;\" @input=\"changeInLearningOutcome\" type=\"text\" id=\"learningBloomLevelCognitive\" v-model=\"learningBloomLevelCognitive\" name=\"title\" class=\"form-control\" placeholder=\"Enter BloomLevel Cognitive\">\n                </div>\n                <div class=\"form-group col-md-12\">\n                    <label for=\"description\"> BloomLevel Knowledge </label>\n                    <input v-if=\"modus=='create'\" style=\"border: 2px solid red;\" @input=\"changeInLearningOutcome\" type=\"text\" id=\"learningBloomLevelKnowledge\" v-model=\"learningBloomLevelKnowledge\" name=\"description\" class=\"form-control\" placeholder=\"Enter BloomLevel Knowledge\">\n                    <input v-if=\"modus=='edit'\" style=\"border: 2px solid green;\" @input=\"changeInLearningOutcome\" type=\"text\" id=\"learningBloomLevelKnowledge\" v-model=\"learningBloomLevelKnowledge\" name=\"description\" class=\"form-control\" placeholder=\"Enter BloomLevel Knowledge\">\n                </div>  \n                <label for=\"description\"> Learning item(s) </label>\n                <div style=\"display: flex;align-items: center;justify-content: center;\">\n                <div style=\"width: 435px; border: 2px solid green; display: flex;align-items: center;justify-content: center;\">\n                <multiselect\n                      v-model=\"selectedLearningItems\"\n                      :options=\"Object.values(dropdownLearningItems)\"\n                      :maxHeight=\"180\"\n                      @input=\"changeInLearningOutcome\"\n                      placeholder=\"Select learning item\"\n                      style=\"width: 435px;\"\n                      :multiple=\"true\"\n                ></multiselect></div></div><br>\n                <label for=\"description\"> Content Section(s) </label>\n                <div style=\"display: flex;align-items: center;justify-content: center;\">\n                <div style=\"width: 435px; border: 2px solid green; display: flex;align-items: center;justify-content: center;\">\n                <multiselect\n                      v-model=\"selectedContentSections\"\n                      :options=\"Object.values(dropdownContentSections)\"\n                      :maxHeight=\"180\"\n                      @input=\"changeInLearningOutcome\"\n                      placeholder=\"Select content section\"\n                      style=\"width: 435px;\"\n                      :multiple=\"true\"\n                ></multiselect></div></div><br>\n                <label for=\"description\"> Domain Concept(s) </label>\n                <div style=\"display: flex;align-items: center;justify-content: center;\">\n                <div style=\"width: 435px; border: 2px solid green; display: flex;align-items: center;justify-content: center;\">\n                <multiselect \n                      v-model=\"selectedDomainConcepts\"\n                      :options=\"Object.values(dropdownDomainConcepts)\"\n                      :maxHeight=\"180\"\n                      @input=\"changeInLearningOutcome\"\n                      placeholder=\"Select domain concept(s)\"\n                      style=\"width: 435px;\"\n                      :multiple=\"true\"\n                ></multiselect></div></div><br><br><br><br>\n                <div class=\"form-group col-md-4 pull-right\">\n                    <button v-if=\"modus=='create'\" class=\"btn btn-success\" @click=\"pushLearningOutcome\"> Create new learning outcome </button>\n                    <button v-if=\"modus=='edit'\" class=\"btn btn-success\" @click=\"pushLearningOutcome\"> Edit learning outcome </button>\n                    <button id=\"cancelButton\" class=\"btn btn-success\"  @click=\"hideLearningOutcomePopup\"> Cancel </button>  \n                </div>  \n        </div>\n      </modal>\n\n      <!-- Popup for creating/editing learning item !-->\n      <!-- Based on the global variable 'modus' some text/markup will be different: 'create' or 'edit' !-->\n        <modal name=\"create-learningitem\"  height=\"720\" style=\"background: transparent;\" @closed=\"hideLearningItemPopup\">\n            <div class=\"col-md-12 form-wrapper\" style=\"text-align: center;\">\n            <br><h2 v-if=\"modus=='create'\"> Create learning item </h2>\n                <h2 v-if=\"modus=='edit'\"> Edit learning item </h2>\n                <div class=\"form-group col-md-12\">\n                    <label for=\"title\"> Learning item </label>\n                    <input v-if=\"modus=='create'\" style=\"border: 2px solid red;\" @input=\"changeInLearningItem\" type=\"text\" id=\"learningItemName\" v-model=\"learningItemName\" name=\"title\" class=\"form-control\" placeholder=\"Enter name\">\n                    <input v-if=\"modus=='edit'\" style=\"border: 2px solid green;\" @input=\"changeInLearningItem\" type=\"text\" id=\"learningItemName\" v-model=\"learningItemName\" name=\"title\" class=\"form-control\" placeholder=\"Enter name\">\n                </div>\n                <div class=\"form-group col-md-12\">\n                    <label for=\"title\"> URL </label>\n                    <input v-if=\"modus=='create'\" style=\"border: 2px solid red;\" @input=\"changeInLearningItem\" type=\"text\" id=\"learningItemURL\" v-model=\"learningItemURL\" name=\"title\" class=\"form-control\" placeholder=\"Enter URL\">\n                    <input v-if=\"modus=='edit'\" style=\"border: 2px solid green;\" @input=\"changeInLearningItem\" type=\"text\" id=\"learningItemURL\" v-model=\"learningItemURL\" name=\"title\" class=\"form-control\" placeholder=\"Enter URL\">\n                </div>\n                \n                <div class=\"form-group col-md-12\">\n                    <label for=\"title\"> Is an exercise item? <input @input=\"changeInLearningItem\" type=\"checkbox\" id=\"checkbox\" v-model=\"learningItemIsExercise\"></label>\n                </div>\n                <div v-if=\"learningItemIsExercise\" class=\"form-group col-md-12\">\n                    <label for=\"description\"> Difficulty </label>\n                    <input v-if=\"modus=='create'\" style=\"border: 2px solid red;\" @input=\"changeInLearningItem\" type=\"text\" id=\"learningItemDifficulty\" v-model=\"learningItemDifficulty\" name=\"description\" class=\"form-control\" placeholder=\"Enter difficulty\">\n                    <input v-if=\"modus=='edit' && learningItemDifficulty.length > 0\" style=\"border: 2px solid green;\" @input=\"changeInLearningItem\" type=\"text\" id=\"learningItemDifficulty\" v-model=\"learningItemDifficulty\" name=\"description\" class=\"form-control\" placeholder=\"Enter difficulty\">\n                    <input v-if=\"modus=='edit' && learningItemDifficulty.length < 1\" style=\"border: 2px solid red;\" @input=\"changeInLearningItem\" type=\"text\" id=\"learningItemDifficulty\" v-model=\"learningItemDifficulty\" name=\"description\" class=\"form-control\" placeholder=\"Enter difficulty\">\n                </div>  \n                <label for=\"description\"> Content Section(s) </label>\n                <div style=\"display: flex;align-items: center;justify-content: center;\">\n                <div style=\"width: 435px; border: 2px solid green; display: flex;align-items: center;justify-content: center;\">\n                <multiselect\n                      v-model=\"selectedContentSections\"\n                      :options=\"Object.values(dropdownContentSections)\"\n                      :maxHeight=\"180\"\n                      @input=\"changeInLearningItem\"\n                      placeholder=\"Select content section(s)\"\n                      style=\"width: 435px;\"\n                      :multiple=\"true\"\n                ></multiselect></div></div><br>\n                <label for=\"description\"> Domain Concept(s) </label>\n                <div style=\"display: flex;align-items: center;justify-content: center;\">\n                <div style=\"width: 435px; border: 2px solid green; display: flex;align-items: center;justify-content: center;\">\n                <multiselect\n                      v-model=\"selectedDomainConcepts\"\n                      :options=\"Object.values(dropdownDomainConcepts)\"\n                      :maxHeight=\"180\"\n                      @input=\"changeInLearningItem\"\n                      placeholder=\"Select domain concept(s)\"\n                      style=\"width: 435px;\"\n                      :multiple=\"true\"\n                ></multiselect></div></div><br><br><br><br>\n                <div class=\"form-group col-md-4 pull-right\">\n                    <button v-if=\"modus=='create'\" class=\"btn btn-success\" @click=\"pushLearningItem\"> Create new learning item </button>\n                    <button v-if=\"modus=='edit'\" class=\"btn btn-success\" @click=\"pushLearningItem\"> Edit learning item </button>\n                    <button id=\"cancelButton\" class=\"btn btn-success\"  @click=\"hideLearningItemPopup\"> Cancel </button>  \n                </div>  \n        </div>\n      </modal>\n\n      <!-- Popup for creating/editing content section !-->\n      <!-- Based on the global variable 'modus' some text/markup will be different: 'create' or 'edit' !-->\n        <modal name=\"create-contentsection\"  height=\"480\" style=\"background: transparent;\" @closed=\"hideContentSectionPopup\">\n            <div class=\"col-md-12 form-wrapper\" style=\"text-align: center;\">\n            <br><h2 v-if=\"modus=='create'\"> Create content section </h2>\n                <h2 v-if=\"modus=='edit'\"> Edit content section </h2>\n                <div class=\"form-group col-md-12\">\n                    <label for=\"title\"> Content section </label>\n                    <input v-if=\"modus=='create'\" style=\"border: 2px solid red;\" @input=\"changeInContentSection\" type=\"text\" id=\"contentSectionName\" v-model=\"contentSectionName\" name=\"title\" class=\"form-control\" placeholder=\"Enter name\">\n                    <input v-if=\"modus=='edit'\" style=\"border: 2px solid green;\" @input=\"changeInContentSection\" type=\"text\" id=\"contentSectionName\" v-model=\"contentSectionName\" name=\"title\" class=\"form-control\" placeholder=\"Enter name\">\n                </div>\n                <label for=\"description\"> Domain Concept(s) </label>\n                \n                <div style=\"display: flex;align-items: center;justify-content: center;\">\n                <div id=\"contentsection-dropdown\" v-if=\"selectedDomainConcepts != null\" style=\"width: 435px; border: 2px solid green; display: flex;align-items: center;justify-content: center;\">\n                  <multiselect \n                      v-model=\"selectedDomainConcepts\"\n                      :options=\"Object.values(dropdownDomainConcepts)\"\n                      :maxHeight=\"180\"\n                      @input=\"changeInContentSection\"\n                      placeholder=\"Select domain concept(s)\"\n                      style=\"width: 435px;\"\n                      :multiple=\"true\"\n                ></multiselect></div></div>\n                <div style=\"display: flex;align-items: center;justify-content: center;\">\n                <div id=\"contentsection-dropdown\" v-if=\"selectedDomainConcepts == null\" style=\"width: 435px; border: 2px solid red; display: flex;align-items: center;justify-content: center;\">\n                  <multiselect \n                      v-model=\"selectedDomainConcepts\"\n                      :options=\"Object.values(dropdownDomainConcepts)\"\n                      :maxHeight=\"180\"\n                      @input=\"changeInContentSection\"\n                      placeholder=\"Select domain concept(s)\"\n                      style=\"width: 435px;\"\n                      :multiple=\"true\"\n                ></multiselect></div></div><br><br><br><br>\n                <div class=\"form-group col-md-4 pull-right\">\n                    <button v-if=\"modus=='create'\" class=\"btn btn-success\" @click=\"pushContentSection\"> Create new content section </button>\n                    <button v-if=\"modus=='edit'\" class=\"btn btn-success\" @click=\"pushContentSection\"> Edit content section </button>\n                    <button id=\"cancelButton\" class=\"btn btn-success\"  @click=\"hideContentSectionPopup\"> Cancel </button>  \n                </div>  \n        </div>\n      </modal>\n\n      <!-- Popup for creating/editing domain concept !-->\n      <!-- Based on the global variable 'modus' some text/markup will be different: 'create' or 'edit' !-->\n        <modal name=\"create-domainconcept\"  height=\"200\" style=\"background: transparent;\" @closed=\"hideDomainConceptPopup\">\n            <div class=\"col-md-12 form-wrapper\" style=\"text-align: center;\">\n            <br><h2 v-if=\"modus=='create'\"> Create domain concept </h2>\n                <h2 v-if=\"modus=='edit'\"> Edit domain concept </h2>\n                <div class=\"form-group col-md-12\">\n                    <input v-if=\"modus=='create'\" style=\"border: 2px solid red;\" @input=\"changeInDomainConcept\" type=\"text\" id=\"domainConceptName\" v-model=\"domainConceptName\" name=\"title\" class=\"form-control\" placeholder=\"Enter name\">\n                    <input v-if=\"modus=='edit'\" style=\"border: 2px solid green;\" @input=\"changeInDomainConcept\" type=\"text\" id=\"domainConceptName\" v-model=\"domainConceptName\" name=\"title\" class=\"form-control\" placeholder=\"Enter name\">\n                </div>\n                <div class=\"form-group col-md-4 pull-right\">\n                    <button v-if=\"modus=='create'\" class=\"btn btn-success\" @click=\"pushDomainConcept\"> Create new domain concept </button>\n                    <button v-if=\"modus=='edit'\" class=\"btn btn-success\" @click=\"pushDomainConcept\"> Edit domain concept </button>\n                    <button id=\"cancelButton\" class=\"btn btn-success\"  @click=\"hideDomainConceptPopup\"> Cancel </button>  \n                </div>    \n          </div>\n      </modal>\n\n      <!-- Contains all the buttons in the left-side panel when working in the database !-->\n      <div class=\"sidebar\">\n        <!-- Button for uploading a database !-->\n            <div id=\"import-export\">\n                <b href=\"#\">___________</b><br>\n                <input type=\"file\" id=\"input-excel\" accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"/>\n                <!-- When importing a new database, a pop-up will give an alert that the current database will be lost !-->\n                <b><p><i @click=\"importWarning\" class=\"fas fa-file-upload\" style=\"font-size: 40px;\"></i></p>Import database</b>\n                <b href=\"#\">___________</b><br>\n                <!-- Button for exporting, downloading, the current database locally !-->\n                <b><p><i @click=\"exportDatabase\" class=\"fas fa-file-download\" style=\"font-size: 40px;\"></i></p>Download database</b>\n                <b href=\"#\">___________</b>\n            </div>\n            <br>\n            <!-- Button for deleting the currently selected items in the currently opened table !-->\n            <b><p><i @click=\"deleteSelection\" class=\"fas fa-trash-alt\" style=\"font-size: 40px;\"></i></p>Delete selection</b>\n            <b href=\"#\">___________</b>\n            <div class=\"create\"><br>\n                <!-- The create button + the text/function under it which updates based on which table is currently opened!-->\n                <b v-if=\"database=='errortype'\" ><p><i @click=\"newError\" class=\"fas fa-plus-square\" style=\"font-size: 40px;\"></i> </p>Create error</b>\n                <b v-if=\"database=='learningoutcome'\" ><p><i @click=\"newLearningOutcome\" class=\"fas fa-plus-square\" style=\"font-size: 40px;\"></i> </p>Create learning outcome</b>\n                <b v-if=\"database=='contentsection'\" ><p><i @click=\"newContentSection\" class=\"fas fa-plus-square\" style=\"font-size: 40px;\"></i> </p>Create content section</b>\n                <b v-if=\"database=='domainconcept'\" ><p><i @click=\"newDomainConcept\" class=\"fas fa-plus-square\" style=\"font-size: 40px;\"></i> </p>Create domain concept</b>\n                <b v-if=\"database=='learningitem'\" ><p><i @click=\"newLearningItem\" class=\"fas fa-plus-square\" style=\"font-size: 40px;\"></i> </p>Create learning item</b>\n                <b href=\"#\">___________</b>\n            </div> \n        </div>\n        <div id=\"core\"><br>\n\n      <div>\n        <!-- Buttons to change between the tables in the database !-->\n        <button id=\"errortype-database\" class=\"btn btn-success\" @click=\"changeDatabase('errortype')\"> Errortypes </button>\n        <button id=\"learningoutcome-database\" class=\"btn btn-success\" @click=\"changeDatabase('learningoutcome')\"> Learning Outcomes </button>\n        <button id=\"learningitem-database\" class=\"btn btn-success\" @click=\"changeDatabase('learningitem')\"> Learning Items </button>\n        <button id=\"contentsection-database\" class=\"btn btn-success\" @click=\"changeDatabase('contentsection')\"> Content Sections </button>\n        <button id=\"domainconcept-database\" class=\"btn btn-success\" @click=\"changeDatabase('domainconcept')\"> Domain Concepts </button>\n      </div><br>\n\n      <!-- If the currently opened database is null, than no connection is possible with the database server for some reason and a loading circle icon is displayed!-->\n      <div class=\"text-center\">\n       <div v-if=\"(errorTypes == null && database=='errortype')\n                  || (learningOutcomes == null && database=='learningoutcome')\n                  || (contentSections == null && database=='contentsection')\n                  || (domainConcepts == null && database=='domainconcept')\n                  || (learningItems == null && database=='learningitem')\" \n                  style=\"display: flex;align-items: center;justify-content: center;\">\n            <circle2></circle2>\n        </div>\n      </div>\n\n      <!-- The errortype table and its columns -->\n      <div v-if=\"errorTypes != null && database == 'errortype'\" class=\"\">\n          <table class=\"table table-bordered\">\n            <thead class=\"thead-dark\">\n              <tr>\n                <th scope=\"col\">Select </th>\n                <th scope=\"col\">Type of error</th>\n                <th scope=\"col\">Weight</th>\n                <th scope=\"col\">Description</th>\n                <th scope=\"col\">Learning outcome</th>\n                <th scope=\"col\">Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"errortype in errorTypes\" :key=\"errortype._id\">\n                <td>\n                  <div class=\"pretty p-icon p-round p-smooth\">\n                    <input @input=\"updateSelected(errortype._id)\" type=\"checkbox\" v-bind:id=\"errortype._id\"/>\n                    <div class=\"state p-success\" >\n                        <i class=\"icon mdi mdi-check\"></i>\n                        <label></label>\n                    </div>\n                  </div>\n                </td>\n                <td>{{ errortype.name }}</td>\n                <td>{{ errortype.weight }}</td>\n                <td>{{ errortype.description }}</td>\n                <td>{{ learningOutcomeIDToName[errortype.learningOutcome] }}</td>\n                <td>\n                  <div style=\"display: flex;align-items: center;justify-content: center;\">\n                    <div>\n                      <button @click=\"editError(errortype)\" class=\"btn btn-sm btn-outline-secondary\">Edit Errortype </button>\n                    </div>\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n      <!-- The learning outcome table and its columns -->\n      <div v-if=\"learningOutcomes != null && database == 'learningoutcome'\" class=\"\">\n          <table class=\"table table-bordered\">\n            <thead class=\"thead-dark\">\n              <tr>\n                <th scope=\"col\">Select </th>\n                <th scope=\"col\">Learning outcome</th>\n                <th scope=\"col\">BloomLevel Cognitive</th>\n                <th scope=\"col\">BloomLevel Knowledge</th>\n                <th scope=\"col\">Learning Items</th>\n                <th scope=\"col\">Content Sections</th>\n                <th scope=\"col\">Domain Concepts</th>\n                <th scope=\"col\">Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"learningoutcome in learningOutcomes\" :key=\"learningoutcome._id\">\n                <td>\n                  <div class=\"pretty p-icon p-round p-smooth\">\n                    <input @input=\"updateSelected(learningoutcome._id)\" type=\"checkbox\" v-bind:id=\"learningoutcome._id\"/>\n                    <div class=\"state p-success\" >\n                        <i class=\"icon mdi mdi-check\"></i>\n                        <label></label>\n                    </div>\n                  </div>\n                </td>\n                <td>{{ learningoutcome.name }}</td>\n                <td>{{ learningoutcome.BloomLevelCognitive }}</td>\n                <td>{{ learningoutcome.BloomLevelKnowledge }}</td>\n                <td>{{ multipleLearningItemIDsToString(learningoutcome.LearningItems)}}</td>\n                <td>{{ multipleContentSectionIDsToString(learningoutcome.ContentSections)}}</td>\n                <td>{{ multipleDomainConceptIDsToString(learningoutcome.DomainConcepts) }}</td>\n                <td>\n                  <div style=\"display: flex;align-items: center;justify-content: center;\">\n                    <div>\n                      <button @click=\"editLearningOutcome(learningoutcome)\" class=\"btn btn-sm btn-outline-secondary\">Edit Learning Outcome </button>\n                    </div>\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n      <!-- The learning item table and its columns -->\n      <div v-if=\"learningItems != null && database == 'learningitem'\" class=\"\">\n          <table class=\"table table-bordered\">\n            <thead class=\"thead-dark\">\n              <tr>\n                <th scope=\"col\">Select </th>\n                <th scope=\"col\">Learning item</th>\n                <th scope=\"col\">URL</th>\n                <th scope=\"col\">Difficulty</th>\n                <th scope=\"col\">Content Sections</th>\n                <th scope=\"col\">Domain Concepts</th>\n                <th scope=\"col\">Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"learningitem in learningItems\" :key=\"learningitem._id\">\n                <td>\n                  <div class=\"pretty p-icon p-round p-smooth\">\n                    <input @input=\"updateSelected(learningitem._id)\" type=\"checkbox\" v-bind:id=\"learningitem._id\"/>\n                    <div class=\"state p-success\" >\n                        <i class=\"icon mdi mdi-check\"></i>\n                        <label></label>\n                    </div>\n                  </div>\n                </td>\n                <td>{{ learningitem.name }}</td>\n                <td><a v-bind:href=\"getValidURL(learningitem.url)\" class=\"linkified\" target=\"_blank\">{{learningitem.url}}</a></td>\n                <td>{{ learningitem.difficulty }}</td>\n                <td>{{ multipleContentSectionIDsToString(learningitem.ContentSections) }}</td>\n                <td>{{ multipleDomainConceptIDsToString(learningitem.DomainConcepts) }}</td>\n                <td>\n                  <div style=\"display: flex;align-items: center;justify-content: center;\">\n                    <div>\n                      <button @click=\"editLearningItem(learningitem)\" class=\"btn btn-sm btn-outline-secondary\">Edit Learning Item </button>\n                    </div>\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n      <!-- The content section table and its columns -->\n      <div v-if=\"contentSections != null && database == 'contentsection'\" class=\"\">\n        <table class=\"table table-bordered\">\n          <thead class=\"thead-dark\">\n            <tr>\n              <th scope=\"col\">Select </th>\n              <th scope=\"col\">Content section</th>\n              <th scope=\"col\">Domain Concepts</th>\n              <th scope=\"col\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"contentsection in contentSections\" :key=\"contentsection._id\">\n              <td>\n                <div class=\"pretty p-icon p-round p-smooth\">\n                  <input @input=\"updateSelected(contentsection._id)\" type=\"checkbox\" v-bind:id=\"contentsection._id\"/>\n                  <div class=\"state p-success\" >\n                      <i class=\"icon mdi mdi-check\"></i>\n                      <label></label>\n                  </div>\n                </div>\n              </td>\n              <td>{{ contentsection.name }}</td>\n              <td>{{ multipleDomainConceptIDsToString(contentsection.DomainConcepts) }}</td>\n              <td>\n                <div style=\"display: flex;align-items: center;justify-content: center;\">\n                  <div>\n                    <button @click=\"editContentSection(contentsection)\" class=\"btn btn-sm btn-outline-secondary\">Edit Content Section </button>\n                  </div>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        </div>\n\n      <!-- The domain concept table and its columns -->\n      <div v-if=\"domainConcepts != null && database == 'domainconcept'\" class=\"\">\n          <table class=\"table table-bordered\">\n            <thead class=\"thead-dark\">\n              <tr>\n                <th scope=\"col\">Select </th>\n                <th scope=\"col\">Domain Concept</th>\n                <th scope=\"col\">Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"domainconcept in domainConcepts\" :key=\"domainconcept._id\">\n                <td>\n                  <div class=\"pretty p-icon p-round p-smooth\">\n                    <input @input=\"updateSelected(domainconcept._id)\" type=\"checkbox\" v-bind:id=\"domainconcept._id\"/>\n                    <div class=\"state p-success\" >\n                        <i class=\"icon mdi mdi-check\"></i>\n                        <label></label>\n                    </div>\n                  </div>\n                </td>\n                <td>{{ domainconcept.name }}</td>\n                <td>\n                  <div style=\"display: flex;align-items: center;justify-content: center;\">\n                    <div>\n                      <button @click=\"editDomainConcept(domainconcept)\" class=\"btn btn-sm btn-outline-secondary\">Edit Domain Concept </button>\n                    </div>\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n\n      </div>\n    </div>\n</template>\n\n<script>\nimport $ from 'jquery';\nimport { server } from \"../helper\";\nimport axios from \"axios\";\nimport alasql from 'alasql';\nimport XLSX from 'xlsx';\nalasql.utils.isBrowserify = false;\nalasql.utils.global.XLSX = XLSX;\nimport {Circle2} from 'vue-loading-spinner'\n\n\nexport default {\n  data() {\n    return {\n      // the global modus can be in \"create\"/\"edit\" modus depending on when clicked on \"create new X\" or \"edit X\" where X can be any item in any table\n      // many html code is based on this variable what kind of markup to display, e.g. in the Errortype popup \"Create Errortype\" has to be shown instead of \n      // \"Edit Errortype\" when clicking on Create errortype\n      // Also the pushErrortype function for example creates a new errortype when in \"create\" modus and edits an existing one when in \"edit\" modus\n      modus: \"create\", \n\n      // Variables containing whole tables from the data\n      errorTypes: null,       // this global variable contains all the currently existing errorTypes in the database\n      learningOutcomes: null, // this global variable contains all the currently existing learningOutcomes in the database\n      learningItems: null,    // this global variable contains all the currently existing learningItems in the database\n      contentSections: null,  // this global variable contains all the currently existing contentSections in the database\n      domainConcepts: null,   // this global variable contains all the currently existing domainConcepts in the database\n      \n      // Errortype variables, needed when creating/editing an ErrorType item in a pop-up\n      // These are linked with the inputfields in this pop-up\n      errorName: \"\",\n      errorWeight: \"\",\n      errorDescription: \"\",\n      errorID: null,\n      selectedLearningOutcome: null, // The variable which the multiselect will fill while choosing a learning outcome from a create/edit pop-up\n\n      // Learning outcome variables, needed when creating/editing a LearningOutcome item in a pop-up\n      // These are linked with the inputfields in this pop-up\n      learningName: \"\",\n      learningBloomLevelCognitive: \"\",\n      learningBloomLevelKnowledge: \"\",\n      learningID: null,\n      // The variable which the multiselect will fill while choosing a domain concept from a create/edit pop-up\n      selectedDomainConcepts: null, // used in this pop-ups: contentSection, LearningItem, LearningOutcome\n      selectedLearningItems: null,  // The variable which the multiselect will fill while choosing learning items from a create/edit pop-up\n\n      // Learning item variables, needed when creating/editing a LearningItem item in a pop-up\n      // These are linked with the inputfields in this pop-up\n      learningItemName: \"\",\n      learningItemURL: \"\",\n      learningItemIsExercise: false,\n      learningItemDifficulty: \"\",\n      learningItemID: null,\n      // The variable which the multiselect will fill while choosing a content section from a create/edit pop-up\n      selectedContentSections: null, // used in this pop-ups: LearningItem, LearningOutcome\n\n      // Content section variables, needed when creating/editing a ContentSection item in a pop-up\n      // These are linked with the inputfields in this pop-up\n      contentSectionName: \"\",\n      contentSectionID: null,\n\n      // Domain concept variables, needed when creating/editing a DomainConcept item in a pop-up\n      // These are linked with the inputfields in this pop-up\n      domainConceptName: \"\",\n      domainConceptID: null,\n\n      // Variables needed for maintaining different dropdowns items when creating/editing in a pop-up\n      dropdownErrorTypes: {}, // The list of strings as shown in the dropdown when selecting ErrorTypes\n      sortedErrorTypeIDs: [], // to find the ID of the ErrorTypes with the index in dropdownErrorTypes\n      errorTypeIDToName: {},  // Needed for converting ID's of the ErrorTypes ID's to their names \n\n      dropdownLearningOutcomes: {}, // The list of strings as shown in the dropdown when selecting learning outcomes\n      sortedOutcomeIDs: [],         // to find the ID of the learningoutcome with the index in dropdownLearningOutcomes\n      learningOutcomeIDToName: {},  // Needed for converting ID's of the learning outcome ID's to their names \n\n      dropdownDomainConcepts: {}, // The list of strings as shown in the dropdown when selecting domain concepts\n      sortedDomainConceptIDs: [], // to find the ID of the domain concept with the index in dropdownDomainConcepts\n      domainConceptIDToName: {},  // Needed for converting ID's of the domain concept ID's to their names \n\n      dropdownContentSections: {}, // The list of strings as shown in the dropdown when selecting content sections\n      sortedContentSectionIDs: [], // to find the ID of the content section with the index in dropdownContentSections\n      contentSectionIDToName: {},  // Needed for converting ID's of the content section ID's to their names\n\n      dropdownLearningItems: {}, // The list of strings as shown in the dropdown when selecting learning items\n      sortedLearningItemIDs: [], // to find the ID of the learning item with the index in dropdownLearningItems\n      learningItemIDToName: {},  // Needed for converting ID's of the learning items ID's to their names\n\n      selected: new Set(),   // this global variable is a set of all the currently selected items (to delete) in the currently opened table\n      faultMessage: \"empty\", // this global string variable is linked in the 'fault-popup' pop-up and contains the current text to be displayed in the pop-up, it is changed accordingly the fault just before opening the pop-up \n      database: \"errortype\", // this global string variable contains which table currently is viewed. It is changed whenever button is clicked to open another table\n    };\n  },\n  components: {\n    Circle2\n  },\n  mounted(){\n    $('#input-excel').hide()\n    var vm = this;\n    $('#input-excel').change(function(e){vm.importDatabase(e)}); // Add function to import the database when clicking on the import button\n    this.changeDatabase('errortype'); // The standard first opened database is 'errortype'\n  },\n  created() {\n    // Fetch all the data the first time\n    this.fetchDomainConcepts();\n    this.fetchContentSections();\n    this.fetchLearningItems();\n    this.fetchLearningOutcomes();\n    this.fetchErrorTypes();\n  },\n  methods: {\n    // This function will change for example google.com or www.google.com to https://google.com or https://www.google.com\n    getValidURL(url){\n      var prefix = 'http://';\n      var prefix2 = 'https://';\n      if ((url.substr(0, prefix.length) !== prefix) && (url.substr(0, prefix.length) !== prefix2)){\n          url = prefix + url;\n      }\n      return url;\n    },\n    // This function gets as input some specific Domain Concepts their ID's in a list and converts the ID's to one string which will be shown in the tables\n    multipleDomainConceptIDsToString(domainConcepts){\n      var tableString = \"\"\n      for(var i = 0; i < domainConcepts.length; i++){\n        tableString += this.domainConceptIDToName[domainConcepts[i]] + \", \"\n      }\n      return tableString.slice(0, tableString.length-2);\n    },\n    // This function gets as input some specific Content Sections their ID's in a list and converts the ID's to one string which will be shown in the tables\n    multipleContentSectionIDsToString(contentSections){\n      var tableString = \"\"\n      for(var i = 0; i < contentSections.length; i++){\n        tableString += this.contentSectionIDToName[contentSections[i]] + \", \"\n      }\n      return tableString.slice(0, tableString.length-2);\n    },\n    // This function gets as input some specific Learning Items their ID's in a list and converts the ID's to one string which will be shown in the tables\n    multipleLearningItemIDsToString(learningItems){\n      var tableString = \"\"\n      for(var i = 0; i < learningItems.length; i++){\n        tableString += this.learningItemIDToName[learningItems[i]] + \", \"\n      }\n      return tableString.slice(0, tableString.length-2);\n    },\n    // This function makes the warning visible when clicking on the button to import a database\n    importWarning(){\n      this.$modal.show('warning-popup');\n    },\n    // This function is called when one of the buttons is clicked to change to a different database\n    changeDatabase(database){\n      // Delete all the current tables and fetch all the tables again\n      this.errorTypes = null;\n      this.learningOutcomes = null;\n      this.domainConcepts = null;\n      this.contentSections = null;\n      this.learningItems = null;\n      this.fetchDomainConcepts();\n      this.fetchContentSections();\n      this.fetchLearningItems();\n      this.fetchLearningOutcomes();\n      this.fetchErrorTypes();\n\n      // Change which database currently is opened\n      this.database = database;\n\n      // Change the colours of the buttons to show which database is opened\n      this.selected = new Set();\n      $('#errortype-database').get(0).setAttribute(\"style\", \"background-color: #2c3e50;\");\n      $('#learningoutcome-database').get(0).setAttribute(\"style\", \"background-color: #2c3e50;\");\n      $('#learningitem-database').get(0).setAttribute(\"style\", \"background-color: #2c3e50;\");\n      $('#domainconcept-database').get(0).setAttribute(\"style\", \"background-color: #2c3e50;\");\n      $('#contentsection-database').get(0).setAttribute(\"style\", \"background-color: #2c3e50;\");\n      $('#'+database+'-database').get(0).setAttribute(\"style\", \"background-color: green;\");\n\n    },\n    // This function will delete all the currently selected items in the currently opened table IF possible and when no relationship requirements are violated\n    deleteSelection(){\n      var selection = Array.from(this.selected)\n\n      if(this.database == \"domainconcept\"){ // This code will be executed when deleting Domain Concepts\n        // First check if no Content Section will be left with zero Domain Concepts, since the relation is one to many. \n        var safeToDelete = true;\n        for(var i = 0; i < this.contentSections.length; i++){\n          var currentDomainConcepts = [...this.contentSections[i].DomainConcepts];\n          var oldLength = currentDomainConcepts.length;\n          for (var j = 0; j < selection.length; j++){\n            var index = currentDomainConcepts.indexOf(selection[j]);\n            if (index > -1) {\n              currentDomainConcepts.splice(index, 1);\n            }\n          }\n          if(currentDomainConcepts.length == 0 && oldLength != 0){\n            // If there exists a Content Section from which its length is zero after deleting the Domain Concepts and its original length was not zero, it's not safe to delete\n            // And none of the selected Domain Concepts will be deleted\n            safeToDelete = false;\n          }\n        }\n        if(!safeToDelete){ // If it's not safe to delete: show a pop-up which contains the error message\n          this.faultMessage = \"The delete command is not executed.\\nThe selection contains a combination of domain concepts that will cause a Content Section having zero domain concepts.\"\n          this.$modal.show('fault-popup');\n        }\n        else{ \n          // If it's safe to delete: delete the selected Domain Concepts in all the Content Sections/Learning Items/Learning Outcomes having those Domain Concepts\n          this.deleteDomainConceptsInContentSections(selection);\n          this.deleteDomainConceptsInLearningItems(selection);\n          this.deleteDomainConceptsInLearningOutcomes(selection);\n          \n          // And afterwards delete all the selected Domain Concepts\n          for (j = 0; j < selection.length; j++){\n            this.deleteID(selection[j], \"domainconcept\");\n          }\n        }\n      }\n      else if(this.database == \"contentsection\"){ // This code will be executed when deleting Content Sections\n        // First delete the Content Sections in all the Learning Items/Learning Outcomes having those Content Sections\n        this.deleteContentSectionsInLearningItems(selection);\n        this.deleteContentSectionsInLearningOutcomes(selection);\n\n        // Then delete all the selected Content Sections\n        for (j = 0; j < selection.length; j++){\n          this.deleteID(selection[j], \"contentsection\");\n        }\n      }\n      else if(this.database == \"learningitem\"){ // This code will be executed when deleting Learning Items\n        // First delete the Learning Items in all the Learning Outcomes having those Learning Items\n        this.deleteLearningItemsInLearningOutcomes(selection);\n        // Then delete all the selected Learning Items\n        for (j = 0; j < selection.length; j++){\n          this.deleteID(selection[j], \"learningitem\");\n        }\n      }\n      else if(this.database == \"learningoutcome\"){ // This code will be executed when deleting Learning Outcomes\n        // First delete the Learning Outcomes in all the ErrorTypes having those Learning Outcomes\n        this.deleteLearningOutcomesInErrorTypes(selection);\n        // Then delete all the selected Learning Outcomes\n        for (j = 0; j < selection.length; j++){\n          this.deleteID(selection[j], \"learningoutcome\");\n        }\n      }\n      else if(this.database == \"errortype\"){ // This code will be executed when deleting Error Types\n        // Delete all the selected Error Types\n        for (j = 0; j < selection.length; j++){\n          this.deleteID(selection[j], \"errortype\");\n        }\n      }\n    },\n    // This function updates the selectionbuttons in the tables of the database from true to false or vice versa when clicked\n    updateSelected(checkbox_id){\n      if($('#'+checkbox_id).get(0).checked){\n        this.selected.add(checkbox_id);\n      }\n      else{\n        this.selected.delete(checkbox_id);\n      }\n    },\n    // When the button to create a new errortype is clicked, the modus will change to \"create\" and the correct pop-up will be shown\n    newError(){\n      this.modus = \"create\";\n      this.$modal.show('create-errortype');\n    },\n    // When the button to create a new learning outcome is clicked, the modus will change to \"create\" and the correct pop-up will be shown\n    newLearningOutcome(){\n      this.modus = \"create\";\n      this.$modal.show('create-learningoutcome');\n    },\n    // When the button to create a new learning item is clicked, the modus will change to \"create\" and the correct pop-up will be shown\n    newLearningItem(){\n      this.modus = \"create\";\n      this.$modal.show('create-learningitem');\n    },\n    // When the button to create a new content section is clicked, the modus will change to \"create\" and the correct pop-up will be shown\n    newContentSection(){\n      this.modus = \"create\";\n      this.$modal.show('create-contentsection');\n    },\n    // When the button to create a new domain concept is clicked, the modus will change to \"create\" and the correct pop-up will be shown\n    newDomainConcept(){\n      this.modus = \"create\";\n      this.$modal.show('create-domainconcept');\n    },\n    // When the button to edit an errortype is clicked, the modus will change to \"edit\" and the correct pop-up will be shown\n    editError(errortype){\n      // Fill in the linked inputfields with the information of the selected item\n      this.modus = \"edit\";\n      this.errorName = errortype.name;\n      this.errorWeight = errortype.weight;\n      this.errorDescription = errortype.description;\n      this.selectedLearningOutcome = this.learningOutcomeIDToName[errortype.learningOutcome];\n      this.errorID = errortype._id;\n      // Show the pop-up with the filled in fields\n      this.$modal.show('create-errortype');\n    },\n    // When the button to edit a learning outcome is clicked, the modus will change to \"edit\" and the correct pop-up will be shown\n    editLearningOutcome(outcome){\n      // Fill in the linked inputfields with the information of the selected item\n      this.modus = \"edit\";\n      this.learningName = outcome.name;\n      this.learningBloomLevelCognitive = outcome.BloomLevelCognitive;\n      this.learningBloomLevelKnowledge = outcome.BloomLevelKnowledge;\n      this.learningID = outcome._id;\n      this.selectedDomainConcepts = [];\n      for(var i = 0; i < outcome.DomainConcepts.length; i++){\n        this.selectedDomainConcepts.push(this.dropdownDomainConcepts[outcome.DomainConcepts[i]]);\n      }\n      this.selectedContentSections = [];\n      for(i = 0; i < outcome.ContentSections.length; i++){\n        this.selectedContentSections.push(this.dropdownContentSections[outcome.ContentSections[i]]);\n      }\n      this.selectedLearningItems = [];\n      for(i = 0; i < outcome.LearningItems.length; i++){\n        this.selectedLearningItems.push(this.dropdownLearningItems[outcome.LearningItems[i]]);\n      }\n      // Show the pop-up with the filled in fields\n      this.$modal.show('create-learningoutcome');\n    },\n    // When the button to edit a learning item is clicked, the modus will change to \"edit\" and the correct pop-up will be shown\n    editLearningItem(learningitem){\n      // Fill in the linked inputfields with the information of the selected item\n      this.modus = \"edit\";\n      this.learningItemName = learningitem.name;\n      this.learningItemURL = learningitem.url;\n      this.learningItemIsExercise = learningitem.isExerciseItem;\n      this.learningItemDifficulty = learningitem.difficulty;\n      this.selectedContentSections = [];\n      for(var i = 0; i < learningitem.ContentSections.length; i++){\n        this.selectedContentSections.push(this.dropdownContentSections[learningitem.ContentSections[i]]);\n      }\n      this.selectedDomainConcepts = [];\n      for(i = 0; i < learningitem.DomainConcepts.length; i++){\n        this.selectedDomainConcepts.push(this.dropdownDomainConcepts[learningitem.DomainConcepts[i]]);\n      }\n      this.learningItemID = learningitem._id;\n      // Show the pop-up with the filled in fields\n      this.$modal.show('create-learningitem');\n    },\n    // When the button to edit a content section is clicked, the modus will change to \"edit\" and the correct pop-up will be shown\n    editContentSection(contentsection){\n      // Fill in the linked inputfields with the information of the selected item\n      this.modus = \"edit\";\n      this.contentSectionName = contentsection.name;\n      this.contentSectionID = contentsection._id;\n      this.selectedDomainConcepts = [];\n      for(var i = 0; i < contentsection.DomainConcepts.length; i++){\n        this.selectedDomainConcepts.push(this.dropdownDomainConcepts[contentsection.DomainConcepts[i]]);\n      }\n      this.$modal.show('create-contentsection');\n    },\n    // When the button to edit a domain concept is clicked, the modus will change to \"edit\" and the correct pop-up will be shown\n    editDomainConcept(domainconcept){\n      // Fill in the linked inputfields with the information of the selected item\n      this.modus = \"edit\";\n      this.domainConceptName = domainconcept.name;\n      this.domainConceptID = domainconcept._id;\n      // Show the pop-up with the filled in fields\n      this.$modal.show('create-domainconcept');\n    },\n    // Hides the general warning pop-up\n    hideImportWarning(){\n      this.$modal.hide('warning-popup');\n    },\n    // Hide the pop-up for creating/editing ErrorTypes\n    hideErrorTypePopup(){\n      // Make the linked inputfields empty for the next time when the pop-up occurs and set modus back to \"create\"\n      this.modus = \"create\";\n      this.errorName = \"\";\n      this.errorWeight = \"\";\n      this.errorDescription = \"\";\n      this.selectedLearningOutcome = null;\n      this.errorID = null;\n      // Hide the pop-up\n      this.$modal.hide('create-errortype');     \n    },\n    // Hide the pop-up for creating/editing Learning Outcomes\n    hideLearningOutcomePopup(){\n      // Make the linked inputfields empty for the next time when the pop-up occurs and set modus back to \"create\"\n      this.modus = \"create\";\n      this.learningName = \"\",\n      this.learningBloomLevelCognitive = \"\",\n      this.learningBloomLevelKnowledge = \"\",\n      this.learningID = null,\n      this.selectedDomainConcepts = null,\n      this.selectedLearningItems = null,\n      this.selectedContentSections = null,\n      // Hide the pop-up\n      this.$modal.hide('create-learningoutcome');\n    },\n    // Hide the pop-up for creating/editing Learning Items\n    hideLearningItemPopup(){\n      // Make the linked inputfields empty for the next time when the pop-up occurs and set modus back to \"create\"\n      this.modus = \"create\";\n      this.learningItemName = \"\";\n      this.learningItemURL = \"\";\n      this.learningItemIsExercise = false;\n      this.learningItemDifficulty = \"\";\n      this.selectedContentSections = null; \n      this.selectedDomainConcepts = null; \n      this.learningItemID = null;\n      // Hide the pop-up\n      this.$modal.hide('create-learningitem');\n    },\n    // Hide the pop-up for creating/editing Content Sections\n    hideContentSectionPopup(){\n      // Make the linked inputfields empty for the next time when the pop-up occurs and set modus back to \"create\"\n      this.modus = \"create\";\n      this.contentSectionName = \"\",\n      this.contentSectionID = null,\n      this.selectedDomainConcepts = null,\n      // Hide the pop-up\n      this.$modal.hide('create-contentsection');\n    },\n    // Hide the pop-up for creating/editing Domain Concepts\n    hideDomainConceptPopup(){\n      // Make the linked inputfields empty for the next time when the pop-up occurs and set modus back to \"create\"\n      this.modus = \"create\";\n      this.domainConceptName = \"\",\n      this.domainConceptID = null,\n      // Hide the pop-up\n      this.$modal.hide('create-domainconcept');\n    },\n    // Check if all given attributes in the form of a list have a green border around them, thus having valid values\n    areAttributesValid(attributes){ //Returns if all given attributes their borders are green, thus valid\n      for(var i = 0; i < attributes.length; i++){\n        if(!(String($('#'+attributes[i]).get(0).style.border).indexOf(\"green\") >= 0)){\n          return false;\n        }\n      }\n      return true;\n    },\n    // Creates a new ErrorType, or edits the existing one in the database when all the filled in attributes are valid and hide the pop-up\n    pushErrorType(){\n      if(this.areAttributesValid(['description','name','weight','dropdown'])){\n        var currentLearningOutcome = \"\";\n        if(this.selectedLearningOutcome != null){\n          currentLearningOutcome = this.sortedOutcomeIDs[Number(this.selectedLearningOutcome.slice(0,this.selectedLearningOutcome.indexOf(':')))-1];\n        }\n          let errorTypeData = {\n              name: this.errorName,\n              weight: this.errorWeight,\n              description: this.errorDescription,\n              learningOutcome: currentLearningOutcome,\n          };\n          this.__submitErrorTypeToServer(errorTypeData);   \n          this.hideErrorTypePopup();\n      }\n    },\n    // Creates a new Learning Outcome, or edits the existing one in the database when all the filled in attributes are valid and hide the pop-up\n    pushLearningOutcome(){\n      if(this.areAttributesValid(['learningName','learningBloomLevelCognitive','learningBloomLevelKnowledge'])){\n          var newDomainConcepts = [];\n          if(this.selectedDomainConcepts != null){\n            for(var i = 0; i < this.selectedDomainConcepts.length;i++){\n              newDomainConcepts.push(this.sortedDomainConceptIDs[Number(this.selectedDomainConcepts[i].slice(0,this.selectedDomainConcepts[i].indexOf(':')))-1]);\n            }\n          }\n          var newContentSections = [];\n          if(this.selectedContentSections != null){\n            for(i = 0; i < this.selectedContentSections.length;i++){\n              newContentSections.push(this.sortedContentSectionIDs[Number(this.selectedContentSections[i].slice(0,this.selectedContentSections[i].indexOf(':')))-1]);\n            }\n          }\n          var currentLearningItems = [];\n          if(this.selectedLearningItems != null){\n            for(i = 0; i < this.selectedLearningItems.length;i++){\n              currentLearningItems.push(this.sortedLearningItemIDs[Number(this.selectedLearningItems[i].slice(0,this.selectedLearningItems[i].indexOf(':')))-1]);\n            }\n          }\n          let learningOutcomeData = {\n              name: this.learningName,\n              BloomLevelCognitive: this.learningBloomLevelCognitive,\n              BloomLevelKnowledge: this.learningBloomLevelKnowledge,\n              DomainConcepts: newDomainConcepts,\n              ContentSections: newContentSections,\n              LearningItems: currentLearningItems,\n          };\n          this.__submitLearningOutcomeToServer(learningOutcomeData);   \n          this.hideLearningOutcomePopup();\n      }\n    },\n    // Creates a new Learning Item, or edits the existing one in the database when all the filled in attributes are valid and hide the pop-up\n    pushLearningItem(){\n      if((this.learningItemIsExercise && this.areAttributesValid(['learningItemName','learningItemURL','learningItemDifficulty']))\n          || (!this.learningItemIsExercise && this.areAttributesValid(['learningItemName','learningItemURL']))){\n        var newDomainConcepts = [];\n        if(this.selectedDomainConcepts != null){\n          for(var i = 0; i < this.selectedDomainConcepts.length;i++){\n            newDomainConcepts.push(this.sortedDomainConceptIDs[Number(this.selectedDomainConcepts[i].slice(0,this.selectedDomainConcepts[i].indexOf(':')))-1]);\n          }\n        }\n        var newContentSections = [];\n        if(this.selectedContentSections != null){\n          for(i = 0; i < this.selectedContentSections.length;i++){\n            newContentSections.push(this.sortedContentSectionIDs[Number(this.selectedContentSections[i].slice(0,this.selectedContentSections[i].indexOf(':')))-1]);\n          }\n        }\n        if(!this.learningItemIsExercise){\n          this.learningItemDifficulty = \"\";\n        }\n        let learningItemData = {\n            name: this.learningItemName,\n            url: this.learningItemURL,\n            ContentSections: newContentSections,\n            DomainConcepts: newDomainConcepts,\n            isExerciseItem: this.learningItemIsExercise,\n            difficulty: this.learningItemDifficulty,\n\n          };\n          this.__submitLearningItemToServer(learningItemData);   \n          this.hideLearningItemPopup();\n      }\n    },\n    // Creates a new Content Section, or edits the existing one in the database when all the filled in attributes are valid and hide the pop-up\n    pushContentSection(){\n      if(this.areAttributesValid(['contentSectionName','contentsection-dropdown'])){\n            var newDomainConcepts = [];\n            if(this.selectedDomainConcepts != null){\n              for(var i = 0; i < this.selectedDomainConcepts.length;i++){\n                newDomainConcepts.push(this.sortedDomainConceptIDs[Number(this.selectedDomainConcepts[i].slice(0,this.selectedDomainConcepts[i].indexOf(':')))-1]);\n              }\n            }\n            let contentSectionData = {\n              name: this.contentSectionName,\n              DomainConcepts: newDomainConcepts,\n            };\n            this.__submitContentSectionToServer(contentSectionData);   \n            this.hideContentSectionPopup();\n          }\n    },\n    // Creates a new Domain Concept, or edits the existing one in the database when all the filled in attributes are valid and hide the pop-up\n    pushDomainConcept(){\n      if(this.areAttributesValid(['domainConceptName'])){\n          let domainConceptData = {\n              name: this.domainConceptName,\n          };\n          this.__submitDomainConceptToServer(domainConceptData);   \n          this.hideDomainConceptPopup();\n      }\n    },\n    // Submit the new or edited ErrorType to the database based on the modus (create/edit)\n    __submitErrorTypeToServer(data) {\n      var context = this;\n      if(this.modus == \"create\"){\n        axios.post(`${server.baseURL}/errortype/create`, data)\n        .then(function(){\n            context.fetchErrorTypes();\n        });\n      }\n      else if(this.modus == \"edit\"){\n        axios.put(`${server.baseURL}/errortype/update?errorTypeID=${this.errorID}`,data)\n        .then(function(){\n            context.fetchErrorTypes();\n        });\n      }\n    },\n    // Submit the new or edited Learning Outcome to the database based on the modus (create/edit)\n    __submitLearningOutcomeToServer(data) {\n      var context = this;\n      if(this.modus == \"create\"){\n        axios.post(`${server.baseURL}/learningoutcome/create`, data)\n        .then(function(){\n            context.fetchLearningOutcomes();\n        });\n      }\n      else if(this.modus == \"edit\"){\n        axios.put(`${server.baseURL}/learningoutcome/update?learningOutcomeID=${this.learningID}`,data)\n        .then(function(){\n            context.fetchLearningOutcomes();\n        });\n      }\n    },\n    // Submit the new or edited Learning Item to the database based on the modus (create/edit)\n    __submitLearningItemToServer(data){\n      var context = this;\n      if(this.modus == \"create\"){\n        axios.post(`${server.baseURL}/learningitem/create`, data)\n        .then(function(){\n            context.fetchLearningItems();\n        });\n      }\n      else if(this.modus == \"edit\"){\n        axios.put(`${server.baseURL}/learningitem/update?learningItemID=${this.learningItemID}`,data)\n        .then(function(){\n            context.fetchLearningItems();\n        });\n      }\n    },\n    // Submit the new or edited Content Section to the database based on the modus (create/edit)\n    __submitContentSectionToServer(data){\n      var context = this;\n      if(this.modus == \"create\"){\n        axios.post(`${server.baseURL}/contentsection/create`, data)\n        .then(function(){\n            context.fetchContentSections();\n        });\n      }\n      else if(this.modus == \"edit\"){\n        axios.put(`${server.baseURL}/contentsection/update?contentSectionID=${this.contentSectionID}`,data)\n        .then(function(){\n            context.fetchContentSections();\n        });\n      }\n    },\n    // Submit the new or edited Domain Concept to the database based on the modus (create/edit)\n    __submitDomainConceptToServer(data) {\n      var context = this;\n      if(this.modus == \"create\"){\n        axios.post(`${server.baseURL}/domainconcept/create`, data)\n        .then(function(){\n            context.fetchDomainConcepts();\n        });\n      }\n      else if(this.modus == \"edit\"){\n        axios.put(`${server.baseURL}/domainconcept/update?domainConceptID=${this.domainConceptID}`,data)\n        .then(function(){\n            context.fetchDomainConcepts();\n        });\n      }\n    },\n    // The given attribute gets a green border when at least one symbol is filled in, otherwise a red border\n    atLeastOneSymbol(item){ \n      if($('#'+item).get(0).value.length < 1){\n          $('#'+item).get(0).setAttribute(\"style\", \"border: 2px solid red;\");}\n      else{\n          $('#'+item).get(0).setAttribute(\"style\", \"border: 2px solid green;\");\n      }\n    },\n    // When a change is made in an inputfield in the pop-up during the creation/editing of an ErrorType, \n    // change the borders of the inputfields to red or green depending on if they're invalid or valid\n    changeInErrorType(){\n      this.atLeastOneSymbol('name');\n      this.atLeastOneSymbol('description');\n\n      var numbers = new Set(\"01234567890\");\n      var currentWeight = new Set($('#weight').get(0).value);\n      var onlyNumbers = true;\n      for(var elem of currentWeight){\n          if(!numbers.has(elem)){\n              onlyNumbers = false;\n          }\n      }\n      if($('#weight').get(0).value.length < 1 || !onlyNumbers){\n          $('#weight').get(0).setAttribute(\"style\", \"border: 2px solid red;\");}\n      else{\n          $('#weight').get(0).setAttribute(\"style\", \"border: 2px solid green;\");\n      }\n    },\n    // When a change is made in an inputfield in the pop-up during the creation/editing of an Learning Outcome, \n    // change the borders of the inputfields to red or green depending on if they're invalid or valid\n    changeInLearningOutcome(){\n      this.atLeastOneSymbol('learningName');\n      this.atLeastOneSymbol('learningBloomLevelCognitive');\n      this.atLeastOneSymbol('learningBloomLevelKnowledge');\n    },\n    // When a change is made in an inputfield in the pop-up during the creation/editing of an Learning Item, \n    // change the borders of the inputfields to red or green depending on if they're invalid or valid\n    changeInLearningItem(){\n      this.atLeastOneSymbol('learningItemName');\n      this.atLeastOneSymbol('learningItemURL');\n      if(this.learningItemIsExercise){\n        this.atLeastOneSymbol('learningItemDifficulty');\n      }\n    },\n    // When a change is made in an inputfield in the pop-up during the creation/editing of an Content Section, \n    // change the borders of the inputfields to red or green depending on if they're invalid or valid\n    changeInContentSection(){\n      this.atLeastOneSymbol('contentSectionName');\n      // the dropdown of domain concepts gets a green border when at least one domainconcept is chosen, otherwise a red border\n      if(this.selectedDomainConcepts == null || this.selectedDomainConcepts.length == 0){\n          $('#contentsection-dropdown').get(0).setAttribute(\"style\", \"border: 2px solid red;\");}\n      else{\n          $('#contentsection-dropdown').get(0).setAttribute(\"style\", \"border: 2px solid green;\");\n      }\n    },\n    // When a change is made in an inputfield in the pop-up during the creation/editing of an Domain Concept, \n    // change the borders of the inputfields to red or green depending on if they're invalid or valid\n    changeInDomainConcept(){\n      this.atLeastOneSymbol('domainConceptName');\n    },\n    // Fetch the ErrorTypes from the database and put them in the according global variable\n    fetchErrorTypes() {\n      axios\n        .get(`${server.baseURL}/errortype/errortypes`)\n        .then(data => (this.updateNewErrorTypes(this, data.data)));\n    },\n    // Fetch the Learning Outcomes from the database and update the variables containing Learning Outcome information \n    fetchLearningOutcomes() {\n      axios\n        .get(`${server.baseURL}/learningoutcome/learningoutcomes`)\n        .then(data => (this.updateNewLearningOutcomes(this, data.data)));\n    },\n    // Fetch the Learning Items from the database and update the variables containing Learning Item information \n    fetchLearningItems(){\n      axios\n        .get(`${server.baseURL}/learningitem/learningitems`)\n        .then(data => (this.updateNewLearningItems(this, data.data)));\n    },\n    // Fetch the Content Sections from the database and update the variables containing Content Section information \n    fetchContentSections(){\n      axios\n        .get(`${server.baseURL}/contentsection/contentsections`)\n        .then(data => (this.updateNewContentSections(this, data.data)));\n    },\n    // Fetch the Domain Concepts from the database and update the variables containing Domain Concept information \n    fetchDomainConcepts(){\n      axios\n        .get(`${server.baseURL}/domainconcept/domainconcepts`)\n        .then(data => (this.updateNewDomainConcepts(this, data.data)));\n    },\n    // This function updates all the error types in 'errorTypes'\n    // + makes a dictionary 'dropdownErrorTypes' that links the ID's with the name in stringform (accompanied by an index in front of the name) of all the error types -> these indexes + names in stringform are visible in the dropdowns\n    // + makes a list 'sortedErrorTypeIDs' of the ID's in the same order as the strings as presented in the dropdowns\n    // + makes a dictionary 'errorTypeIDToName' that links the name of the error types WITH the index in front of it to the correct ID\n    updateNewErrorTypes(context, data){\n      context.dropdownErrorTypes = {};\n      context.sortedErrorTypeIDs = [];\n      context.errorTypeIDToName = {};\n      context.errorTypes = data;\n      var i\n      for (i = 0; i < context.errorTypes.length; i++) {\n          context.dropdownErrorTypes[context.errorTypes[i]._id] = String(i+1) + \": \" + String(context.errorTypes[i].name);\n          context.errorTypeIDToName[context.errorTypes[i]._id] = context.errorTypes[i].name;\n          context.sortedErrorTypeIDs.push(context.errorTypes[i]._id);\n      }\n    },\n    // This function updates all the learning outcomes in 'learningOutcomes'\n    // + makes a dictionary 'dropdownLearningOutcomes' that links the ID's with the name in stringform (accompanied by an index in front of the name) of all the learning Outcomes -> these indexes + names in stringform are visible in the dropdowns\n    // + makes a list 'sortedOutcomeIDs' of the ID's in the same order as the strings as presented in the dropdowns\n    // + makes a dictionary 'learningOutcomeIDToName' that links the name of the learning Outcomes WITH the index in front of it to the correct ID\n    updateNewLearningOutcomes(context, data){\n      context.dropdownLearningOutcomes = {};\n      context.sortedOutcomeIDs = [];\n      context.learningOutcomeIDToName = {};\n      context.learningOutcomes = data;\n      var i\n      for (i = 0; i < context.learningOutcomes.length; i++) {\n          context.dropdownLearningOutcomes[context.learningOutcomes[i]._id] = String(i+1) + \": \" + String(context.learningOutcomes[i].name);\n          context.learningOutcomeIDToName[context.learningOutcomes[i]._id] = context.learningOutcomes[i].name;\n          context.sortedOutcomeIDs.push(context.learningOutcomes[i]._id);\n      }\n    },\n    // This function updates all the learning items in 'learningItems'\n    // + makes a dictionary 'dropdownLearningItems' that links the ID's with the name in stringform (accompanied by an index in front of the name) of all the learning items -> these indexes + names in stringform are visible in the dropdowns\n    // + makes a list 'sortedLearningItemIDs' of the ID's in the same order as the strings as presented in the dropdowns\n    // + makes a dictionary 'learningItemIDToName' that links the name of the learning items WITH the index in front of it to the correct ID\n    updateNewLearningItems(context, data){\n      context.dropdownLearningItems = {};\n      context.sortedLearningItemIDs = [];\n      context.learningItemIDToName = {};\n      context.learningItems = data;\n      var i\n      for (i = 0; i < context.learningItems.length; i++) {\n          context.dropdownLearningItems[context.learningItems[i]._id] = String(i+1) + \": \" + String(context.learningItems[i].name);\n          context.learningItemIDToName[context.learningItems[i]._id] = context.learningItems[i].name;\n          context.sortedLearningItemIDs.push(context.learningItems[i]._id);\n      }\n    },\n    // This function updates all the content sections in 'contentSections'\n    // + makes a dictionary 'dropdownContentSections' that links the ID's with the name in stringform (accompanied by an index in front of the name) of all the content sections -> these indexes + names in stringform are visible in the dropdowns\n    // + makes a list 'sortedContentSectionIDs' of the ID's in the same order as the strings as presented in the dropdowns\n    // + makes a dictionary 'contentSectionIDToName' that links the name of the content sections WITH the index in front of it to the correct ID\n    updateNewContentSections(context, data){\n      context.dropdownContentSections = {};\n      context.sortedContentSectionIDs = [];\n      context.contentSectionIDToName = {};\n      context.contentSections = data;\n      var i\n      for (i = 0; i < context.contentSections.length; i++) {\n          context.dropdownContentSections[context.contentSections[i]._id] = String(i+1) + \": \" + String(context.contentSections[i].name);\n          context.contentSectionIDToName[context.contentSections[i]._id] = context.contentSections[i].name;\n          context.sortedContentSectionIDs.push(context.contentSections[i]._id);\n      }\n      \n    },\n    // This function updates all the domain concepts in 'domainConcepts'\n    // + makes a dictionary 'dropdownDomainConcepts' that links the ID's with the name in stringform (accompanied by an index in front of the name) of all the domain concepts -> these indexes + names in stringform are visible in the dropdowns\n    // + makes a list 'sortedDomainConceptIDs' of the ID's in the same order as the strings as presented in the dropdowns\n    // + makes a dictionary 'domainConceptIDToName' that links the name of the domain concepts WITH the index in front of it to the correct ID\n    updateNewDomainConcepts(context, data){\n      context.dropdownDomainConcepts = {};\n      context.sortedDomainConceptIDs = [];\n      context.domainConceptIDToName = {};\n      context.domainConcepts = data;\n      var i;\n      for (i = 0; i < context.domainConcepts.length; i++) {\n          context.dropdownDomainConcepts[context.domainConcepts[i]._id] = String(i+1) + \": \" + String(context.domainConcepts[i].name);\n          context.domainConceptIDToName[context.domainConcepts[i]._id] = context.domainConcepts[i].name;\n          context.sortedDomainConceptIDs.push(context.domainConcepts[i]._id);\n      }\n    },\n    // This function deletes an item in the database based on a given ID and in which table it belongs \n    // Next it updates the variable from which the item was deleted from the updated database by fetching the new information\n    deleteID(id, db) {\n      var context = this;\n      if(db == 'errortype'){\n        axios\n          .delete(`${server.baseURL}/errortype/delete?errorTypeID=${id}`)\n          .then(function(){\n              context.fetchErrorTypes();\n          });\n      }\n      else if(db == 'learningoutcome'){\n        axios\n          .delete(`${server.baseURL}/learningoutcome/delete?learningOutcomeID=${id}`)\n          .then(function(){\n              context.fetchLearningOutcomes();\n          });\n      }\n      else if(db == 'learningitem'){\n        axios\n          .delete(`${server.baseURL}/learningitem/delete?learningItemID=${id}`)\n          .then(function(){\n              context.fetchLearningItems();\n          });\n      }\n      else if(db == 'contentsection'){\n        axios\n          .delete(`${server.baseURL}/contentsection/delete?contentSectionID=${id}`)\n          .then(function(){\n              context.fetchContentSections();\n          });\n      }\n      else if(db == 'domainconcept'){\n        axios\n          .delete(`${server.baseURL}/domainconcept/delete?domainConceptID=${id}`)\n          .then(function(){\n              context.fetchDomainConcepts();\n          });\n      }\n    },\n    // This function calculates the intersection between 2 given sets\n    intersection(setA, setB) {\n      var _intersection = new Set();\n      for (var elem of setB) {\n          if (setA.has(elem)) {\n              _intersection.add(elem);\n          }\n      }\n      return _intersection;\n    },\n    // This function calculates the difference between 2 given sets\n    difference(setA, setB) {\n      var _difference = new Set(setA);\n      for (var elem of setB) {\n          _difference.delete(elem);\n      }\n      return _difference;\n    },\n    // This function deletes a list of IDs of learning outcomes in all the Error Types if they contain those learning outcomes\n    // Then it fetches the new error types from the database\n    deleteLearningOutcomeInErrorTypes(ids){\n      var id = null;\n      for(var m = 0; m < ids.length; m++){\n        id = ids[m];\n        for(var i = 0; i < this.errorTypes.length; i++){\n          if(this.errorTypes[i].learningOutcome == id){\n            let errorTypeData = {\n                learningOutcome: null,\n            };\n            var context = this;\n            axios.put(`${server.baseURL}/errortype/update?errorTypeID=${this.errorTypes[i]._id}`,errorTypeData)\n            .then(function(){\n                context.fetchErrorTypes();\n            });\n          }\n        }\n      }\n    },\n    // This function deletes a list of IDs of domain concepts in all the Content Sections if they contain those domain concepts\n    // Then it fetches the new content sections from the database\n    deleteDomainConceptsInContentSections(ids){\n      var overlap;\n      for(var i = 0; i < this.contentSections.length; i++){\n        var currentDomainConceptIds = new Set(this.contentSections[i].DomainConcepts);\n        var intersection = this.intersection(new Set(ids), currentDomainConceptIds);\n        overlap = Array.from(intersection).length > 0;\n        if(overlap){\n          var newDomainConcepts = Array.from(this.difference(currentDomainConceptIds, intersection));\n          let data = {\n            DomainConcepts: newDomainConcepts,\n          };\n          var context = this;\n          axios.put(`${server.baseURL}/contentsection/update?contentSectionID=${this.contentSections[i]._id}`, data)\n          .then(function(){\n              context.fetchContentSections();\n          });\n        }\n      }\n    },\n    // This function deletes a list of IDs of domain concepts in all the learning items if they contain those domain concepts\n    // Then it fetches the new learning items from the database\n    deleteDomainConceptsInLearningItems(ids){\n      var overlap;\n      for(var i = 0; i < this.learningItems.length; i++){\n        var currentDomainConceptIds = new Set(this.learningItems[i].DomainConcepts);\n        var intersection = this.intersection(new Set(ids), currentDomainConceptIds);\n        overlap = Array.from(intersection).length > 0;\n        if(overlap){\n          var newDomainConcepts = Array.from(this.difference(currentDomainConceptIds, intersection));\n          let data = {\n            DomainConcepts: newDomainConcepts,\n          };\n          var context = this;\n          axios.put(`${server.baseURL}/learningitem/update?learningItemID=${this.learningItems[i]._id}`, data)\n          .then(function(){\n              context.fetchLearningItems();\n          });\n        }\n      }\n    },\n    // This function deletes a list of IDs of domain concepts in all the learning outcomes if they contain those domain concepts\n    // Then it fetches the new learning outcomes from the database\n    deleteDomainConceptsInLearningOutcomes(ids){\n      var overlap;\n      for(var i = 0; i < this.learningOutcomes.length; i++){\n        var currentDomainConceptIds = new Set(this.learningOutcomes[i].DomainConcepts);\n        var intersection = this.intersection(new Set(ids), currentDomainConceptIds);\n        overlap = Array.from(intersection).length > 0;\n        if(overlap){\n          var newDomainConcepts = Array.from(this.difference(currentDomainConceptIds, intersection));\n          let data = {\n            DomainConcepts: newDomainConcepts,\n          };\n          var context = this;\n          axios.put(`${server.baseURL}/learningoutcome/update?learningOutcomeID=${this.learningOutcomes[i]._id}`, data)\n          .then(function(){\n              context.fetchLearningOutcomes();\n          });\n        }\n      }\n    },\n    // This function deletes a list of IDs of content sections in all the learning items if they contain those content sections\n    // Then it fetches the new learning items from the database\n    deleteContentSectionsInLearningItems(ids){\n      var idSet = new Set(ids);\n      for(var i = 0; i < this.learningItems.length; i++){\n        var currentContentSections = new Set(this.learningItems[i].ContentSections);\n        var difference = new Set([...currentContentSections].filter(x => !idSet.has(x)));\n        let learningItemData = {\n            ContentSections: Array.from(difference),\n          };\n          var context = this;\n          axios.put(`${server.baseURL}/learningitem/update?learningItemID=${this.learningItems[i]._id}`,learningItemData)\n          .then(function(){\n              context.fetchLearningItems();\n          }); \n      }\n    },\n    // This function deletes a list of IDs of content sections in all the learning outcomes if they contain those content sections\n    // Then it fetches the new learning outcomes from the database\n    deleteContentSectionsInLearningOutcomes(ids){\n      var idSet = new Set(ids);\n      for(var i = 0; i < this.learningOutcomes.length; i++){\n        var currentContentSections = new Set(this.learningOutcomes[i].ContentSections);\n        var difference = new Set([...currentContentSections].filter(x => !idSet.has(x)));\n        let data = {\n            ContentSections: Array.from(difference),\n          };\n          var context = this;\n          axios.put(`${server.baseURL}/learningoutcome/update?learningOutcomeID=${this.learningOutcomes[i]._id}`,data)\n          .then(function(){\n              context.fetchLearningOutcomes();\n          }); \n      }\n    },\n    // This function deletes a list of IDs of learning items in all the learning outcomes if they contain those learning items\n    // Then it fetches the new learning outcomes from the database\n    deleteLearningItemsInLearningOutcomes(ids){\n      var idSet = new Set(ids);\n      for(var i = 0; i < this.learningOutcomes.length; i++){\n        var currentLearningItems = new Set(this.learningOutcomes[i].LearningItems);\n        var difference = new Set([...currentLearningItems].filter(x => !idSet.has(x)));\n        let data = {\n            LearningItems: Array.from(difference),\n          };\n          var context = this;\n          axios.put(`${server.baseURL}/learningoutcome/update?learningOutcomeID=${this.learningOutcomes[i]._id}`,data)\n          .then(function(){\n              context.fetchLearningOutcomes();\n          }); \n      }\n    },\n    // This function deletes a list of IDs of learning outcomes in all the error types if they contain those learning outcomes\n    // Then it fetches the new error types from the database\n    deleteLearningOutcomesInErrorTypes(ids){\n      for(var i = 0; i < this.errorTypes.length; i++){\n        var currentErrorType = this.errorTypes[i];\n        for(var j = 0; j < ids.length; j++){\n          if(currentErrorType.learningOutcome == ids[j]){\n            let data = {\n              learningOutcome: \"\",\n            };\n            var context = this;\n            axios.put(`${server.baseURL}/errortype/update?errorTypeID=${currentErrorType._id}`,data)\n            .then(function(){\n                context.fetchErrorTypes();\n            });\n          }\n        }\n      }\n    },\n    // This function exports the database in a XLSX Excel file \n    // Normally, no errors in the database should be possible, so the export should always succeed\n    exportDatabase(){\n      var domainconcepts = [];\n      var contentsections = [];\n      var learningitems = [];\n      var learningoutcomes = [];\n      var errortypes = [];\n\n      // Creating the different sheets in the excel file\n      var opts = [{sheetid:'ERROR TYPES',header:true},\n                  {sheetid:'LEARNING OUTCOMES',header:true},\n                  {sheetid:'LEARNING ITEMS',header:true},\n                  {sheetid:'CONTENT SECTIONS',header:true},\n                  {sheetid:'DOMAIN CONCEPTS',header:true}];\n                  \n      // Start filling in the different sheets\n\n      for(var i = 0; i < this.domainConcepts.length; i++){\n        domainconcepts.push({\n          \"ID\": this.domainConcepts[i]._id,\n          \"DOMAIN CONCEPT\": this.domainConcepts[i].name,\n        });\n      }\n      for(i = 0; i < this.contentSections.length; i++){\n        contentsections.push({\n          \"ID\": this.contentSections[i]._id,\n          \"CONTENT SECTION\": this.contentSections[i].name,\n          \"DOMAIN CONCEPT IDS\": this.contentSections[i].DomainConcepts,\n        });\n      }\n      for(i = 0; i < this.learningItems.length; i++){\n        learningitems.push({\n          \"ID\": this.learningItems[i]._id,\n          \"LEARNING ITEM\": this.learningItems[i].name,\n          \"URL\": this.learningItems[i].url,\n          \"EXERCISE ITEM\": String(this.learningItems[i].isExerciseItem),\n          \"DIFFICULTY\": this.learningItems[i].difficulty,\n          \"CONTENT SECTION IDS\": this.learningItems[i].ContentSections,\n          \"DOMAIN CONCEPT IDS\": this.learningItems[i].DomainConcepts,\n        });\n      }\n      for(i = 0; i < this.learningOutcomes.length; i++){\n        learningoutcomes.push({\n          \"ID\": this.learningOutcomes[i]._id,\n          \"LEARNING OUTCOME\": this.learningOutcomes[i].name,\n          'BLOOMLEVEL COGNITIVE': this.learningOutcomes[i].BloomLevelCognitive,\n          \"BLOOMLEVEL KNOWLEDGE\": this.learningOutcomes[i].BloomLevelKnowledge,\n          \"LEARNING ITEM IDS\": this.learningOutcomes[i].LearningItems,\n          \"CONTENT SECTION IDS\": this.learningOutcomes[i].ContentSections,\n          \"DOMAIN CONCEPT IDS\": this.learningOutcomes[i].DomainConcepts,\n        });\n      }\n      for(i = 0; i < this.errorTypes.length; i++){\n        errortypes.push({\n          \"ID\": this.errorTypes[i]._id,\n          \"ERROR TYPE\": this.errorTypes[i].name,\n          'WEIGHT': this.errorTypes[i].weight,\n          \"DESCRIPTION\": this.errorTypes[i].description,\n          \"LEARNING OUTCOME ID\": this.errorTypes[i].learningOutcome,\n        });\n      }\n\n      // Add this to every sheet should there be no row in a specific table to avoid an error when creating the excel file\n      // (no sheet can be empty)\n      errortypes.push({\"\": \"\",});\n      learningoutcomes.push({\"\": \"\",});\n      learningitems.push({\"\": \"\",});\n      contentsections.push({\"\": \"\",});\n      domainconcepts.push({\"\": \"\",});\n\n      // Download the database\n      alasql('SELECT INTO XLSX(\"database.xlsx\",?) FROM ?',[opts,[errortypes, learningoutcomes, learningitems, contentsections, domainconcepts]]);\n    },\n    // When the user clicks to import a new database during the warning pop-up that previous data will be lost, a new window will pop-up to browse for the file\n    triggerUpload(){\n      this.$modal.hide('warning-popup');\n      $('#input-excel').trigger('click');\n    },\n    // This function will try to import a new database and delete the old one if the new database does not contain errors\n    importDatabase(e){\n      // Preparing to read the file\n      var reader = new FileReader();\n      var vm = this;\n      reader.readAsArrayBuffer(e.target.files[0]);\n      reader.onload = function() {     \n        var data = new Uint8Array(reader.result);\n        var wb = XLSX.read(data,{type:'array'});\n        // Check if no faults/errors occur in the to be imported database\n        if(vm.isImportReady(wb)){\n          var i;\n\n          // Delete all items in all the tables\n          for(i = 0; i < vm.errorTypes.length; i++){vm.deleteID(vm.errorTypes[i]._id, \"errortype\");}\n          for(i = 0; i < vm.learningOutcomes.length; i++){vm.deleteID(vm.learningOutcomes[i]._id, \"learningoutcome\");}\n          for(i = 0; i < vm.learningItems.length; i++){vm.deleteID(vm.learningItems[i]._id, \"learningitem\");}\n          for(i = 0; i < vm.contentSections.length; i++){vm.deleteID(vm.contentSections[i]._id, \"contentsection\");}\n          for(i = 0; i < vm.domainConcepts.length; i++){vm.deleteID(vm.domainConcepts[i]._id, \"domainconcept\");}\n\n          // Fetch the readed data in separate lists\n          var readedData = vm.isImportReady(wb);\n          var errortypes = readedData[1];\n          var learningoutcomes = readedData[2];\n          var learningitems = readedData[3];\n          var contentsections = readedData[4];\n          var domainconcepts = readedData[5];\n\n          // Recursively import the different tables, starting with the tables that don't contain ID's of other tables. (Domain Concepts)\n          // this function will call the importfunction of the next table to import after all new IDs are known\n          vm.importDomainConcepts([...domainconcepts], [domainconcepts,contentsections,learningitems,learningoutcomes,errortypes]);\n        }\n      }\n    },\n    // This function looks for errors in the possible new database that the user is trying to upload\n    isImportReady(wb){\n      // Check if all the sheets are present in the excel file\n      if(wb.SheetNames.indexOf(\"ERROR TYPES\") < 0){ this.faultMessage = \"No sheet named 'ERROR TYPES' found!\"; this.$modal.show('fault-popup'); return false;}\n      if(wb.SheetNames.indexOf(\"LEARNING OUTCOMES\") < 0){ this.faultMessage = \"No sheet named 'LEARNING OUTCOMES' found!\"; this.$modal.show('fault-popup'); return false;}\n      if(wb.SheetNames.indexOf(\"LEARNING ITEMS\") < 0){ this.faultMessage = \"No sheet named 'LEARNING ITEMS' found!\"; this.$modal.show('fault-popup'); return false;}\n      if(wb.SheetNames.indexOf(\"CONTENT SECTIONS\") < 0){ this.faultMessage = \"No sheet named 'CONTENT SECTIONS' found!\"; this.$modal.show('fault-popup'); return false;}\n      if(wb.SheetNames.indexOf(\"DOMAIN CONCEPTS\") < 0){ this.faultMessage = \"No sheet named 'DOMAIN CONCEPTS' found!\"; this.$modal.show('fault-popup'); return false;}\n      \n      // Empty lists, ready to be populated\n      var domainconcepts = [];\n      var contentsections = [];\n      var learningitems = [];\n      var learningoutcomes = [];\n      var errortypes = [];\n      \n      // Check if all the values are valid in every domain concept\n      var sheet = wb.Sheets[\"DOMAIN CONCEPTS\"];\n      var index = 1;\n      while(!this.isUndefinedOrEmpty(sheet[XLSX.utils.encode_cell({c:0, r:index})])){\n        if(this.isUndefinedOrEmpty(sheet[XLSX.utils.encode_cell({c:1, r:index})])){this.faultMessage = \"There is no NAME in sheet 'DOMAIN CONCEPTS' in cell \"+ XLSX.utils.encode_cell({c:1, r:index}) +\"!\"; this.$modal.show('fault-popup'); return false;}\n        let data = {\n          _id: sheet[XLSX.utils.encode_cell({c:0, r:index})].v,\n          name: sheet[XLSX.utils.encode_cell({c:1, r:index})].v,\n        }\n        domainconcepts.push(data);\n        index += 1;\n      }\n\n      // Check if all the values are valid in every content section\n      sheet = wb.Sheets[\"CONTENT SECTIONS\"];\n      index = 1;\n      while(!this.isUndefinedOrEmpty(sheet[XLSX.utils.encode_cell({c:0, r:index})])){\n        if(this.isUndefinedOrEmpty(sheet[XLSX.utils.encode_cell({c:1, r:index})])){this.faultMessage = \"There is no NAME in sheet 'CONTENT SECTIONS' in cell \"+ XLSX.utils.encode_cell({c:1, r:index}) +\"!\"; this.$modal.show('fault-popup'); return false;}\n        if(this.isUndefinedOrEmpty(sheet[XLSX.utils.encode_cell({c:2, r:index})])){this.faultMessage = \"There has to be at least one DOMAIN CONCEPT ID in sheet 'CONTENT SECTIONS' in cell \"+ XLSX.utils.encode_cell({c:2, r:index}) +\"!\"; this.$modal.show('fault-popup'); return false;}\n        let data = {\n          _id: sheet[XLSX.utils.encode_cell({c:0, r:index})].v,\n          name: sheet[XLSX.utils.encode_cell({c:1, r:index})].v,\n          DomainConcepts: sheet[XLSX.utils.encode_cell({c:2, r:index})].v,\n        }\n        contentsections.push(data);\n        index += 1;\n      }\n\n      // Check if all the values are valid in every learning item\n      sheet = wb.Sheets[\"LEARNING ITEMS\"];\n      index = 1;\n      while(!this.isUndefinedOrEmpty(sheet[XLSX.utils.encode_cell({c:0, r:index})])){\n        if(this.isUndefinedOrEmpty(sheet[XLSX.utils.encode_cell({c:1, r:index})])){this.faultMessage = \"There is no NAME in sheet 'LEARNING ITEMS' in cell \"+ XLSX.utils.encode_cell({c:1, r:index}) +\"!\"; this.$modal.show('fault-popup'); return false;}\n        if(this.isUndefinedOrEmpty(sheet[XLSX.utils.encode_cell({c:2, r:index})])){this.faultMessage = \"There is no URL in sheet 'LEARNING ITEMS' in cell \"+ XLSX.utils.encode_cell({c:2, r:index}) +\"!\"; this.$modal.show('fault-popup'); return false;}\n        if(this.isUndefinedOrEmpty(sheet[XLSX.utils.encode_cell({c:3, r:index})])\n           || ['true','false'].indexOf(sheet[XLSX.utils.encode_cell({c:3, r:index})].v) < 0){this.faultMessage = \"The value of EXERCISE ITEM in sheet 'LEARNING ITEMS' has to be 'true' or 'false' in cell \"+ XLSX.utils.encode_cell({c:3, r:index}) +\"!\"; this.$modal.show('fault-popup'); return false;}\n        if(sheet[XLSX.utils.encode_cell({c:3, r:index})].v == 'true' \n           && this.isUndefinedOrEmpty(sheet[XLSX.utils.encode_cell({c:4, r:index})])){this.faultMessage = \"In sheet 'LEARNING ITEMS', the DIFFICULTY cell can't be empty in cell \"+ XLSX.utils.encode_cell({c:4, r:index}) +\" when EXERCISE ITEM is 'true'!\"; this.$modal.show('fault-popup'); return false;}\n        var currentDifficulty = \"\";\n        if(sheet[XLSX.utils.encode_cell({c:3, r:index})].v == 'true'){\n          currentDifficulty = sheet[XLSX.utils.encode_cell({c:4, r:index})].v;\n        } \n        var currentContentSections = \"\";\n        var currentDomainConcepts = \"\";\n        if(!this.isUndefinedOrEmpty(sheet[XLSX.utils.encode_cell({c:5, r:index})])){\n          currentContentSections = sheet[XLSX.utils.encode_cell({c:5, r:index})].v;\n        }\n        if(!this.isUndefinedOrEmpty(sheet[XLSX.utils.encode_cell({c:6, r:index})])){\n          currentDomainConcepts = sheet[XLSX.utils.encode_cell({c:6, r:index})].v;\n        }\n        let data = {\n          _id: sheet[XLSX.utils.encode_cell({c:0, r:index})].v,\n          name: sheet[XLSX.utils.encode_cell({c:1, r:index})].v,\n          url: sheet[XLSX.utils.encode_cell({c:2, r:index})].v,\n          isExerciseItem: sheet[XLSX.utils.encode_cell({c:3, r:index})].v,\n          difficulty: currentDifficulty,\n          ContentSections: currentContentSections,\n          DomainConcepts: currentDomainConcepts,\n        }\n        learningitems.push(data);\n        index += 1;\n      }\n\n      // Check if all the values are valid in every learning outcome\n      sheet = wb.Sheets[\"LEARNING OUTCOMES\"];\n      index = 1;\n      while(!this.isUndefinedOrEmpty(sheet[XLSX.utils.encode_cell({c:0, r:index})])){\n        if(this.isUndefinedOrEmpty(sheet[XLSX.utils.encode_cell({c:1, r:index})])){this.faultMessage = \"There is no NAME in sheet 'LEARNING OUTCOMES' in cell \"+ XLSX.utils.encode_cell({c:1, r:index}) +\"!\"; this.$modal.show('fault-popup'); return false;}\n        if(this.isUndefinedOrEmpty(sheet[XLSX.utils.encode_cell({c:2, r:index})])){this.faultMessage = \"There is no BLOOMLEVEL COGNITIVE in sheet 'LEARNING OUTCOMES' in cell \"+ XLSX.utils.encode_cell({c:2, r:index}) +\"!\"; this.$modal.show('fault-popup'); return false;}\n        if(this.isUndefinedOrEmpty(sheet[XLSX.utils.encode_cell({c:3, r:index})])){this.faultMessage = \"There is no BLOOMLEVEL KNOWLEDGE in sheet 'LEARNING OUTCOMES' in cell \"+ XLSX.utils.encode_cell({c:3, r:index}) +\"!\"; this.$modal.show('fault-popup'); return false;}\n        var currentLearningItems = \"\";\n        currentContentSections = \"\";\n        currentDomainConcepts = \"\";\n        if(!this.isUndefinedOrEmpty(sheet[XLSX.utils.encode_cell({c:4, r:index})])){\n          currentLearningItems = sheet[XLSX.utils.encode_cell({c:4, r:index})].v;\n        }\n        if(!this.isUndefinedOrEmpty(sheet[XLSX.utils.encode_cell({c:5, r:index})])){\n          currentContentSections = sheet[XLSX.utils.encode_cell({c:5, r:index})].v;\n        }\n        if(!this.isUndefinedOrEmpty(sheet[XLSX.utils.encode_cell({c:6, r:index})])){\n          currentDomainConcepts = sheet[XLSX.utils.encode_cell({c:6, r:index})].v;\n        }\n        let data = {\n          _id: sheet[XLSX.utils.encode_cell({c:0, r:index})].v,\n          name: sheet[XLSX.utils.encode_cell({c:1, r:index})].v,\n          BloomLevelCognitive: sheet[XLSX.utils.encode_cell({c:2, r:index})].v,\n          BloomLevelKnowledge: sheet[XLSX.utils.encode_cell({c:3, r:index})].v,\n          LearningItems: currentLearningItems,\n          ContentSections: currentContentSections,\n          DomainConcepts: currentDomainConcepts,\n        }\n        learningoutcomes.push(data);\n        index += 1;\n      }\n\n      // Check if all the values are valid in every error type\n      sheet = wb.Sheets[\"ERROR TYPES\"];\n      index = 1;\n      while(!this.isUndefinedOrEmpty(sheet[XLSX.utils.encode_cell({c:0, r:index})])){\n        if(this.isUndefinedOrEmpty(sheet[XLSX.utils.encode_cell({c:1, r:index})])){this.faultMessage = \"There is no NAME in sheet 'ERROR TYPES' in cell \"+ XLSX.utils.encode_cell({c:1, r:index}) +\"!\"; this.$modal.show('fault-popup'); return false;}\n        if(this.isUndefinedOrEmpty(sheet[XLSX.utils.encode_cell({c:2, r:index})])){this.faultMessage = \"There is no WEIGHT in sheet 'ERROR TYPES' in cell \"+ XLSX.utils.encode_cell({c:2, r:index}) +\"!\"; this.$modal.show('fault-popup'); return false;}\n        var numbers = new Set(\"01234567890\");\n        var weight = sheet[XLSX.utils.encode_cell({c:2, r:index})].v;\n        var onlyNumbers = true;\n        for(var j = 0; j < weight.length; j++){\n            if(!numbers.has(weight[j])){\n                onlyNumbers = false;\n            }\n        }\n        if(!onlyNumbers){this.faultMessage = \"The WEIGHT in sheet 'ERROR TYPES' in cell \"+ XLSX.utils.encode_cell({c:2, r:index}) +\" can only contain numbers!\"; this.$modal.show('fault-popup'); return false;}\n        if(this.isUndefinedOrEmpty(sheet[XLSX.utils.encode_cell({c:3, r:index})])){this.faultMessage = \"There is no DESCRIPTION in sheet 'ERROR TYPES' in cell \"+ XLSX.utils.encode_cell({c:3, r:index}) +\"!\"; this.$modal.show('fault-popup'); return false;}\n        var currentLearningOutcome = \"\";\n        if(!this.isUndefinedOrEmpty(sheet[XLSX.utils.encode_cell({c:4, r:index})])){\n          currentLearningOutcome = sheet[XLSX.utils.encode_cell({c:4, r:index})].v;\n        }\n        if(currentLearningOutcome.indexOf(',') > -1){this.faultMessage = \"There can't be more than one LEARNING OUTCOME in sheet 'ERROR TYPES' in cell \"+ XLSX.utils.encode_cell({c:4, r:index}) +\"! So no commas are allowed to separate multiple IDs.\"; this.$modal.show('fault-popup'); return false;}\n        let data = {\n          _id: sheet[XLSX.utils.encode_cell({c:0, r:index})].v,\n          name: sheet[XLSX.utils.encode_cell({c:1, r:index})].v,\n          weight: sheet[XLSX.utils.encode_cell({c:2, r:index})].v,\n          description: sheet[XLSX.utils.encode_cell({c:3, r:index})].v,\n          learningOutcome: currentLearningOutcome,\n        }\n        errortypes.push(data);\n        index += 1;\n      }\n\n      // Check if all IDs are unique\n      var allIDs = [];\n      var domainconceptIDs = [];\n      var contentsectionIDs = [];\n      var learningitemIDs = [];\n      var learningoutcomeIDs = [];\n      var errortypeIDs = [];\n      for (var i = 0; i < domainconcepts.length; i++){allIDs.push(domainconcepts[i]._id); domainconceptIDs.push(domainconcepts[i]._id)}\n      for (i = 0; i < contentsections.length; i++){allIDs.push(contentsections[i]._id);   contentsectionIDs.push(contentsections[i]._id)}\n      for (i = 0; i < learningitems.length; i++){allIDs.push(learningitems[i]._id);       learningitemIDs.push(learningitems[i]._id)}\n      for (i = 0; i < learningoutcomes.length; i++){allIDs.push(learningoutcomes[i]._id); learningoutcomeIDs.push(learningoutcomes[i]._id)}\n      for (i = 0; i < errortypes.length; i++){allIDs.push(errortypes[i]._id);             errortypeIDs.push(errortypes[i]._id)}\n      var setAllIDs = new Set(allIDs);\n      if(allIDs.length != Array.from(setAllIDs).length){this.faultMessage = \"Not every ID is unique in the database!\"; this.$modal.show('fault-popup'); return false;}\n\n      // Check if all the used IDs link to the correct type of items\n      for (i = 0; i < contentsections.length; i++){\n        currentDomainConcepts = contentsections[i].DomainConcepts.split(\",\");\n        for(j = 0; j < currentDomainConcepts.length; j++){\n          if(domainconceptIDs.indexOf(currentDomainConcepts[j]) < 0 && currentDomainConcepts[j].length > 0){this.faultMessage = \"A CONTENT SECTION exists with an invalid ID of a DOMAIN CONCEPT! The invalid ID = '\" + currentDomainConcepts[j] + \"'\"; this.$modal.show('fault-popup'); return false;}\n        }\n      }\n      for (i = 0; i < learningitems.length; i++){\n        currentDomainConcepts = learningitems[i].DomainConcepts.split(\",\");\n        for(j = 0; j < currentDomainConcepts.length; j++){\n          if(domainconceptIDs.indexOf(currentDomainConcepts[j]) < 0 && currentDomainConcepts[j].length > 0){this.faultMessage = \"A LEARNING ITEM exists with an invalid ID of a DOMAIN CONCEPT! The invalid ID = '\" + currentDomainConcepts[j] + \"'\"; this.$modal.show('fault-popup'); return false;}\n        }\n        currentContentSections = learningitems[i].ContentSections.split(\",\");\n        for(j = 0; j < currentContentSections.length; j++){\n          if(contentsectionIDs.indexOf(currentContentSections[j]) < 0 && currentContentSections[j].length > 0){this.faultMessage = \"A LEARNING ITEM exists with an invalid ID of a CONTENT SECTION! The invalid ID = '\" + currentContentSections[j] + \"'\"; this.$modal.show('fault-popup'); return false;}\n        }\n      }\n      for (i = 0; i < learningoutcomes.length; i++){\n        currentDomainConcepts = learningoutcomes[i].DomainConcepts.split(\",\");\n        for(j = 0; j < currentDomainConcepts.length; j++){\n          if(domainconceptIDs.indexOf(currentDomainConcepts[j]) < 0 && currentDomainConcepts[j].length > 0){this.faultMessage = \"A LEARNING OUTCOME exists with an invalid ID of a DOMAIN CONCEPT! The invalid ID = '\" + currentDomainConcepts[j] + \"'\"; this.$modal.show('fault-popup'); return false;}\n        }\n        currentContentSections = learningoutcomes[i].ContentSections.split(\",\");\n        for(j = 0; j < currentContentSections.length; j++){\n          if(contentsectionIDs.indexOf(currentContentSections[j]) < 0 && currentContentSections[j].length > 0){this.faultMessage = \"A LEARNING OUTCOME exists with an invalid ID of a CONTENT SECTION! The invalid ID = '\" + currentContentSections[j] + \"'\"; this.$modal.show('fault-popup'); return false;}\n        }\n        currentLearningItems = learningoutcomes[i].LearningItems.split(\",\");\n        for(j = 0; j < currentLearningItems.length; j++){\n          if(learningitemIDs.indexOf(currentLearningItems[j]) < 0 && currentLearningItems[j].length > 0){this.faultMessage = \"A LEARNING OUTCOME exists with an invalid ID of a LEARNING ITEM! The invalid ID = '\" + currentLearningItems[j] + \"'\"; this.$modal.show('fault-popup'); return false;}\n        }\n      }\n      for (i = 0; i < errortypes.length; i++){\n        if(errortypes[i].learningOutcome.length > 0 && learningoutcomeIDs.indexOf(errortypes[i].learningOutcome) < 0){this.faultMessage = \"An ERROR TYPE exists with an invalid ID of a LEARNING OUTCOME! The invalid ID = '\" + errortypes[i].learningOutcome + \"'\"; this.$modal.show('fault-popup'); return false;}\n      }\n      return [true, errortypes, learningoutcomes, learningitems, contentsections, domainconcepts];\n    },\n    // This function gets the old objects and their IDs from the uploaded excel file and the new objects with their new IDs that are already pushed (imported) to the database\n    // it returns a dictionary that links the old IDs with the new IDs ( the new IDs are created after pushing them to the database)\n    createOldIDtoNew(oldObjects, newObjects){\n      var oldIDToNew = {};\n      for(var i = 0; i < oldObjects.length; i++){\n        oldIDToNew[oldObjects[i]._id] = newObjects[i]._id;\n      }\n      return oldIDToNew;\n    },\n    // This function replaces the reference of old IDs to DomainConcepts to their new IDs in a data object to be imported (could be content sections/learning items/learning outcomes)\n    updateDomainSectionIDs(data, oldDomainConceptIDsToNew){\n      var currentDomainConcepts = data.DomainConcepts.split(\",\");\n      var newDomainConcepts = [];\n      for(var i = 0; i < currentDomainConcepts.length; i++){\n        if(currentDomainConcepts[i].length > 0){\n          newDomainConcepts.push(oldDomainConceptIDsToNew[currentDomainConcepts[i]]);\n        }\n      }\n      return newDomainConcepts;\n    },\n    // This function replaces the reference of old IDs to ContentSecions to their new IDs in a data object to be imported (could be learning items/learning outcomes)\n    updateContentSectionIDs(data, oldContentSectionIDsToNew){\n      var currentContentSections = data.ContentSections.split(\",\");\n      var newContentSections = [];\n      for(var i = 0; i < currentContentSections.length; i++){\n        if(currentContentSections[i].length > 0){\n          newContentSections.push(oldContentSectionIDsToNew[currentContentSections[i]]);\n        }\n      }\n      return newContentSections;\n    },\n    // This function replaces the reference of old IDs to Learning items to their new IDs in a data object to be imported (learning outcomes)\n    updateLearningItemIDs(data, oldLearningItemIDsToNew){\n      var currentLearningItems = data.LearningItems.split(\",\");\n      var newLearningItems = [];\n      for(var i = 0; i < currentLearningItems.length; i++){\n        if(currentLearningItems[i].length > 0){\n          newLearningItems.push(oldLearningItemIDsToNew[currentLearningItems[i]]);\n        }\n      }\n      return newLearningItems;\n    },\n    // This function recursively takes a domain concept from the excel file, and pushes it to the database\n    // After alle the domain concepts are pushed to the database, a dictionary can be made linking the old IDs to the new ones of this table\n    // And next the function is called to import the content sections\n    importDomainConcepts(list, all_data){\n      var context = this;\n      var first = list.shift();\n      var data = {...first};\n      delete data._id;\n      if(list.length > 0){\n        axios.post(`${server.baseURL}/domainconcept/create`, data)\n        .then(function(){\n          context.importDomainConcepts(list, all_data);\n        });   \n      }\n      else{\n        axios.post(`${server.baseURL}/domainconcept/create`, data)\n        .then(function(){\n          axios\n          .get(`${server.baseURL}/domainconcept/domainconcepts`)\n          .then(data => (context.updateNewDomainConcepts(context, data.data),\n                         context.importContentSections([...all_data[1]], context.createOldIDtoNew(all_data[0], context.domainConcepts), all_data)));\n        }); \n      }\n    },\n    // This function recursively takes a content section from the excel file, replaces the old ID references to other objects with new IDs, and pushes it to the database\n    // After alle the content sections are pushed to the database, a dictionary can be made linking the old IDs to the new ones of this table\n    // And next the function is called to import the learning items\n    importContentSections(list, oldDomainConceptIDsToNew, all_data){\n      var context = this;\n      var first = list.shift();\n      var data = {...first};\n      delete data._id;\n      data.DomainConcepts = context.updateDomainSectionIDs(data, oldDomainConceptIDsToNew);\n      if(list.length > 0){\n        axios.post(`${server.baseURL}/contentsection/create`, data)\n        .then(function(){\n          context.importContentSections(list, oldDomainConceptIDsToNew, all_data);\n        });   \n      }\n      else{\n        axios.post(`${server.baseURL}/contentsection/create`, data)\n        .then(function(){\n          axios\n          .get(`${server.baseURL}/contentsection/contentsections`)\n          .then(data => (context.updateNewContentSections(context, data.data),\n                         context.importLearningItems([...all_data[2]], oldDomainConceptIDsToNew, context.createOldIDtoNew(all_data[1], context.contentSections), all_data)));\n        }); \n      }\n    },\n    // This function recursively takes a learning item from the excel file, replaces the old ID references to other objects with new IDs, and pushes it to the database\n    // After alle the learning items are pushed to the database, a dictionary can be made linking the old IDs to the new ones of this table\n    // And next the function is called to import the learning outcomes\n    importLearningItems(list, oldDomainConceptIDsToNew, oldContentSectionIDsToNew, all_data){\n      var context = this;\n      var first = list.shift();\n      var data = {...first};\n      delete data._id;\n      data.DomainConcepts = context.updateDomainSectionIDs(data, oldDomainConceptIDsToNew);\n      data.ContentSections = context.updateContentSectionIDs(data, oldContentSectionIDsToNew);\n      if(list.length > 0){\n        axios.post(`${server.baseURL}/learningitem/create`, data)\n        .then(function(){\n          context.importLearningItems(list, oldDomainConceptIDsToNew, oldContentSectionIDsToNew, all_data);\n        });   \n      }\n      else{\n        axios.post(`${server.baseURL}/learningitem/create`, data)\n        .then(function(){\n          axios\n          .get(`${server.baseURL}/learningitem/learningitems`)\n          .then(data => (context.updateNewLearningItems(context, data.data),\n                         context.importLearningOutcomes([...all_data[3]], oldDomainConceptIDsToNew, oldContentSectionIDsToNew, context.createOldIDtoNew(all_data[2], context.learningItems), all_data)));\n        }); \n      }\n    },\n    // This function recursively takes a learning outcome from the excel file, replaces the old ID references to other objects with new IDs, and pushes it to the database\n    // After alle the learning outcomes are pushed to the database, a dictionary can be made linking the old IDs to the new ones of this table\n    // And next the function is called to import the error types\n    importLearningOutcomes(list, oldDomainConceptIDsToNew, oldContentSectionIDsToNew, oldLearningItemIDsToNew, all_data){\n      var context = this;\n      var first = list.shift();\n      var data = {...first};\n      delete data._id;\n      data.DomainConcepts = context.updateDomainSectionIDs(data, oldDomainConceptIDsToNew);\n      data.ContentSections = context.updateContentSectionIDs(data, oldContentSectionIDsToNew);\n      data.LearningItems = context.updateLearningItemIDs(data, oldLearningItemIDsToNew);\n      if(list.length > 0){\n        axios.post(`${server.baseURL}/learningoutcome/create`, data)\n        .then(function(){\n          context.importLearningOutcomes(list, oldDomainConceptIDsToNew, oldContentSectionIDsToNew, oldLearningItemIDsToNew, all_data);\n        });   \n      }\n      else{\n        axios.post(`${server.baseURL}/learningoutcome/create`, data)\n        .then(function(){\n          axios\n          .get(`${server.baseURL}/learningoutcome/learningoutcomes`)\n          .then(data => (context.updateNewLearningOutcomes(context, data.data),\n                         context.importErrorTypes([...all_data[4]], context.createOldIDtoNew(all_data[3], context.learningOutcomes), all_data)));\n        }); \n      }\n    },\n    // This function recursively takes an error type from the excel file, replaces the old ID references to other objects with new IDs, and pushes it to the database\n    // After alle the error types are pushed to the database it updates the current Error Types\n    // When this function finishes, the new database is imported\n    importErrorTypes(list, oldLearningOutcomeIDsToNew, all_data){\n      var context = this;\n      var first = list.shift();\n      var data = {...first};\n      delete data._id;\n      if(data.learningOutcome.length > 0){\n        data.learningOutcome = oldLearningOutcomeIDsToNew[data.learningOutcome];  \n      }\n      if(list.length > 0){\n        axios.post(`${server.baseURL}/errortype/create`, data)\n        .then(function(){\n          context.importErrorTypes(list, oldLearningOutcomeIDsToNew, all_data);\n        });   \n      }\n      else{\n        axios.post(`${server.baseURL}/errortype/create`, data)\n        .then(function(){\n          axios\n          .get(`${server.baseURL}/errortype/errortypes`)\n          .then(data => (context.updateNewErrorTypes(context, data.data)));\n        }); \n      }\n    },\n    // Checks if given variable is undefined or empty\n    isUndefinedOrEmpty(x){\n      if(x == undefined || x.v.length < 1){ return true;}\n      else{ return false;}\n    },\n  }\n};\n</script>\n\n<style>\n/*This section contains some styles for some specific buttons*/\n  #core{\n    margin-left: 160px;\n  }\n  #cancelButton{\n        position: absolute;\n        top: 0px; left: 380px;\n  }\n  #errortype-database{\n    margin-right: 10px;\n    margin-left: 10px;\n  }\n  #learningoutcome-database{\n    margin-right: 10px;\n    margin-left: 10px;\n  }\n  #domainconcept-database{\n    margin-right: 10px;\n    margin-left: 10px;\n  }\n  #learningitem-database{\n    margin-right: 10px;\n    margin-left: 10px;\n  }\n  #contentsection-database{\n    margin-right: 10px;\n    margin-left: 10px;\n  }\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Database.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Database.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Database.vue?vue&type=template&id=018513ba&\"\nimport script from \"./Database.vue?vue&type=script&lang=js&\"\nexport * from \"./Database.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Database.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('modal',{staticStyle:{\"background\":\"transparent\"},attrs:{\"name\":\"create-errortype\",\"height\":\"600\"},on:{\"closed\":_vm.hideErrorType}},[_c('div',{staticClass:\"col-md-12 form-wrapper\",staticStyle:{\"text-align\":\"center\"}},[_c('br'),_c('h2',[_vm._v(\" Create Errortype \")]),_c('div',{staticClass:\"form-group col-md-12\"},[_c('label',{attrs:{\"for\":\"title\"}},[_vm._v(\" Name \")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.errorName),expression:\"errorName\"}],staticClass:\"form-control\",staticStyle:{\"border\":\"2px solid red\"},attrs:{\"type\":\"text\",\"id\":\"name\",\"name\":\"title\",\"placeholder\":\"Enter name\"},domProps:{\"value\":(_vm.errorName)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.errorName=$event.target.value},_vm.changeInNewErrorType]}})]),_c('div',{staticClass:\"form-group col-md-12\"},[_c('label',{attrs:{\"for\":\"title\"}},[_vm._v(\" Weight \")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.errorWeight),expression:\"errorWeight\"}],staticClass:\"form-control\",staticStyle:{\"border\":\"2px solid red\"},attrs:{\"type\":\"text\",\"id\":\"weight\",\"name\":\"title\",\"placeholder\":\"Enter weight\"},domProps:{\"value\":(_vm.errorWeight)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.errorWeight=$event.target.value},_vm.changeInNewErrorType]}})]),_c('div',{staticClass:\"form-group col-md-12\"},[_c('label',{attrs:{\"for\":\"description\"}},[_vm._v(\" Description \")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.errorDescription),expression:\"errorDescription\"}],staticClass:\"form-control\",staticStyle:{\"border\":\"2px solid red\"},attrs:{\"type\":\"text\",\"id\":\"description\",\"name\":\"description\",\"placeholder\":\"Enter description\"},domProps:{\"value\":(_vm.errorDescription)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.errorDescription=$event.target.value},_vm.changeInNewErrorType]}})]),_c('label',{attrs:{\"for\":\"learningOutcome\"}},[_vm._v(\" Learning outcome \")]),_c('div',{staticStyle:{\"display\":\"flex\",\"align-items\":\"center\",\"justify-content\":\"center\"}},[_c('div',{staticStyle:{\"width\":\"435px\",\"border\":\"2px solid green\",\"display\":\"flex\",\"align-items\":\"center\",\"justify-content\":\"center\"},attrs:{\"id\":\"dropdown\"}},[_c('multiselect',{staticStyle:{\"width\":\"435px\"},attrs:{\"open-direction\":\"bottom\",\"options\":Object.values(_vm.dropdownLearningOutcomes),\"maxHeight\":180,\"placeholder\":\"Select learning outcome\"},on:{\"input\":_vm.changeInNewErrorType},model:{value:(_vm.selectedLearningOutcome),callback:function ($$v) {_vm.selectedLearningOutcome=$$v},expression:\"selectedLearningOutcome\"}})],1)]),_c('br'),_c('div',{staticClass:\"form-group col-md-4 pull-right\"},[_c('button',{staticClass:\"btn btn-success\",on:{\"click\":_vm.pushErrorType}},[_vm._v(\" Create new errortype \")]),_c('button',{staticClass:\"btn btn-success\",attrs:{\"id\":\"cancelButton\"},on:{\"click\":_vm.hideErrorType}},[_vm._v(\" Cancel \")])])])]),_c('modal',{staticStyle:{\"background\":\"transparent\"},attrs:{\"name\":\"add-text-popup\",\"height\":\"160\",\"draggable\":\".window-header\"},on:{\"before-close\":_vm.pushText}},[_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('br'),_c('h3',[_vm._v(\"Type the text:\")]),_c('textarea',{staticStyle:{\"text-align\":\"center\",\"resize\":\"none\"},attrs:{\"id\":\"textarea_freetext\",\"rows\":\"1\",\"cols\":\"51\",\"placeholder\":\"Enter text here\"},on:{\"input\":_vm.updateText}}),_c('br'),_vm._v(\"   \\n            Size:  \\n            \"),_c('input',{staticClass:\"slider\",attrs:{\"id\":\"textSlider\",\"type\":\"range\",\"min\":\"10\",\"max\":\"80\",\"value\":\"30\"},on:{\"input\":_vm.updateText}})]),_c('div',{staticClass:\"window-header\",attrs:{\"id\":\"moveHandle\"}},[_c('a',[_c('p',[_c('i',{staticClass:\"fas fa-arrows-alt\",staticStyle:{\"font-size\":\"50px\"}})])])])]),_c('modal',{staticStyle:{\"background\":\"transparent\"},attrs:{\"name\":\"edit-text-popup\",\"height\":\"160\",\"draggable\":\".window-header\"},on:{\"before-close\":_vm.unselect}},[_c('div',{staticStyle:{\"text-align\":\"center\"}},[_c('br'),_c('h3',[_vm._v(\"Edit the text:\")]),(_vm.selectedForm!=null)?_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedForm.content),expression:\"selectedForm.content\"}],staticStyle:{\"text-align\":\"center\",\"resize\":\"none\"},attrs:{\"id\":\"edit-freetext\",\"rows\":\"1\",\"cols\":\"51\"},domProps:{\"value\":(_vm.selectedForm.content)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.$set(_vm.selectedForm, \"content\", $event.target.value)},_vm.editText]}}):_vm._e(),_c('br'),_vm._v(\"   \\n            Size:  \\n            \"),(_vm.selectedForm!=null)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.selectedForm.height),expression:\"selectedForm.height\"}],staticClass:\"slider\",attrs:{\"id\":\"textSlider2\",\"type\":\"range\",\"min\":\"10\",\"max\":\"80\"},domProps:{\"value\":(_vm.selectedForm.height)},on:{\"input\":_vm.editText,\"__r\":function($event){_vm.$set(_vm.selectedForm, \"height\", $event.target.value)}}}):_vm._e()]),_c('div',{staticClass:\"window-header\",attrs:{\"id\":\"moveHandle\"}},[_c('a',[_c('p',[_c('i',{staticClass:\"fas fa-arrows-alt\",staticStyle:{\"font-size\":\"50px\"}})])])])]),_c('modal',{attrs:{\"name\":\"edit-name\",\"height\":\"290\",\"width\":\"700\"}},[_c('div',{staticStyle:{\"text-align\":\"center\",\"color\":\"white\",\"height\":\"290px\",\"background-color\":\"black\"}},[_c('br'),_c('h3',[_vm._v(\"Edit name:\")]),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.pdfName),expression:\"pdfName\"}],staticStyle:{\"text-align\":\"center\",\"resize\":\"none\"},attrs:{\"id\":\"export_name\",\"rows\":\"1\",\"cols\":\"70\"},domProps:{\"value\":(_vm.pdfName)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.pdfName=$event.target.value}}}),_c('br'),_c('h4',[_vm._v(\"\\n                Add summary to pdf? \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.summaryNeeded),expression:\"summaryNeeded\"}],attrs:{\"type\":\"checkbox\",\"id\":\"summaryNeeded\"},domProps:{\"checked\":Array.isArray(_vm.summaryNeeded)?_vm._i(_vm.summaryNeeded,null)>-1:(_vm.summaryNeeded)},on:{\"change\":function($event){var $$a=_vm.summaryNeeded,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.summaryNeeded=$$a.concat([$$v]))}else{$$i>-1&&(_vm.summaryNeeded=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.summaryNeeded=$$c}}}})]),_c('br'),_c('i',{staticClass:\"fas fa-file-download\",staticStyle:{\"font-size\":\"80px\"},on:{\"click\":_vm.exportPDF}})])]),_c('modal',{attrs:{\"name\":\"select-error\",\"height\":\"300\",\"width\":\"900\"},on:{\"before-close\":_vm.unselect}},[_c('section',{staticClass:\"container\"},[_c('div',{attrs:{\"id\":\"left-half\"}},[_c('br'),_c('article',[_c('h3',[_vm._v(\"Select error:\")]),_c('div',{staticStyle:{\"padding-right\":\"15px\"}},[_c('multiselect',{attrs:{\"id\":\"dropdown\",\"options\":Object.values(_vm.dropdownErrorTypes),\"maxHeight\":180,\"placeholder\":\"Select error\"},on:{\"input\":_vm.updateAnnotation},model:{value:(_vm.selectedErrorType),callback:function ($$v) {_vm.selectedErrorType=$$v},expression:\"selectedErrorType\"}}),_c('h3',[_c('div',[_c('br'),_c('p',[_vm._v(\"Weight = \"+_vm._s(_vm.selectedWeight))])])]),_c('br'),_c('br'),_c('button',{staticClass:\"btn btn-success\",on:{\"click\":_vm.openErrorTypePopup}},[_vm._v(\" Create new errortype \")])],1)])]),_c('div',{attrs:{\"id\":\"right-half\"}},[_c('br'),_c('article',[_c('h3',[_vm._v(\"Give (optional) feedback:\")]),_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.feedback_value),expression:\"feedback_value\"}],staticStyle:{\"resize\":\"none\"},attrs:{\"id\":\"error_feedback\",\"rows\":\"8\",\"cols\":\"30\"},domProps:{\"value\":(_vm.feedback_value)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.feedback_value=$event.target.value},_vm.updateAnnotation]}})])])])]),_c('div',{attrs:{\"id\":\"upload-export\"}},[_c('a',[_c('p',[_c('i',{staticClass:\"fas fa-file-upload\",staticStyle:{\"font-size\":\"80px\"},attrs:{\"id\":\"upload-button\"},on:{\"click\":_vm.select}}),_c('input',{attrs:{\"type\":\"file\",\"id\":\"file-to-upload\",\"accept\":\"application/pdf\"},on:{\"change\":_vm.upload}}),_c('i',{staticClass:\"fas fa-file-download\",staticStyle:{\"font-size\":\"80px\"},on:{\"click\":_vm.editName}})])])]),_c('div',{staticClass:\"sidebar\"},[_c('div',{staticClass:\"slidecontainer\"},[_c('b',{attrs:{\"href\":\"#\"}},[_vm._v(\"___________\")]),_c('b',{attrs:{\"href\":\"#\"}},[_vm._v(\"- Zoom +\")]),_c('input',{staticClass:\"slider\",attrs:{\"id\":\"zoomSlider\",\"type\":\"range\",\"min\":\"20\",\"max\":\"99\",\"value\":\"60\"},on:{\"change\":_vm.updateZoom}}),_c('b',{attrs:{\"href\":\"#\"}},[_vm._v(\"___________\")])]),_c('div',{staticClass:\"error-tools\"},[_c('br'),_c('b',{attrs:{\"href\":\"#\"}},[_vm._v(\"Error Tool \")]),_c('a',[_c('p',[_c('i',{staticClass:\"fas fa-sticky-note\",attrs:{\"id\":\"annotation-tool\"},on:{\"click\":function($event){_vm.updateTool('annotation')}}})])]),_c('b',{attrs:{\"href\":\"#\"}},[_vm._v(\"___________\")])]),_c('div',{staticClass:\"draw-tools\"},[_c('br'),_c('b',{attrs:{\"href\":\"#\"}},[_vm._v(\"Drawing Tools\")]),_c('a',[_c('p',[_c('i',{staticClass:\"far fa-circle\",attrs:{\"id\":\"ellipse-tool\"},on:{\"click\":function($event){_vm.updateTool('ellipse')}}}),_vm._v(\" / \\n            \"),_c('i',{staticClass:\"far fa-square\",attrs:{\"id\":\"rectangle-tool\"},on:{\"click\":function($event){_vm.updateTool('rectangle')}}}),_vm._v(\" / \\n            \"),_c('i',{staticClass:\"fas fa-window-minimize\",attrs:{\"id\":\"line-tool\"},on:{\"click\":function($event){_vm.updateTool('line')}}}),_vm._v(\" / \\n            \"),_c('i',{staticClass:\"fas fa-paragraph\",attrs:{\"id\":\"text-tool\"},on:{\"click\":function($event){_vm.updateTool('text')}}})])]),_c('b',{attrs:{\"href\":\"#\"}},[_vm._v(\"Thickness\")]),_c('b',[_c('h2',[_c('i',{staticClass:\"fas fa-angle-left\",on:{\"click\":_vm.thinner}}),_c('p',{staticStyle:{\"display\":\"inline\"},attrs:{\"id\":\"thickness-value\"}},[_vm._v(\" 3 \")]),_c('i',{staticClass:\"fas fa-angle-right\",on:{\"click\":_vm.thicker}})])]),_c('b',{attrs:{\"href\":\"#\"}},[_vm._v(\"Colour\")]),_c('div',{attrs:{\"id\":\"colour-part\"}},[_c('ColorPicker',{attrs:{\"id\":\"colour-picker\",\"width\":130,\"height\":130,\"disabled\":false,\"value\":\"#ff0000\"},on:{\"color-change\":_vm.onColorChange}})],1),_c('b',{attrs:{\"href\":\"#\"}},[_vm._v(\"___________\")])]),_c('div',{staticClass:\"editing-tools\"},[_c('br'),_c('b',{attrs:{\"href\":\"#\"}},[_vm._v(\"Editing Tools\")]),_c('a',[_c('p',[_c('i',{staticClass:\"fas fa-trash-alt\",attrs:{\"id\":\"delete-tool\"},on:{\"click\":function($event){_vm.updateTool('delete')}}}),_vm._v(\" / \\n            \"),_c('i',{staticClass:\"fas fa-arrows-alt\",attrs:{\"id\":\"move-tool\"},on:{\"click\":function($event){_vm.updateTool('move')}}})])]),_c('b',{attrs:{\"href\":\"#\"}},[_vm._v(\"___________\")])])]),_c('div',{attrs:{\"id\":\"core\"}},[_c('div',{attrs:{\"id\":\"pdf-and-belongings\"}},[_c('div',{attrs:{\"id\":\"pdf-meta\"}},[_c('div',{attrs:{\"id\":\"name-space\"}},[_c('h3',[_vm._v(_vm._s(_vm.pdfName.replace(/.pdf/gi, '')))])]),_c('div',{attrs:{\"id\":\"pdf-buttons\"}},[_c('br'),_c('i',{staticClass:\"fas fa-backward\",staticStyle:{\"font-size\":\"30px\"},on:{\"click\":_vm.firstPage}}),_c('i',{staticClass:\"fas fa-arrow-left\",staticStyle:{\"font-size\":\"30px\"},on:{\"click\":_vm.previousPage}}),_c('i',{staticClass:\"fas fa-arrow-right\",staticStyle:{\"font-size\":\"30px\"},on:{\"click\":_vm.nextPage}}),_c('i',{staticClass:\"fas fa-forward\",staticStyle:{\"font-size\":\"30px\"},on:{\"click\":_vm.lastPage}})]),_vm._m(0)]),_vm._m(1)])]),_c('div',{staticStyle:{\"display\":\"flex\",\"align-items\":\"center\",\"justify-content\":\"center\"},attrs:{\"id\":\"circle2\"}},[_c('circle2')],1),_c('div',{attrs:{\"id\":\"inner_remaining\"}})],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',{attrs:{\"id\":\"page-count-container\"}},[_c('p',{attrs:{\"id\":\"waiting\"}}),_c('div',{staticStyle:{\"display\":\"inline\"},attrs:{\"id\":\"pdf-current-page\"}}),_vm._v(\" / \"),_c('div',{staticStyle:{\"display\":\"inline\"},attrs:{\"id\":\"pdf-total-pages\"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"canvases\"}},[_c('div',{attrs:{\"id\":\"bottom\"}},[_c('canvas',{attrs:{\"id\":\"pdf-canvas\",\"width\":\"0\",\"height\":\"0\"}})]),_c('div',{attrs:{\"id\":\"middle\"}},[_c('canvas',{attrs:{\"id\":\"form-holding-canvas\",\"width\":\"0\",\"height\":\"0\"}})]),_c('div',{attrs:{\"id\":\"top\"}},[_c('canvas',{attrs:{\"id\":\"draw-canvas\",\"width\":\"0\",\"height\":\"0\"}})])])}]\n\nexport { render, staticRenderFns }","<template>\n    <div id=\"app\">\n        <!-- Popup for creating errortype !-->\n        <modal name=\"create-errortype\"  height=\"600\" style=\"background: transparent;\" @closed=\"hideErrorType\">\n            <div class=\"col-md-12 form-wrapper\" style=\"text-align: center;\">\n            <br><h2> Create Errortype </h2>\n                <div class=\"form-group col-md-12\">\n                    <label for=\"title\"> Name </label>\n                    <input style=\"border: 2px solid red;\" @input=\"changeInNewErrorType\" type=\"text\" id=\"name\" v-model=\"errorName\" name=\"title\" class=\"form-control\" placeholder=\"Enter name\">\n                </div>\n\n                <div class=\"form-group col-md-12\">\n                    <label for=\"title\"> Weight </label>\n                    <input style=\"border: 2px solid red;\" @input=\"changeInNewErrorType\" type=\"text\" id=\"weight\" v-model=\"errorWeight\" name=\"title\" class=\"form-control\" placeholder=\"Enter weight\">\n                </div>\n\n                <div class=\"form-group col-md-12\">\n                    <label for=\"description\"> Description </label>\n                    <input style=\"border: 2px solid red;\" @input=\"changeInNewErrorType\" type=\"text\" id=\"description\" v-model=\"errorDescription\" name=\"description\" class=\"form-control\" placeholder=\"Enter description\">\n                </div>\n                <label for=\"learningOutcome\"> Learning outcome </label>\n                <div style=\"display: flex;align-items: center;justify-content: center;\">\n                <div id=\"dropdown\" style=\"width: 435px; border: 2px solid green; display: flex;align-items: center;justify-content: center;\">\n                  <multiselect \n                      v-model=\"selectedLearningOutcome\"\n                      open-direction=\"bottom\"\n                      :options=\"Object.values(dropdownLearningOutcomes)\"\n                      :maxHeight=\"180\"\n                      @input=\"changeInNewErrorType\"\n                      placeholder=\"Select learning outcome\"\n                      style=\"width: 435px;\"\n                  ></multiselect></div></div>\n                <br><div class=\"form-group col-md-4 pull-right\">\n                    <button class=\"btn btn-success\" @click=\"pushErrorType\"> Create new errortype </button>\n                    <button id=\"cancelButton\" class=\"btn btn-success\"  @click=\"hideErrorType\"> Cancel </button>  \n                </div>    \n            </div>\n            </modal>\n        \n        <!-- Popup for adding free text !-->\n        <modal name=\"add-text-popup\" @before-close=\"pushText\" height=\"160\" draggable=\".window-header\" style=\"background: transparent;\">\n            <div style=\"text-align: center;\">\n                <br><h3>Type the text:</h3>\n                <textarea \n                        id=\"textarea_freetext\"\n                        rows=\"1\" cols=\"51\" style=\"text-align: center; resize: none;\" @input=\"updateText\" placeholder=\"Enter text here\">\n                </textarea><br>   \n                Size:  \n                <input @input='updateText' id=\"textSlider\" type=\"range\" min=\"10\" max=\"80\" value=\"30\" class=\"slider\">\n            </div>\n            <div id=\"moveHandle\" class=\"window-header\">\n                <a><p><i class=\"fas fa-arrows-alt\" style=\"font-size: 50px;\"></i></p></a>\n            </div>\n            </modal>\n\n        <!-- Popup for editing free text !-->\n        <modal @before-close=\"unselect\" name=\"edit-text-popup\" height=\"160\" draggable=\".window-header\" style=\"background: transparent;\">\n            <div style=\"text-align: center;\">\n                <br><h3>Edit the text:</h3>\n                <textarea v-if=\"selectedForm!=null\"\n                        id=\"edit-freetext\"\n                        rows=\"1\" cols=\"51\" style=\"text-align: center; resize: none;\" v-model=\"selectedForm.content\" @input=\"editText\">\n                </textarea><br>   \n                Size:  \n                <input v-if=\"selectedForm!=null\" @input=\"editText\" id=\"textSlider2\" type=\"range\" min=\"10\" max=\"80\" v-model=\"selectedForm.height\" class=\"slider\">\n            </div>\n            <div id=\"moveHandle\" class=\"window-header\">\n                <a><p><i class=\"fas fa-arrows-alt\" style=\"font-size: 50px;\"></i></p></a>\n            </div>\n            </modal>\n\n        <!-- Popup for editing name before the export !-->\n        <modal name=\"edit-name\" height=\"290\" width=\"700\">\n            <div style=\"text-align: center; color: white; height: 290px; background-color: black;\">\n                <br><h3>Edit name:</h3>\n                <textarea \n                        id=\"export_name\"\n                        rows=\"1\" cols=\"70\" style=\"text-align: center; resize: none;\" v-model=\"pdfName\">\n                </textarea><br>\n                <h4>\n                    Add summary to pdf? <input type=\"checkbox\" id=\"summaryNeeded\" v-model=\"summaryNeeded\">\n                     <!-- <br>Export excel file? <input type=\"checkbox\" id=\"excelNeeded\" v-model=\"excelNeeded\">!-->\n                </h4>  <br> \n                <i @click=\"exportPDF\" class=\"fas fa-file-download\" style=\"font-size: 80px;\"></i>    \n            </div>\n            </modal>\n\n        <!-- Popup for selecting error !-->\n        <modal @before-close=\"unselect\" name=\"select-error\" height=\"300\" width=\"900\">\n            <section class=\"container\">\n                <div id=\"left-half\"><br>\n                    <article>\n                    <h3>Select error:</h3>\n                    <div style=\"padding-right: 15px;\">\n                        <multiselect \n                            id=\"dropdown\"\n                            v-model=\"selectedErrorType\" \n                            :options=\"Object.values(dropdownErrorTypes)\"\n                            @input=\"updateAnnotation\"\n                            :maxHeight=\"180\"\n                            placeholder=\"Select error\"\n                        ></multiselect>\n                        <h3>\n                            <div>\n                                <br><p>Weight = {{ selectedWeight }}</p>\n                            </div>\n                        </h3><br><br>\n                        <button @click=\"openErrorTypePopup\" class=\"btn btn-success\"> Create new errortype </button>\n                    </div>\n                    </article>\n                </div>\n                <div id=\"right-half\"><br>\n                    <article>\n                    <h3>Give (optional) feedback:</h3>\n                    <textarea \n                        @input=\"updateAnnotation\" \n                        v-model=\"feedback_value\" \n                        id=\"error_feedback\" \n                        rows=\"8\" cols=\"30\" style=\"resize: none;\">\n                    </textarea>\n                    </article>\n                </div>\n            </section>\n            </modal>\n        \n        <!-- Buttons for uploading/downloading the pdf !-->\n        <div id=\"upload-export\">\n            <a><p>\n                <i  id=\"upload-button\" @click=\"select\" class=\"fas fa-file-upload\" style=\"font-size: 80px;\"></i> \n                <input type=\"file\" @change=\"upload\" id=\"file-to-upload\" accept=\"application/pdf\" />\n                <i @click=\"editName\" class=\"fas fa-file-download\" style=\"font-size: 80px;\"></i>    \n            </p></a>\n            </div>\n\n        <!-- The sidebar objects !-->\n        <div class=\"sidebar\">\n            <!-- Slider to zoom in on pdf-->\n            <div class=\"slidecontainer\"> \n                <b href=\"#\">___________</b>\n                <b href=\"#\">- Zoom +</b>\n                <input @change='updateZoom' id=\"zoomSlider\" type=\"range\" min=\"20\" max=\"99\" value=\"60\" class=\"slider\">\n                <b href=\"#\">___________</b>\n            </div>\n            <!-- Select different shapes to draw-->\n            <div class=\"error-tools\"><br>\n                <b href=\"#\">Error Tool </b>\n                <a><p><i id=\"annotation-tool\" @click=\"updateTool('annotation')\" class=\"fas fa-sticky-note\"></i></p></a>\n                <b href=\"#\">___________</b>\n            </div>\n            <div class=\"draw-tools\"><br>\n                <b href=\"#\">Drawing Tools</b>\n                <a><p><i id=\"ellipse-tool\" @click=\"updateTool('ellipse')\" class=\"far fa-circle\"></i> / \n                <i id=\"rectangle-tool\" @click=\"updateTool('rectangle')\" class=\"far fa-square\"></i> / \n                <i id=\"line-tool\" @click=\"updateTool('line')\" class=\"fas fa-window-minimize\"></i> / \n                <i id=\"text-tool\" @click=\"updateTool('text')\" class=\"fas fa-paragraph\"></i></p></a>\n                <b href=\"#\">Thickness</b>\n                <b>\n                    <h2 ><i @click=\"thinner\" class=\"fas fa-angle-left\"></i> <p style=\"display:inline\" id=\"thickness-value\"> 3 </p> <i @click=\"thicker\" class=\"fas fa-angle-right\"></i></h2>\n                </b>\n                <!-- Part to select different colours -->\n                <b href=\"#\">Colour</b>\n                <div id=\"colour-part\">\n                    <ColorPicker id=\"colour-picker\" :width=\"130\" :height=\"130\" :disabled=\"false\" value=\"#ff0000\" @color-change=\"onColorChange\"></ColorPicker>\n                </div>\n                <b href=\"#\">___________</b>\n            </div>\n            <!-- Select different tools to edit-->\n            <div class=\"editing-tools\"><br>\n                <b href=\"#\">Editing Tools</b>\n                <a><p><i id=\"delete-tool\" @click=\"updateTool('delete')\" class=\"fas fa-trash-alt\"></i> / \n                <i id=\"move-tool\" @click=\"updateTool('move')\" class=\"fas fa-arrows-alt\"></i></p></a>\n                <b href=\"#\">___________</b>\n            </div>\n            </div>\n        \n        <!-- All the objects NOT belonging in the sidebar and topbar !-->\n        <div id=\"core\">\n            <!-- Pdf-viewer + next/previous buttons !-->\n            <div id=\"pdf-and-belongings\">\n                    <!-- Next/previous buttons + page counter !-->\n                    <div id=\"pdf-meta\">\n                        <div id=\"name-space\">\n                                <h3>{{pdfName.replace(/.pdf/gi, '')}}</h3>\n                        </div>\n                        <div id=\"pdf-buttons\" ><br>\n                            <i class=\"fas fa-backward\" @click='firstPage' style=\"font-size: 30px;\"> </i>\n                            <i class=\"fas fa-arrow-left\" @click='previousPage' style=\"font-size: 30px;\"></i>\n                            <i class=\"fas fa-arrow-right\" @click='nextPage' style=\"font-size: 30px;\"></i>\n                            <i class=\"fas fa-forward\" @click='lastPage' style=\"font-size: 30px;\"></i>\n                            <!-- Namespace for documentname (student name) !-->\n                        </div>\n                        <h2 id=\"page-count-container\"><p id=\"waiting\"></p><div id=\"pdf-current-page\" style=\"display:inline\"></div> / <div id=\"pdf-total-pages\" style=\"display:inline\"></div></h2>\n                    </div>\n\n                    <!-- Pdf + draw canvases !-->\n                    <div id=\"canvases\">\n                        <div id=\"bottom\">\n                            <canvas id=\"pdf-canvas\" width=0 height=0></canvas> \n                        </div>\n                        <div id=\"middle\">\n                            <canvas id=\"form-holding-canvas\" width=0 height=0></canvas> \n                        </div>\n                        <div id=\"top\">\n                            <canvas id=\"draw-canvas\" width=0 height=0></canvas>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n            <div id=\"circle2\" style=\"display: flex;align-items: center;justify-content: center;\">\n                <circle2></circle2>\n            </div>\n\n            <div id=\"inner_remaining\">\n            </div>\n    </div>\n</template>\n\n<script>\n    import $ from 'jquery';\n    import jsPDF from 'jspdf'; // https://mrrio.github.io/jsPDF/\n    import ColorPicker from 'vue-color-picker-wheel';\n    import { server } from \"../helper\";\n    import axios from \"axios\";\n    import zipcelx from 'zipcelx';\n    import {Circle2} from 'vue-loading-spinner'\n    import { PDFDocument } from 'pdf-lib'\n    import download from \"downloadjs\";\n    \n    export default{\n        components: {\n            ColorPicker,    // The colorpicker in the sidebar\n            Circle2         // The loading circle to be shown when doing stuff\n        },\n        data(){ \n        return{\n            // Variables that are linked to the pop-up during the creating of new errortypes\n            errorName: \"\",\n            errorWeight: \"\",\n            errorDescription: \"\",\n            selectedLearningOutcome: null,  // The variable which the multiselect will fill with the selected learning outcome\n            learningOutcomes: null,         // Contains all the learning outcomes\n            dropdownLearningOutcomes: {},   // The list of strings as shown in the dropdown when selecting learning outcomes\n            sortedOutcomeIDs: [],           // to find the ID of the learningoutcome with the index in dropdownLearningOutcomes\n\n            // Variables linked to the pop-up when selection an errortype for an annotation\n            selectedErrorType: null, \n            selectedWeight: \"?\",\n            feedback_value: \"\",\n            dropdownErrorTypes: {},\n            errorTypes: [], // Contains all the error types            \n\n            // Variables needed for rendering the PDF\n            PDF_DOC: undefined,\n            CURRENT_PAGE: 1,        // The current page of the PDF\n            TOTAL_PAGES: null,\n            DRAW_CANVAS: null,      // The canvas on which new forms will be drawed during the drawing itself\n            DRAW_CANVAS_CTX: null,  // The context of the canvas on which new forms will be drawed during the drawing itself\n            PDF_CANVAS: null,       // The canvas on which the PDF will be drawn\n            PDF_CANVAS_CTX: null,   // The context of the canvas on which the PDF will be drawn\n            FORM_CANVAS: null,      // The canvas on which the existing forms will be drawed\n            FORM_CANVAS_CTX: null,  // The context of the canvas on which the existing forms will be drawed\n            originalWidth: null,    // This variable contains the original width of the PDF after uploading it\n            isNewPdf: true,         // A variable which holds the information if the current PDF is a new one (e.g. just after uploading a new PDF it will become true)\n\n            // Exporting variables\n            PDF: null,\n            savedPage: null,\n            savedZoom: null,\n            isExporting: false,\n            pdfName: '',\n            summaryNeeded: true,    // Variable declaring if a summary has to be generated\n            excelNeeded: true,      // Variable declaring if an excel file has to be generated\n\n            // Drawing variables\n            selectedForm: null,     // Contains the current selected form\n            isMouseDown: false,     // Variable that contains the information if the mouse is being pressed\n            offsetX: 0,\n            offsetY: 0,\n            startX: 0,\n            startY: 0,\n            zoom: 1.74,\n            toolMode: \"\",           // This variable contains which tool is being used: ellipse/rectangle/line/delete/move/annotation/text\n            thickness: 3,           // This variable contains the current thickness of the borders of the next form that will be drawn\n            color: \"#ff0000\",       // This variable contains the current colour of the next form that will be drawn\n            currentDrawing: {x: 0,  // This variable contains the current form that is being created\n                             y: 0,\n                             width: 0,\n                             height: 0,\n                             form: \"\",\n                             colour: \"black\",\n                             thickness: 1,\n                             selected: false,\n                             },\n        // variables needed when exporting with a summary\n        learningItems: null,    // this global variable contains all the currently existing learningItems in the database\n        contentSections: null,  // this global variable contains all the currently existing contentSections in the database\n        domainConcepts: null,   // this global variable contains all the currently existing domainConcepts in the database\n            \n        }},\n        mounted(){\n            // Set the canvases and the contexts\n            this.DRAW_CANVAS = $('#draw-canvas').get(0),\n            this.DRAW_CANVAS_CTX = this.DRAW_CANVAS.getContext('2d');\n            this.PDF_CANVAS = $('#pdf-canvas').get(0),\n            this.PDF_CANVAS_CTX = this.PDF_CANVAS.getContext('2d');\n            this.FORM_CANVAS = $('#form-holding-canvas').get(0),\n            this.FORM_CANVAS_CTX = this.FORM_CANVAS.getContext('2d');\n\n            // Hide some elements\n            $(\"#file-to-upload\").hide();\n            $(\"#core\").hide();\n            $(\"#circle2\").hide();  \n\n            // Add listeners to drawing canvas\n            this.DRAW_CANVAS.addEventListener('mousedown', this.mousedown);\n            this.DRAW_CANVAS.addEventListener('mousemove', this.mousemove);\n            document.addEventListener('mouseup', this.mouseup);\n\n            // Disable Prev & Next buttons  + slider when no pdf is uploaded\n            $(\"#pdf-next, #pdf-prev\").attr('disabled', 'disabled');\n            $(\"#zoomSlider\").get(0).disabled = true;   \n\n            // If previously a pdf was uploaded, restore all variables (if you switch between the database and the feedback tool)\n            if(this.$store.getters.get_url.length > 0){\n                this.FORM_CANVAS.height = this.$store.getters.get_lastHeight;\n                this.FORM_CANVAS.width = this.$store.getters.get_lastWidth;\n                this.pdfName = this.$store.getters.get_pdfName;\n                this.summaryNeeded = JSON.parse(this.$store.getters.get_summary);\n                this.excelNeeded = JSON.parse(this.$store.getters.get_excel);\n                this.isNewPdf = false;\n                this.zoom = Number(this.$store.getters.get_zoom);\n                $(\"#zoomSlider\").get(0).value = Number(this.$store.getters.get_sliderValue);\n                this.CURRENT_PAGE = parseInt(this.$store.getters.get_page_number);\n                this.showPDF(JSON.parse(this.$store.getters.get_url), this);\n                this.updateTool(this.$store.getters.get_toolmode);\n                this.thickness = parseInt(this.$store.getters.get_thickness);\n                $(\"#thickness-value\").get(0).innerHTML = \" \" + String(this.thickness) + \" \";\n            }\n            // Fetch information from the database\n            this.fetchErrorTypes();\n            this.fetchLearningOutcomes();\n            this.fetchLearningItems();\n        },\n        methods:{\n            // Push the newly created errortype to the database and update the current errortypes\n            __submitToServer(data, context) {\n                axios.post(`${server.baseURL}/errortype/create`, data)\n                .then(function(){\n                    context.fetchErrorTypes();\n                });\n            },\n            // This function updates the current errortypes\n            fetchErrorTypes() {\n            axios\n                .get(`${server.baseURL}/errortype/errortypes`)\n                .then(data => (this.updateErrorTypes(this, data.data)));\n            },\n            // This function updates the current learning outcomes\n            fetchLearningOutcomes() {\n                axios.get(`${server.baseURL}/learningoutcome/learningoutcomes`)\n                .then(data => (this.updateLearningOutcomes(this, data.data)));\n            },\n            fetchLearningItems(){\n                axios.get(`${server.baseURL}/learningitem/learningitems`)\n                .then(data => (this.learningItems = data.data));\n            },\n            // This function makes a dictionary 'dropdownLearningOutcomes' that links the ID's with the name in stringform (accompanied by an index in front of the name) of all the learning Outcomes -> these indexes + names in stringform are visible in the dropdowns\n            // + makes a list 'sortedOutcomeIDs' of the ID's in the same order as the strings as presented in the dropdowns\n            // + updates the list of 'learningOutcomes' with the new data\n            updateLearningOutcomes(context, data){\n                // Update the list of learning outcomes\n                this.learningOutcomes = data;\n\n                // Update the dropdown list + the list of sorted IDs\n                context.dropdownLearningOutcomes = {};\n                context.sortedOutcomeIDs = [];\n                var i\n                for (i = 0; i < context.learningOutcomes.length; i++) {\n                    context.dropdownLearningOutcomes[context.learningOutcomes[i]._id] = String(i+1) + \": \" + String(context.learningOutcomes[i].name);\n                    context.sortedOutcomeIDs.push(context.learningOutcomes[i]._id);\n                }\n            \n            },\n            // This function makes a dictionary 'dropdownErrorTypes' that links the ID's with the name in stringform (accompanied by an index in front of the name) of all the error types -> these indexes + names in stringform are visible in the dropdowns\n            // + updates the list of 'errorTypes' with the new data\n            // + updates the annotations because changes could be made in errortypes in the database\n            updateErrorTypes(context, data){\n                // Update the list of error types\n                context.errorTypes = data;\n\n                // Code that updates the dropdown list\n                context.dropdownErrorTypes = {};\n                var newIDs = [];\n                var i\n                for (i = 0; i < context.errorTypes.length; i++) {\n                    context.dropdownErrorTypes[context.errorTypes[i]._id] = String(i+1) + \": \" + String(context.errorTypes[i].name);\n                    newIDs.push(context.errorTypes[i]._id);\n                }\n\n                // Code that updates the errortype names in the annotations\n                var drawings = context.getDrawings();\n                var j;\n                for (i = 0; i < drawings.length; i++) {         // Iterate through all the pages of the drawings\n                    for (j = 0; j < drawings[i].length; j++) {  // Iterate through all the forms on a specific page\n                        if(drawings[i][j].form == \"annotation\"){\n                            // When the annotation previously had an errortype and it's not findable any more in the current errortypes, make the annotation's errortype empty\n                            if(drawings[i][j].error != null &&  newIDs.indexOf(drawings[i][j].id) < 0){\n                                drawings[i][j].error = null;\n                                drawings[i][j].weight = 0;\n                                drawings[i][j].id = null;\n                            }\n                            // When the annotation previously had an errortype and it IS findable, update the name of the errortype because it could be changed in the database\n                            else if(drawings[i][j].error != null &&  newIDs.indexOf(drawings[i][j].id) > -1){\n                                drawings[i][j].error = context.dropdownErrorTypes[drawings[i][j].id];\n                            }\n                        }\n                    }\n                }\n                this.updateDrawings(drawings);\n            },\n            // The given attribute gets a green border when at least one symbol is filled in, otherwise a red border\n            atLeastOneSymbol(item){ \n                if($('#'+item).get(0).value.length < 1){\n                    $('#'+item).get(0).setAttribute(\"style\", \"border: 2px solid red;\");}\n                else{\n                    $('#'+item).get(0).setAttribute(\"style\", \"border: 2px solid green;\");\n                }\n            },\n            // Check if all given attributes in the form of a list have a green border around them, thus having valid values\n            areAttributesValid(attributes){ //Returns if all given attributes their borders are green, thus valid\n                for(var i = 0; i < attributes.length; i++){\n                    if(!(String($('#'+attributes[i]).get(0).style.border).indexOf(\"green\") >= 0)){\n                    return false;\n                    }\n                }\n                return true;\n            },\n            // When a change is made in an inputfield in the pop-up during the creation of an ErrorType, \n            // change the borders of the inputfields to red or green depending on if they're invalid or valid\n            changeInNewErrorType(){\n                this.atLeastOneSymbol(\"name\");\n                this.atLeastOneSymbol(\"description\");\n                var numbers = new Set(\"01234567890\");\n                var currentWeight = new Set($('#weight').get(0).value);\n                var onlyNumbers = true;\n                for(var elem of currentWeight){\n                    if(!numbers.has(elem)){\n                        onlyNumbers = false;\n                    }\n                }\n                if($('#weight').get(0).value.length < 1 || !onlyNumbers){\n                    $('#weight').get(0).setAttribute(\"style\", \"border: 2px solid red;\");}\n                else{\n                    $('#weight').get(0).setAttribute(\"style\", \"border: 2px solid green;\");\n                }\n            },\n            // Creates a new ErrorType in the database when all the filled in attributes are valid and hide the pop-up\n            pushErrorType(){\n                if(this.areAttributesValid(['description','name','weight'])){\n                    var learningoutcome = \"\";\n                    if(this.selectedLearningOutcome != null){\n                        learningoutcome = this.sortedOutcomeIDs[Number(this.selectedLearningOutcome.slice(0,this.selectedLearningOutcome.indexOf(':')))-1];\n                    }\n                    let errorTypeData = {\n                        name: this.errorName,\n                        weight: this.errorWeight,\n                        description: this.errorDescription,\n                        learningOutcome: learningoutcome,\n                    };\n                    this.__submitToServer(errorTypeData, this);   \n                    this.hideErrorType();\n                }\n            },\n            // Hide the pop-up for creating ErrorTypes and empty all linked variables\n            // Then show the previous pop-up, for selecting an error-type for an annotation\n            hideErrorType(){\n                this.errorName = \"\";\n                this.errorWeight = \"\";\n                this.errorDescription = \"\";\n                this.selectedLearningOutcome = null;\n                this.fetchErrorTypes();\n                this.$modal.hide('create-errortype');\n                this.$modal.show('select-error');\n                \n            },\n            // Open the pop-up for creating a new errortype and hide the pop-up for selecting an errortype for an annotation\n            openErrorTypePopup(){\n                var drawings = this.getDrawings();\n                this.$modal.hide('select-error');\n                this.updateDrawings(drawings);\n                this.$modal.show('create-errortype');\n            },\n            // Get the current drawings and look for a form that is in selected (highlighted) and unselect it. Next push the all the forms back to the store\n            unselect(){\n                var drawings = this.getDrawings();\n                var form = null;\n                var i = 0;\n                for (i = 0; i < drawings[this.CURRENT_PAGE-1].length; i++) {\n                    if(drawings[this.CURRENT_PAGE-1][i].selected){\n                        form = drawings[this.CURRENT_PAGE-1][i];\n                    }\n                }\n                if(form != null){\n                    form.selected = false;\n                }\n                this.updateDrawings(drawings);\n            },\n            // Fetch all the forms from the store\n            getDrawings(){\n                return JSON.parse(this.$store.getters.get_drawings);\n            },\n            // Get the list of forms/drawings and push it to the store\n            // Next redraw all forms in the form_canvas\n            updateDrawings(new_drawings){\n                this.$store.commit('update_drawings', JSON.stringify(new_drawings));\n                this.redrawAllForms(this.FORM_CANVAS_CTX);\n            },\n            // When creating a new text-form\n            // Clear the drawing canvas, update a selected text-form when using the size-slider or altering the content (the text) and redraw it on the drawing canvas\n            updateText(){\n                this.ClearDrawingCanvas();\n                this.DRAW_CANVAS_CTX.fillStyle = this.color;\n                this.DRAW_CANVAS_CTX.font = String($(\"#textSlider\").get(0).value) + \"px Consolas\";\n                this.DRAW_CANVAS_CTX.fillText($('#textarea_freetext').get(0).value, this.startX, this.startY); \n            },\n            // When EDITING an EXISTING text-form\n            // Clear the drawing canvas, update a selected text-form when using the size-slider or altering the content (the text) \n            // and redraw it on the drawing canvas + push the updated text-form to the store\n            // The height of the text is corrected based on the current zoom\n            editText(){\n                var drawings = this.getDrawings();\n                var form = null;\n                var i = 0;\n                for (i = 0; i < drawings[this.CURRENT_PAGE-1].length; i++) {\n                    if(drawings[this.CURRENT_PAGE-1][i].selected){\n                        form = drawings[this.CURRENT_PAGE-1][i];\n                    }\n                }\n                this.ClearDrawingCanvas();\n                \n                form.content = $('#edit-freetext').get(0).value;\n                var correction = this.$store.getters.get_firstZoom/this.zoom;\n                form.height = $(\"#textSlider2\").get(0).value * correction;\n                this.updateDrawings(drawings);\n            },\n            // When closing the pop-up after CREATING a NEW text-form, it is pushed to the store if it contains text\n            // The position and height of the text is corrected based on the current zoom\n            pushText(){\n                if($('#textarea_freetext').get(0).value.length > 0){\n                    var drawings = this.getDrawings();\n                    var correction = this.$store.getters.get_firstZoom/this.zoom;\n                    drawings[this.CURRENT_PAGE-1].push({\n                                        x: this.startX*correction,\n                                        y: this.startY*correction,\n                                        form: \"text\",\n                                        colour: this.color,\n                                        height: $(\"#textSlider\").get(0).value*correction,\n                                        content: $('#textarea_freetext').get(0).value,\n                                        });\n                    this.updateDrawings(drawings)\n                    this.ClearDrawingCanvas();\n                }\n            },\n            // When editing an annotation (selecting an errortype or typing in the optional feedback), update tha annotation and push it to the store\n            updateAnnotation(){\n                var drawings = this.getDrawings();\n                var form = null;\n                var i = 0;\n                for (i = 0; i < drawings[this.CURRENT_PAGE-1].length; i++) {\n                    if(drawings[this.CURRENT_PAGE-1][i].selected){\n                        form = drawings[this.CURRENT_PAGE-1][i];\n                    }\n                }\n                if(this.selectedErrorType != null){\n                    form.error = this.selectedErrorType;\n                    form.weight = this.errorTypes[parseInt(this.selectedErrorType.slice(0,this.selectedErrorType.indexOf(':')))-1].weight;\n                    form.id = this.errorTypes[parseInt(this.selectedErrorType.slice(0,this.selectedErrorType.indexOf(':')))-1]._id;\n                }\n                else{\n                    form.error = null;\n                    form.weight = 0;\n                    form.id = null;\n                }\n                form.feedback = $(\"#error_feedback\").get(0).value;\n                this.selectedWeight = form.weight;\n                this.updateDrawings(drawings);\n            },\n            // When another color is picked in the colorpicker, change the colour variable\n            onColorChange(color) {\n                this.color = color;\n            },\n            // Update the current tool when clicked on a toolbutton and push the current tool to the store\n            updateTool(tool){\n                this.unselect(); // no form should be selected\n                this.toolMode = tool; \n                this.$store.commit('update_toolmode', this.toolMode);\n                var tools = [\"ellipse\",\"rectangle\",\"line\",\"delete\",\"move\",\"annotation\",\"text\"];\n                var i;\n                for (i = 0; i < tools.length; i++) {\n                    $(\"#\" + tools[i] + \"-tool\").get(0).style.color = \"#42b983\";\n                } \n                if(tool.length > 1){\n                    $(\"#\" + tool + \"-tool\").get(0).style.color = \"red\";\n                }\n\n            },\n            // Update the zoom when the zoom-slider is slided and commit the current zoom to the store\n            updateZoom(){\n                if($(\"#zoomSlider\").get(0) != undefined){\n                    var canvasWidth = $(\"#canvases\").get(0).clientWidth;\n                    var maxZoom = (canvasWidth-2)/this.originalWidth;\n\n                    this.zoom = $(\"#zoomSlider\").get(0).value/(100/maxZoom);\n\n                    // Update the store\n                    this.$store.commit('update_zoom', this.zoom);\n                    this.$store.commit('update_slider', $(\"#zoomSlider\").get(0).value);\n\n                    if(this.CURRENT_PAGE > 0){\n                        this.showPage(this.CURRENT_PAGE, false);\n                    }\n                }\n            },\n            // This function draws a new form on the draw_canvas based on which tool is selected (thus which form should be drawed)\n            mousedown(e){\n                var vm = this;\n                var drawings = vm.getDrawings(); // Fetch current drawings\n\n                // If the toolmodus is \"ellipse\", \"rectangle\", \"line\",\"move\", than a startposition of the mouse is needed, the drawing has started.\n                if([\"ellipse\", \"rectangle\", \"line\",\"move\"].indexOf(vm.toolMode) >= 0){\n                    var rect = vm.DRAW_CANVAS.getBoundingClientRect();\n                    var x = e.clientX - rect.left;\n                    var y = e.clientY - rect.top;\n                    vm.isMouseDown = true;\n                    vm.startX = x; // update start coordinate X in a variable\n                    vm.startY = y; // update start coordinate Y in a variable\n                }\n                // When \"delete\" is selected, delete the selected form\n                else if(vm.toolMode == \"delete\"){\n                    var highlightedIndex = null;\n                    var i = 0;\n                    // Look for the highlighted form\n                    for (i = 0; i < drawings[this.CURRENT_PAGE-1].length; i++) {\n                        if(drawings[this.CURRENT_PAGE-1][i].selected){\n                            highlightedIndex = i;\n                            i = drawings[this.CURRENT_PAGE-1].length;\n                        }\n                    }\n                    // Delete the highlighted form\n                    if(highlightedIndex != null){\n                        drawings[vm.CURRENT_PAGE-1].splice(highlightedIndex, 1);\n                        this.updateDrawings(drawings);\n                    }\n                }\n                // When the tool is in \"text\"-modus, save the startposition and create or edit a text-form\n                else if (vm.toolMode == \"text\"){\n                    rect = vm.DRAW_CANVAS.getBoundingClientRect();\n                    x = e.clientX - rect.left;\n                    y = e.clientY - rect.top;\n                    vm.startX = x;\n                    vm.startY = y;\n                    \n                    // count the selected text-forms\n                    var amountSelected = 0;\n                    for (i = 0; i < drawings[this.CURRENT_PAGE-1].length; i++) {\n                        if(drawings[this.CURRENT_PAGE-1][i].selected == true){\n                            ++amountSelected;\n                            this.selectedForm = drawings[this.CURRENT_PAGE-1][i];\n                        }\n                    }\n                    // If no text-form is selected, show the pop-up for CREATING a text-form\n                    if(amountSelected == 0){\n                        this.$modal.show('add-text-popup');\n                    }\n                    // If there is a text-form selected, show the pop-up for EDITING a text-form\n                    else if(amountSelected == 1){\n                        this.$modal.show('edit-text-popup');\n                    }\n                }\n                // When the tool is in \"annotation\"-modus, create or edit an annotation-form\n                else if(vm.toolMode == \"annotation\"){\n                    // Count if one or none annotations are selected\n                    amountSelected = 0;\n                    for (i = 0; i < drawings[this.CURRENT_PAGE-1].length; i++) {\n                        if(drawings[this.CURRENT_PAGE-1][i].selected == true){\n                            ++amountSelected;\n                            this.selectedForm = drawings[this.CURRENT_PAGE-1][i];\n                        }\n                    }\n                    // If none are selected, save the startposition and create a new annotation\n                    if(amountSelected == 0){\n                        rect = vm.DRAW_CANVAS.getBoundingClientRect();\n                        var mouseX = e.clientX - rect.left;\n                        var mouseY = e.clientY - rect.top;\n                        var correction = this.$store.getters.get_firstZoom/this.zoom; // correction based on the current zoom\n                        var error = {   x: mouseX*correction,\n                                        y: mouseY*correction,\n                                        width: 0,\n                                        height: 0,\n                                        form: \"annotation\",\n                                        colour: \"\",\n                                        thickness: \"\",\n                                        selected: false,\n                                        error: null,\n                                        feedback: \"\",\n                                        id: null,\n                                        weight: null,\n                                    };\n                        drawings[this.CURRENT_PAGE-1].push(error);\n                        vm.updateDrawings(drawings); // push the new annotation to the store\n                    }\n                    // If there is an annotation selected, show the pop-up for editing the annotation and fill in the linked variables with the information in the annotation\n                    else if(amountSelected == 1){\n                        vm.redrawAllForms(vm.FORM_CANVAS_CTX);\n                        this.selectedErrorType = this.selectedForm.error;\n                        this.$modal.show('select-error');\n                        this.feedback_value = this.selectedForm.feedback;\n                        this.selectedWeight = this.selectedForm.weight;\n                    }\n                }\n            },\n            mousemove(e){\n                // Switch between toolModes during mousemove and when isMouseDown is true\n                var vm = this;\n                var drawings = this.getDrawings();\n                // When the mouse is down and the mouse is moving (this funcion), than a form is being drawn or a form is being moved\n                if(vm.isMouseDown){\n                    switch(vm.toolMode) {\n                        case \"ellipse\":\n                            // Draw ellipse\n                            vm.drawEllipse(e);\n                            break;\n                        case \"rectangle\":\n                            // Draw rectangle\n                            vm.drawRectangle(e);\n                            break;\n                        case \"line\":\n                            // Draw line\n                            vm.drawLine(e);\n                            break;\n                        // Move the selected form is there is a selected form\n                        case \"move\":\n                            var highlightedIndex = null;\n                            var i = 0;\n                            // Find the selected form\n                            for (i = 0; i < drawings[this.CURRENT_PAGE-1].length; i++) {\n                                if(drawings[this.CURRENT_PAGE-1][i].selected){\n                                    highlightedIndex = i;\n                                    i = drawings[this.CURRENT_PAGE-1].length;\n                                }\n                            }\n                            // If there is a selected form, move it\n                            if(highlightedIndex != null){\n                                var rect = vm.DRAW_CANVAS.getBoundingClientRect();\n                                var correction = this.$store.getters.get_firstZoom/this.zoom; // the correction based on the zoom\n                                var x = (e.clientX - rect.left)*correction;\n                                var y = (e.clientY - rect.top)*correction;\n                                // There a two cases, all forms except the line-form or the line-form\n                                // The difference is that in all forms just x-y coordinates should be updated\n                                // But in the line-form also the width and height should be updated, those 2 variables stand for the x2-y2 coordinates of the end of the line\n                                switch(drawings[this.CURRENT_PAGE-1][highlightedIndex].form) {\n                                    case \"line\":\n                                        if(vm.offsetX == 0 && vm.offsetY == 0){\n                                            vm.offsetX = drawings[this.CURRENT_PAGE-1][highlightedIndex].x - x;\n                                            vm.offsetY = drawings[this.CURRENT_PAGE-1][highlightedIndex].y - y;\n                                        }\n                                        drawings[this.CURRENT_PAGE-1][highlightedIndex].width += x + vm.offsetX - drawings[this.CURRENT_PAGE-1][highlightedIndex].x;\n                                        drawings[this.CURRENT_PAGE-1][highlightedIndex].height += y + vm.offsetY - drawings[this.CURRENT_PAGE-1][highlightedIndex].y;\n                                        \n                                        break;\n                                    // Default case for all forms except line-forms\n                                    default:\n                                        if(vm.offsetX == 0 && vm.offsetY == 0){\n                                            vm.offsetX = drawings[this.CURRENT_PAGE-1][highlightedIndex].x - x;\n                                            vm.offsetY = drawings[this.CURRENT_PAGE-1][highlightedIndex].y - y;\n                                        }\n                                        break;\n                                }\n                                drawings[this.CURRENT_PAGE-1][highlightedIndex].x = x + vm.offsetX;\n                                drawings[this.CURRENT_PAGE-1][highlightedIndex].y = y + vm.offsetY;\n                                this.updateDrawings(drawings); // update the new drawings to the store\n                            }\n                            break; \n                        default:\n                            break;\n                    }\n                }\n                // If one of these tools is selected, the hover function is activated and forms should be highlighted when the mouse hovers over them\n                else if ([\"delete\", \"move\",\"annotation\", \"text\"].indexOf(vm.toolMode) >= 0){\n                    vm.hover(e, vm.toolMode);\n                }\n            },\n            // End drawing or end the movement of a form\n            mouseup(){\n                var vm = this\n                vm.isMouseDown = false;\n                vm.offsetX = 0;\n                vm.offsetY = 0;\n                \n                // If toolmode was drawing a form, save the drawing\n                if([\"ellipse\", \"rectangle\", \"line\"].indexOf(vm.toolMode) >= 0  && (vm.currentDrawing.width > 0 && vm.currentDrawing.height > 0 || vm.toolMode == \"line\")){\n                    \n                    // Prevent lines of length zero and rejecting perfect horizontal/vertical lines\n                    if(vm.toolMode != \"line\" || (vm.toolMode == \"line\" && (vm.currentDrawing.x != vm.currentDrawing.width || vm.currentDrawing.y != vm.currentDrawing.height))){\n                        var drawings = vm.getDrawings();\n                        drawings[this.CURRENT_PAGE-1].push(vm.currentDrawing);\n                        vm.updateDrawings(drawings); // Push to the store (this function also redraws all the forms)\n                    }\n                    vm.ClearDrawingCanvas(), // clear the canvas that was being drawed on\n                    vm.currentDrawing = {x: 0, // make the current drawing empty\n                                        y: 0,\n                                        width: 0,\n                                        height: 0,\n                                        form: \"\",\n                                        colour: \"black\",\n                                        thickness: 1,\n                                        };\n                }\n            },\n            // This function draws a given form on the given canvas\n            drawFormOnCanvas(form, ctx){\n                var correction = this.zoom/this.$store.getters.get_firstZoom; // correction based on which zoom applied\n                switch(form.form) {\n                    case \"ellipse\":\n                        ctx.beginPath();\n                        if(form.selected){\n                            ctx.lineWidth = form.thickness + 3;\n                            ctx.strokeStyle = \"red\";\n                        }\n                        else{\n                            ctx.lineWidth = form.thickness;\n                            ctx.strokeStyle = form.colour;\n                        }\n                        ctx.ellipse(form.x*correction, form.y*correction,  form.width*correction, form.height*correction, 0, 0, 2 * Math.PI);\n                        ctx.stroke();\n                        break;\n                    case \"rectangle\":\n                        ctx.beginPath();\n                        if(form.selected){\n                            ctx.lineWidth = form.thickness + 3;\n                            ctx.strokeStyle = \"red\";\n                        }\n                        else{\n                            ctx.lineWidth = form.thickness;\n                            ctx.strokeStyle = form.colour;\n                        }\n                        ctx.rect(form.x*correction, form.y*correction,  form.width*correction, form.height*correction);\n                        ctx.stroke();\n                        break;\n                    case \"line\":\n                        ctx.beginPath();\n                        if(form.selected){\n                            ctx.lineWidth = form.thickness + 3;\n                            ctx.strokeStyle = \"red\";\n                        }\n                        else{\n                            ctx.lineWidth = form.thickness;\n                            ctx.strokeStyle = form.colour;\n                        }\n                        ctx.moveTo(form.x*correction, form.y*correction);\n                        ctx.lineTo(form.width*correction, form.height*correction);\n                        ctx.stroke(); \n                        break;\n                    case \"annotation\":\n                        if(!this.isExporting){\n                            var w = this.DRAW_CANVAS.width;\n                            var offset = 0;\n                            if(form.selected){\n                                offset = 5;\n                            }\n\n                            var realX = form.x*correction;\n                            var realY = form.y*correction;\n                            \n                            ctx.lineWidth = 1;\n                            ctx.beginPath();\n                            ctx.strokeStyle = \"red\";\n                            if(form.error != null){\n                                ctx.strokeStyle = \"green\";\n                            }\n                            ctx.rect(realX-offset, realY-offset, (w/51.85)+offset*2, (w/34.56)+offset*2);\n                            ctx.fillStyle = ctx.strokeStyle;\n                            ctx.fill();\n                            ctx.stroke();\n                            \n                            ctx.beginPath();\n                            ctx.strokeStyle = \"black\";\n                            if(form.selected){\n                                ctx.strokeStyle = \"yellow\";\n                            }\n                            ctx.fillStyle = ctx.strokeStyle;\n\n                            ctx.rect(realX+w/345.66, realY+w/207.4, w/74.07, w/518.5);\n                            ctx.rect(realX+w/345.66, realY+w/79.769, w/74.07, w/518.5);\n                            ctx.rect(realX+w/345.66, realY+w/49.380, w/74.07, w/518.5);\n                            ctx.fill();\n                            ctx.stroke();\n                            form.width = w/51.85;\n                            form.height = w/34.56;\n                        }\n                        break;\n                    case \"text\":\n                        ctx.fillStyle = form.colour;\n                        var extraHeight = 0;\n                        if(form.selected){\n                            //Box around text\n                            var length = form.height*correction*form.content.length*0.55;\n                            ctx.beginPath();\n                            ctx.rect(form.x*correction, form.y*correction-form.height*correction*0.7,  length, form.height*correction*0.7);\n                            ctx.stroke();\n                        }\n                        ctx.font = String(form.height*correction + extraHeight) + \"px Consolas\";\n                        ctx.fillText(form.content, form.x*correction, form.y*correction); \n                        break;\n                    default:\n                        console.log(\"Form of drawing not recognised\")\n                        break;\n                }\n            },\n            // This function redraws all the forms in the store\n            redrawAllForms(context){ \n                if(!this.isNewPdf){\n                    this.ClearAllForms();\n                    if (context == 0){\n                        context = this.FORM_CANVAS_CTX;\n                    }\n                    var i;\n                    var drawings = this.getDrawings()[this.CURRENT_PAGE-1];\n                    for (i = 0; i < drawings.length; i++) {\n                        this.drawFormOnCanvas(drawings[i], context); \n                    } \n                }\n            },\n            // This function checks if the mouse hovers over a form and then highlights the form in some kind of way based on what type of form it is\n            hover(e, tool){ \n                var drawings = this.getDrawings();\n                var vm = this;\n                var rect = vm.DRAW_CANVAS.getBoundingClientRect();\n                var x = e.clientX - rect.left;\n                var y = e.clientY - rect.top;\n                var redrawNeeded = false;\n                var amountSelected = 0;\n                var correction = this.zoom/this.$store.getters.get_firstZoom;\n                var i;\n                for (i = 0; i < drawings[this.CURRENT_PAGE-1].length; i++) {\n                    if(drawings[this.CURRENT_PAGE-1][i].selected == true)\n                        ++amountSelected;\n                }\n\n                for (i = drawings[this.CURRENT_PAGE-1].length-1; i >= 0 ; i--) {\n                    var currentForm = drawings[this.CURRENT_PAGE-1][i];\n                    var inside = false;\n                    switch(currentForm.form) {\n                        case \"ellipse\":\n                            var h = currentForm.x*correction;\n                            var k = currentForm.y*correction;\n                            var a = currentForm.width*correction+5;\n                            var b = currentForm.height*correction+5;\n                            inside = (x-h)*(x-h)/(a*a)+ (y-k)*(y-k)/(b*b) <= 1 && tool!=\"annotation\" && tool!=\"text\";\n                            break;\n                        case \"rectangle\":\n                            inside =       x >= currentForm.x*correction-5 \n                                        && x <= currentForm.x*correction + currentForm.width*correction+5 \n                                        && y >= currentForm.y*correction-5 \n                                        && y <= currentForm.y*correction + currentForm.height*correction+5 \n                                        && tool!=\"annotation\" && tool!=\"text\";\n                            break;\n                        case \"line\":\n                            var Px1 = currentForm.x*correction;\n                            var Py1 = currentForm.y*correction;\n                            var Px2 = currentForm.width*correction;\n                            var Py2 = currentForm.height*correction;\n                            var dist = 8;\n                            var nearLine = Math.abs((Py2-Py1)*x - (Px2-Px1)*y + Px2*Py1 - Py2*Px1)/Math.sqrt(Math.pow((Py2-Py1),2) + Math.pow((Px2-Px1),2)) < dist;\n                            var insideLineBox = x >= Math.min(Px1,Px2)-dist && x <= Math.max(Px1,Px2)+dist && y >= Math.min(Py1,Py2)-dist && y <=  Math.max(Py1,Py2)+dist;\n                            inside = nearLine && insideLineBox && tool!=\"annotation\" && tool!=\"text\";\n                            break;\n                        case \"annotation\":\n                            var realX = currentForm.x*correction;\n                            var realY = currentForm.y*correction;\n                            var w = this.DRAW_CANVAS.width;\n                            inside = x >= realX-5 && x <= realX + w/51.85+5 && y >= realY-5 && y <=  realY + w/34.56+5 && tool!=\"text\";\n                            break;\n                        case \"text\":\n                            realX = currentForm.x*correction;\n                            realY = currentForm.y*correction-currentForm.height*correction*0.7;\n                            var length = currentForm.height*correction*currentForm.content.length*0.55;\n                            inside =       x >= realX-5 \n                                        && x <= realX + length+5\n                                        && y >= realY-5 \n                                        && y <= realY + currentForm.height*correction*0.7+5 \n                                        && tool!=\"annotation\";\n                            break;\n                        default:\n                            console.log(\"Form of drawing not recognised\")\n                            break;\n                        } \n                    if(currentForm.selected == true && !(inside)){\n                        drawings[this.CURRENT_PAGE-1][i].selected = false;\n                        this.updateDrawings(drawings);\n                        amountSelected = amountSelected - 1;\n                        redrawNeeded = true;\n                    }\n                    if(amountSelected == 0 && currentForm.selected != true && !redrawNeeded && inside){\n                        drawings[this.CURRENT_PAGE-1][i].selected = true;\n                        this.updateDrawings(drawings);\n                        amountSelected = amountSelected + 1;\n                        redrawNeeded = true;\n                    }\n                }\n                if (redrawNeeded){\n                    this.redrawAllForms(vm.FORM_CANVAS_CTX);\n                }\n            },\n            // Draw a line during mousemove(e) on draw-canvas\n            drawLine(e){\n                var vm = this\n                var rect = vm.DRAW_CANVAS.getBoundingClientRect();\n                var x = e.clientX - rect.left;\n                var y = e.clientY - rect.top;\n                var correction = this.$store.getters.get_firstZoom/this.zoom;\n\n                this.ClearDrawingCanvas();\n\n                vm.DRAW_CANVAS_CTX.beginPath();\n                vm.DRAW_CANVAS_CTX.strokeStyle = this.color;\n                vm.DRAW_CANVAS_CTX.lineWidth = vm.thickness;\n                vm.DRAW_CANVAS_CTX.moveTo(vm.startX, vm.startY);\n                vm.DRAW_CANVAS_CTX.lineTo(x, y);\n                vm.DRAW_CANVAS_CTX.stroke(); \n\n                vm.currentDrawing.x = vm.startX*correction;\n                vm.currentDrawing.y = vm.startY*correction;\n                vm.currentDrawing.width = x*correction;\n                vm.currentDrawing.height = y*correction;\n                vm.currentDrawing.form = \"line\"\n                vm.currentDrawing.thickness = vm.thickness;\n                vm.currentDrawing.colour = this.color;\n                vm.currentDrawing.selected = false;\n            },\n            // Draw an ellipse during mousemove(e) on draw-canvas\n            drawEllipse(e){\n                var vm = this\n                var rect = vm.DRAW_CANVAS.getBoundingClientRect();\n                var x = (e.clientX - rect.left);\n                var y = e.clientY - rect.top;\n                var correction = this.$store.getters.get_firstZoom/this.zoom;\n                if(x - vm.startX > 0 && y - vm.startY > 0){\n                    this.ClearDrawingCanvas();\n                    vm.DRAW_CANVAS_CTX.beginPath();\n                    vm.DRAW_CANVAS_CTX.strokeStyle = this.color;\n                    vm.DRAW_CANVAS_CTX.lineWidth = vm.thickness;\n                    vm.DRAW_CANVAS_CTX.ellipse(vm.startX + (x - vm.startX)/2, vm.startY + (y - vm.startY)/2,  (x - vm.startX)/2, (y - vm.startY)/2, 0, 0, 2 * Math.PI);\n                    vm.DRAW_CANVAS_CTX.stroke();\n                    vm.currentDrawing.x = (vm.startX + (x - vm.startX)/2)*correction;\n                    vm.currentDrawing.y = (vm.startY + (y - vm.startY)/2)*correction;\n                    vm.currentDrawing.width = (x - vm.startX)/2 * correction;\n                    vm.currentDrawing.height = (y - vm.startY)/2 * correction;\n                    vm.currentDrawing.form = \"ellipse\"\n                    vm.currentDrawing.thickness = vm.thickness;\n                    vm.currentDrawing.colour = this.color;\n                    vm.currentDrawing.selected = false;\n                }\n                \n            },\n            // Draw a rectangle during mousemove(e) on draw-canvas\n            drawRectangle(e){\n                var vm = this\n                var rect = vm.DRAW_CANVAS.getBoundingClientRect();\n                var x = e.clientX - rect.left;\n                var y = e.clientY - rect.top;\n                var correction = vm.$store.getters.get_firstZoom/vm.zoom;\n                if(x - vm.startX > 0 && y - vm.startY > 0){\n                    this.ClearDrawingCanvas();\n                    vm.DRAW_CANVAS_CTX.beginPath();\n                    vm.DRAW_CANVAS_CTX.strokeStyle = this.color;\n                    vm.DRAW_CANVAS_CTX.lineWidth = vm.thickness;\n                    vm.DRAW_CANVAS_CTX.rect(vm.startX, vm.startY, (x - vm.startX), (y - vm.startY));\n                    vm.DRAW_CANVAS_CTX.stroke();\n\n                    vm.currentDrawing.x = vm.startX*correction;\n                    vm.currentDrawing.y = vm.startY*correction;\n                    vm.currentDrawing.width = (x - vm.startX)*correction;\n                    vm.currentDrawing.height = (y - vm.startY)*correction;\n                    vm.currentDrawing.form = \"rectangle\";\n                    vm.currentDrawing.thickness = vm.thickness;\n                    vm.currentDrawing.colour = this.color;\n                    vm.currentDrawing.selected = false;\n                }\n            },\n            // Clears the drawing canvas\n            ClearDrawingCanvas(){\n                var vm = this\n                // eslint-disable-next-line\n                vm.DRAW_CANVAS.width = vm.DRAW_CANVAS.width;\n            },\n            // Clears the canvas containing all forms\n            ClearAllForms(){\n                var vm = this\n                // eslint-disable-next-line\n                vm.FORM_CANVAS.width = vm.FORM_CANVAS.width;\n            },\n            // When clicking on the button to export the PDF file, a pop-up will be shown in where the name of the PDF can be altered,\n            // a checkbox for if a summary should be added and if an excel file should be downloaded\n            editName(){ \n                if(!$(\"#zoomSlider\").get(0).disabled && !this.isExporting){\n                    this.pdfName = this.$store.getters.get_pdfName;\n                    this.summaryNeeded = JSON.parse(this.$store.getters.get_summary);\n                    this.excelNeeded = JSON.parse(this.$store.getters.get_excel);\n                    this.$modal.show('edit-name');\n                }\n            },\n            // Prepare the export and save parameters in the store\n            // Next call \"vm.showPage(1, true);\" this 'true' will initiate the export\n            exportPDF(){\n                if(!$(\"#zoomSlider\").get(0).disabled && !this.isExporting){\n                    this.$store.commit('update_pdfName', $('#export_name').get(0).value.replace(/.pdf/gi, ''));\n                    this.pdfName = $('#export_name').get(0).value.replace(/.pdf/gi, '');\n                    this.$store.commit('update_summary', JSON.stringify($('#summaryNeeded').get(0).checked));\n                    //this.$store.commit('update_excel', JSON.stringify($('#excelNeeded').get(0).checked));\n                    this.summaryNeeded = JSON.parse(this.$store.getters.get_summary);\n                    this.excelNeeded = JSON.parse(this.$store.getters.get_excel);\n                    \n                    // Hide the pop-up\n                    this.$modal.hide('edit-name');\n                    var vm = this;\n                    vm.savedPage = vm.CURRENT_PAGE;\n                    vm.savedZoom = vm.zoom;\n                    vm.PDF = new jsPDF();\n                    vm.showPage(1, true);\n                }\n            },\n            // Open the PDF on given URL (blob) and show the first page\n            showPDF(pdf_url, vm) {\n                this.getDocument(pdf_url).then(function(pdf_doc) {\n                    // Set the pdf_doc and it's number of pages\n                    vm.PDF_DOC = pdf_doc;\n                    vm.TOTAL_PAGES = vm.PDF_DOC.numPages;\n                    \n                    // Hide the pdf loader and show pdf container in HTML\n                    $(\"#pdf-total-pages\").text(vm.TOTAL_PAGES);\n\n                    // Show the first page\n                    vm.showPage(vm.CURRENT_PAGE, false);\n                }).catch(response => {\n                    this.$emit('document-errored', {text: 'Failed to retrieve PDF', response});\n                    console.log('Failed to retrieve PDF', response);\n                });\n            },\n            getDocument(url) {\n            // Using import statement in this way allows Webpack\n            // to treat pdf.js as an async dependency so we can\n            // avoid adding it to one of the main bundles\n            return import(\n                /* webpackChunkName: 'pdfjs-dist' */\n                'pdfjs-dist/webpack').then(pdfjs => pdfjs.getDocument(url).promise);\n            },\n            // Shows the page on a given page number. If exporting is true, the PDF will be exported recursively\n            showPage(page_no, exporting) {\n                this.isExporting = exporting; \n                $(\"#circle2\").show();             \n                $(\"#canvases\").hide();        \n                \n                // When uploading new pdf, remove all drawings\n                if(this.isNewPdf){\n                    var empty = [];\n                    var i = 0;\n                    for (i = 0; i < this.TOTAL_PAGES; i++) {\n                        empty.push([]);\n                    }\n                    this.$store.commit('update_drawings', JSON.stringify(empty));\n                    this.isNewPdf = false;\n                    this.firstZoom = null;\n                }\n                this.CURRENT_PAGE = page_no;\n\n                // Disable Prev & Next buttons + slider while page is being loaded\n                $(\"#pdf-next, #pdf-prev\").attr('disabled', 'disabled');\n                $(\"#zoomSlider\").get(0).disabled = true;\n\n                var vm = this;\n                // Fetch the page\n                vm.PDF_DOC.getPage(page_no).then(function(page) { \n                    // Get viewport of the page at required scale\n                    \n                    $(\"#pdf-current-page\").text(page_no);\n                    // Set scale of pdf on normal scale\n                    vm.originalWidth = page.getViewport({scale:1}).width;\n                    var viewport;\n                    if(exporting){\n                        $(\"#canvases\").hide();\n                        $(\"#pdf-buttons\").hide();\n                        $(\"#zoomSlider\").get(0).disabled = true;  \n                        $(\"#waiting\").get(0).innerHTML = \"WAIT FOR EXPORT TO FINISH!\";\n                        viewport = page.getViewport({scale:3});\n                        vm.zoom = 3;\n                    }\n                    else{\n                        viewport = page.getViewport({scale:vm.zoom});\n                    }\n\n                    // Set canvas height\n                    vm.PDF_CANVAS.height = viewport.height;\n                    vm.PDF_CANVAS.width = viewport.width;\n                    vm.FORM_CANVAS.height = viewport.height;\n                    vm.FORM_CANVAS.width = viewport.width;\n                    vm.DRAW_CANVAS.height = viewport.height;\n                    vm.DRAW_CANVAS.width = viewport.width;\n\n                    vm.$store.commit('update_lastWidth', JSON.stringify(viewport.width));\n                    vm.$store.commit('update_lastHeight', JSON.stringify(viewport.height));\n\n                    var renderContext = {\n                        canvasContext: vm.PDF_CANVAS_CTX,\n                        viewport: viewport\n                    };\n                    // Render the page contents in the canvas\n                    page.render(renderContext).then(function() {\n                        // Re-enable Prev & Next buttons\n                        $(\"#pdf-next, #pdf-prev\").removeAttr('disabled');\n                        $(\"#zoomSlider\").get(0).disabled = false;\n\n                        // Show the canvases\n                        $(\"#core\").show();      \n                        $(\"#circle2\").hide();\n                        $(\"#canvases\").show();                    \n\n                        if(vm.$store.getters.get_firstZoom == null){\n                            var canvasWidth = $(\"#canvases\").get(0).clientWidth;\n                            var maxZoom = (canvasWidth-2)/vm.originalWidth;\n                            vm.$store.commit('update_firstZoom', $(\"#zoomSlider\").get(0).value/(100/maxZoom))\n                            vm.zoom = vm.$store.getters.get_firstZoom;\n                            vm.$store.commit('update_zoom', vm.zoom);\n                        }\n\n                        // Update current page in HTML\n                        vm.redrawAllForms(vm.FORM_CANVAS_CTX);\n                        \n                        // The export part, export current page\n                        if(exporting && page_no < vm.TOTAL_PAGES){\n                            vm.redrawAllForms(vm.PDF_CANVAS_CTX);\n                            vm.PDF.addImage(vm.PDF_CANVAS, 'JPEG', 0, 0, 210, 297);\n                            var i;\n                            for (i = 0; i < vm.getDrawings()[vm.CURRENT_PAGE-1].length; i++) {\n                                var form = vm.getDrawings()[vm.CURRENT_PAGE-1][i];\n                                vm.addAnnotation(form, vm, viewport, vm.PDF);\n                            } \n                            vm.PDF.addPage();\n                            \n                            // Next step is to export the next page\n                            vm.showPage(vm.CURRENT_PAGE+1, true);\n                        }\n                        // When exporting and last page is reached, disable the export by using parameter 'false'\n                        else if(exporting && page_no == vm.TOTAL_PAGES-1){\n                            vm.showPage(vm.TOTAL_PAGES, false);\n                        }\n                        // ELSE, if exporting AND vm.PDF != null, meaning the export PDF is ready and was just built (because the last page was reached)\n                        else{\n                            if(vm.PDF != null && exporting){\n                                // add last page in the PDF\n                                vm.redrawAllForms(vm.PDF_CANVAS_CTX);\n                                for (i = 0; i < vm.getDrawings()[vm.CURRENT_PAGE-1].length; i++) {\n                                    form = vm.getDrawings()[vm.CURRENT_PAGE-1][i];\n                                    vm.addAnnotation(form, vm, viewport, vm.PDF);\n                                }\n                                vm.PDF.addImage(vm.PDF_CANVAS, 'JPEG', 0, 0, 210, 297);\n                                var PDF_annotated = vm.PDF;\n                                vm.PDF = null;\n                                vm.PDF = new jsPDF();\n                                \n                                // Fix to prevent the annotation from shifting:\n                                // https://github.com/MrRio/jsPDF/issues/131#issuecomment-604259932\n                                // create two separate PDF, one with the annotations and drawings\n                                // and one PDF containing the summary\n                                // and merge them with pdf-lib library -> then download with downloadjs library\n                                if(JSON.parse(vm.$store.getters.get_summary)){\n                                    vm.addSummary();\n                                    vm.mergePDFs(PDF_annotated, vm.PDF, vm.pdfName); // merge the pdfs\n                                }\n                                else{\n                                    PDF_annotated.save(vm.pdfName + \".pdf\"); // Download the PDF\n                                }\n                                /*if(JSON.parse(vm.$store.getters.get_excel)){\n                                    vm.createExcel();}*/\n                                \n\n                                vm.PDF = null;\n                                vm.zoom = vm.savedZoom;\n                                vm.CURRENT_PAGE = vm.savedPage;\n                                $(\"#canvases\").show();\n                                $(\"#pdf-buttons\").show();\n                                $(\"#waiting\").get(0).innerHTML = \"\";\n                                $(\"#zoomSlider\").get(0).disabled = false;  \n                                vm.showPage(vm.CURRENT_PAGE, false); // Reopen the page before the exporting started\n                            }\n                        }\n                    });\n                });\n            },\n            async mergePDFs(annotatedPDF, summaryPDF, name){\n                const mergedPdf = await PDFDocument.create();\n                \n                const pdfA = await PDFDocument.load(annotatedPDF.output('arraybuffer'));\n                const pdfB = await PDFDocument.load(summaryPDF.output('arraybuffer'));\n                const copiedPagesA = await mergedPdf.copyPages(pdfA, pdfA.getPageIndices());\n                copiedPagesA.forEach((page) => mergedPdf.addPage(page));\n\n                const copiedPagesB = await mergedPdf.copyPages(pdfB, pdfB.getPageIndices());\n                copiedPagesB.forEach((page) => mergedPdf.addPage(page));\n\n                const mergedPdfFile = await mergedPdf.save();\n                download(mergedPdfFile, name, \"application/pdf\");\n            },\n            // Add a real annotation (when exporting) to a PDF based on the annotations in the Feedback tool (the PDF editor)\n            addAnnotation(form, vm, viewport, pdf){\n                if(form.form == \"annotation\" && !(form.error == null && form.feedback.length < 1 )){\n                    var error_text = \"\"\n                    if(form.error == null){\n                        error_text = \"No error given.\"\n                    }\n                    else{\n                        error_text = \"Error: \" + form.error.slice(form.error.indexOf(':')+2,form.error.length);\n                    }\n                    var feedback = \"\";\n                    if(form.feedback.length < 1){\n                        feedback = \"No feedback given.\";\n                    }\n                    else{\n                        feedback = \"Feedback: \\n\" + form.feedback;\n                    }\n\n                    var correction = vm.zoom/vm.$store.getters.get_firstZoom;\n                    pdf.createAnnotation({\n                        type: 'text',\n                        title: error_text,\n                        bounds: {\n                            x: form.x/viewport.width*210*correction,\n                            y: form.y/viewport.height*297*correction,\n                            w: 10,\n                            h: 10\n                        },\n                        contents: feedback,\n                        open: false\n                    });\n                }\n            },\n            // This writes text on a given pdf page 'doc' and makes sure that the text won't go out of the bounds and start on new lines until finished writing\n            addText(text, doc, x, y, rightMargin, charLengthSizeOne, whiteSpaceLength, write=true){\n                var currentX = x;\n                var currentY = y;\n                var currentText = \"\";\n                var allWords = text.split(\" \");\n                for(var i = 0; i < allWords.length; i++){\n                    var extraLength = (allWords[i].length)*charLengthSizeOne*doc.getFontSize();\n                    var extraLengthWithSpace = (allWords[i].length + 1)*charLengthSizeOne*doc.getFontSize();\n                    if(currentX + extraLength < rightMargin && allWords[i] != \"/n\"){\n                        currentText += allWords[i] + \" \";\n                        currentX += extraLengthWithSpace;\n                    }\n                    else if(currentX + extraLength >= rightMargin || allWords[i] == \"/n\"){\n                        if(write){doc.text(currentText, x, currentY);}\n                        var whiteSpace = 0;\n                        if(allWords[i] == \"/n\"){\n                            whiteSpace = 2;\n                            ++i; // avoid \"/n\"\n                        }\n                        currentX = x + (allWords[i].length + 1)*charLengthSizeOne*doc.getFontSize();\n                        currentY += 5 + whiteSpace;\n                        currentText = allWords[i] + \" \";\n                    }\n                    if(i == allWords.length - 1){\n                        if(write){doc.text(currentText, x, currentY);}\n                    }\n                    if(currentY + 15 > 287){\n                        if(write){doc.addPage();}\n                        currentY = 20;\n                 }\n                }\n                 if(currentY + 15 > 287){\n                    if(write){doc.addPage();}\n                    return 20;\n                 }\n                return currentY + whiteSpaceLength;\n            },\n            // Adds a summary to the end of the annotated PDF when exporting\n            addSummary(){ //todo new summary\n                var doc = this.PDF;\n                doc.setFont(\"courier\"); // courier is a monospace font, so I can count the length of sentences/words\n                doc.setFontSize(15); \n                doc.setFontStyle(\"bold\");\n                doc.setTextColor(0, 0, 255);\n                var title = 'FEEDBACK REPORT - ' + this.pdfName; // Create the title\n                var charLengthSizeOne = 0.211818182; // This is the length of one char in monospace font 'courier' with size one\n                doc.setTextColor(97, 124, 146);\n                doc.setDrawColor(97, 124, 146);\n                doc.text(title, (210-title.length*charLengthSizeOne*doc.getFontSize())/2, 20); // Add Title of the report and center it\n                // Underline the title\n                doc.line((210-title.length*charLengthSizeOne*doc.getFontSize())/2,21,(210-title.length*charLengthSizeOne*doc.getFontSize())/2 + title.length*charLengthSizeOne*doc.getFontSize(), 21)\n                doc.setTextColor(0, 0, 0);\n                doc.setDrawColor(0,0,0);\n\n                doc.setFontSize(10);\n                doc.setFontStyle(\"normal\");\n                // Create explanatory text\n                var introText = \"Here is some background information to help you understand this report better: /n This exercise has been designed to test your achievements of intermediate learning goals of the course and to help identify the possible gaps in your knowledge. /n To do so, we categorize all the errors made in the model according to the knowledge and cognitive levels identified in the Revised Bloom's Taxonomy of educational objectives. Below, you will find the list of key errors made in the requirements analysis and the model itself and some recommendations for improvement of the modelling skills.\";\n                var currentY = 32;\n                var currentX = 10;\n                var rightMargin = 210-10;\n                // var bottomMargin = 297 - 10;\n                // Add explanatory text\n                currentY = this.addText(introText, doc, currentX, currentY, rightMargin, charLengthSizeOne, 8);\n\n                doc.setFontStyle(\"bold\");\n                doc.text(\"List of errors\", currentX, currentY); // Add list of errors\n                doc.setFontStyle(\"normal\");\n                currentY += 8;\n\n                // Add the used error types\n                var noAnnotations = true;\n                var i;\n                var j;\n                var weightSum = 0;\n                for (j = 0; j < this.getDrawings().length; j++) {\n                    for (i = 0; i < this.getDrawings()[j].length; i++) {\n                        var form = this.getDrawings()[j][i];\n                        if(form.form == \"annotation\"  && form.error != null){\n                            var error_text = form.error.slice(form.error.indexOf(':')+2,form.error.length);\n                            currentY = this.addText(\"   -\", doc, currentX, currentY, rightMargin, charLengthSizeOne, 0);\n                            currentY = this.addText(error_text, doc, currentX+10, currentY, rightMargin-25, charLengthSizeOne, 5)\n                            currentY = this.addText(\"weight: \" + String(form.weight), doc, rightMargin-20, currentY-5, 10000, charLengthSizeOne, 5);\n                            var textWithoutSpaces = form.feedback.replace(\" \", '')\n                            if(textWithoutSpaces.length > 0){\n                                currentY = this.addText(\"Feedback: \" + form.feedback, doc, currentX+15, currentY, rightMargin-25, charLengthSizeOne, 5)\n                            }\n                            noAnnotations = false;\n                            weightSum += parseInt(form.weight);\n                        }\n                    }\n                }\n\n                currentY = this.addText(\"Sum of weights: \" + String(weightSum), doc, rightMargin-37, currentY+5, 10000, charLengthSizeOne, 5);\n\n                // Add empty if there were no error types\n                if(noAnnotations){\n                    currentY = this.addText(\"empty\", doc, currentX, currentY, rightMargin, charLengthSizeOne, 0);\n                    currentY += 5;\n                }\n                currentY += 3;\n\n                // Find the IDs of the used error types in the annotations and store them in 'annotatedErrorTypes'\n                var annotatedErrorTypes = new Set();\n                for (j = 0; j < this.getDrawings().length; j++) {\n                    for (i = 0; i < this.getDrawings()[j].length; i++) {\n                        form = this.getDrawings()[j][i];\n                        if(form.form == \"annotation\"  && form.error != null){\n                            annotatedErrorTypes.add(form.id);\n                        }\n                    }\n                }\n                annotatedErrorTypes = Array.from(annotatedErrorTypes);\n\n                // Find the IDs of the learning outcomes that occur in the used error types and store them in 'linkedLearningOutcomes'\n                var linkedLearningOutcomes = new Set();\n                for(i = 0; i < this.errorTypes.length; i++){\n                    if(annotatedErrorTypes.indexOf(this.errorTypes[i]._id) > -1 && this.errorTypes[i].learningOutcome.length > 0){\n                        linkedLearningOutcomes.add(this.errorTypes[i].learningOutcome);\n                    }\n                }\n                linkedLearningOutcomes = Array.from(linkedLearningOutcomes);\n                \n                // Create a dictionary linking the IDs of learning items to their name\n                // + create a list with the sorted IDs of the learning items\n                var learningItemIDToName = {};\n                var learningItemSortedIDs = [];\n                for (i = 0; i < this.learningItems.length; i++) {\n                    learningItemIDToName[this.learningItems[i]._id] = this.learningItems[i].name;\n                    learningItemSortedIDs.push(this.learningItems[i]._id);\n                }\n\n                // Create a list with the sorted IDs of the learning outcomes\n                var learningOutcomeSortedIDs = [];\n                for (i = 0; i < this.learningOutcomes.length; i++) {\n                    learningOutcomeSortedIDs.push(this.learningOutcomes[i]._id);\n                }\n                \n                // Find the IDs of the content/exercise items that occur in the used learning outcomes that occur in the used error types \n                // and store them in 'linkedContentItems'/'linkedExerciseItems'\n                var linkedContentItems = new Set();\n                var linkedExerciseItems = new Set();\n                for(i = 0; i < this.learningOutcomes.length; i++){\n                    if(linkedLearningOutcomes.indexOf(this.learningOutcomes[i]._id) > -1){\n                        for(j = 0; j < this.learningOutcomes[i].LearningItems.length; j++){\n                            if(this.learningItems[learningItemSortedIDs.indexOf(this.learningOutcomes[i].LearningItems[j])].isExerciseItem){\n                                linkedExerciseItems.add(this.learningOutcomes[i].LearningItems[j]);\n                            }\n                            else{\n                                linkedContentItems.add(this.learningOutcomes[i].LearningItems[j]);\n                            }\n                        }\n                    }\n                }\n                linkedExerciseItems = Array.from(linkedExerciseItems);\n                linkedContentItems = Array.from(linkedContentItems);\n\n                // Fill 'contentItems' and 'exerciseItems' with the names of the right learning items (using 'learningItemIDToName')\n                // based on the found IDs in 'linkedContentItems' and 'exerciseItems'\n                var contentItems = \"no content items\"; // initially empty\n                var exerciseItems = \"no exercise items\"; // initially empty\n                if(linkedContentItems.length > 0){\n                    contentItems = \"\";\n                    if(linkedContentItems.length == 1){\n                        contentItems = \"'\" + learningItemIDToName[linkedContentItems[0]] + \"'\";\n                    }\n                    if(linkedContentItems.length >= 2){\n                        for(i = 0; i < linkedContentItems.length; i++){\n                            if(i < linkedContentItems.length - 2){\n                                contentItems += \"'\" + learningItemIDToName[linkedContentItems[i]] + \"', \";\n                            }\n                            else if(i == linkedContentItems.length - 2){\n                                contentItems += \"'\" + learningItemIDToName[linkedContentItems[i]] + \"' and \";\n                            }\n                            else{\n                                contentItems += \"'\" + learningItemIDToName[linkedContentItems[i]] + \"'\";\n                            }\n                            \n                        }\n                    }\n                }\n                if(linkedExerciseItems.length > 0){\n                    exerciseItems = \"\";\n                    if(linkedExerciseItems.length == 1){\n                        exerciseItems = \"'\" + learningItemIDToName[linkedExerciseItems[0]] + \"'\";\n                    }\n                    if(linkedExerciseItems.length >= 2){\n                        for(i = 0; i < linkedExerciseItems.length; i++){\n                            if(i < linkedExerciseItems.length - 2){\n                                exerciseItems += \"'\" + learningItemIDToName[linkedExerciseItems[i]] + \"', \";\n                            }\n                            else if(i == linkedExerciseItems.length - 2){\n                                exerciseItems += \"'\" + learningItemIDToName[linkedExerciseItems[i]] + \"' and \";\n                            }\n                            else{\n                                exerciseItems += \"'\" + learningItemIDToName[linkedExerciseItems[i]] + \"'\";\n                            }\n                            \n                        }\n                    }\n                }\n\n                // Create and add the text which content items and exercise items to review\n                var reviewInfoText = \"\"\n                if(contentItems != \"no content items\" || exerciseItems != \"no exercise items\"){\n                    reviewInfoText = \"These errors indicate that you might need to review: /n \"\n                }\n                if(contentItems != \"no content items\"){\n                    reviewInfoText += \"- \" + contentItems + \" of the course book /n \"\n                }\n                if(exerciseItems != \"no exercise items\"){\n                    reviewInfoText += \"- exercises \" + exerciseItems + \" in the online course\"\n                }\n                if(contentItems != \"no content items\" || exerciseItems != \"no exercise items\"){\n                    currentY = this.addText(reviewInfoText, doc, currentX, currentY, rightMargin, charLengthSizeOne, 8);\n                }\n\n                // Start creating the horizontal table\n                var borderMargin = 10;\n                currentX = borderMargin;\n                currentY = borderMargin;\n                var width = 297;\n                var height = 210;\n                var nameLength = 75;\n                var weightLength = 47;\n                var descriptionLength = 100;\n                var outcomeLength = 75;\n                \n                if(this.errorTypes.length > 0){\n                    // Horizontal page, see: https://github.com/MrRio/jsPDF/issues/49\n                    doc.addPage('a4', 'landscape'); // width = 297 and height = 210\n                    doc.line(currentX, currentY, width-borderMargin, currentY);\n                    currentY += 4;\n                    doc.setFontStyle(\"bold\");\n                    this.addText(\"WEIGHT\", doc, currentX+nameLength+2, currentY+1, currentX + nameLength + weightLength, charLengthSizeOne, 0, true);\n                    this.addText(\"DESCRIPTION\", doc, currentX+nameLength+weightLength+2, currentY+1, currentX+nameLength+weightLength+descriptionLength, charLengthSizeOne, 0,true);\n                    this.addText(\"LEARNING OUTCOME\", doc, currentX+nameLength+weightLength+descriptionLength+2, currentY+1, width-borderMargin-2, charLengthSizeOne, 0,true);\n                    currentY = this.addText(\"NAME\", doc, currentX+2, currentY+1, currentX + nameLength, charLengthSizeOne, 0,true);\n                    doc.setFontStyle(\"normal\");\n                    currentY += 7;\n                    doc.line(currentX, currentY-4, width-borderMargin, currentY-4);\n                }\n                var oldY = -1;\n\n                for(i = 0; i < this.errorTypes.length; i++){\n                    var name = this.errorTypes[i].name;\n                    var weight = String(this.errorTypes[i].weight);\n                    var description = this.errorTypes[i].description;\n                    var learningOutcome = this.errorTypes[i].learningOutcome;\n                    if(learningOutcome.length > 0){\n                        learningOutcome = this.learningOutcomes[learningOutcomeSortedIDs.indexOf(learningOutcome)].name;\n                    }\n                    var newYs = [];\n                    newYs.push(this.addText(weight, doc, currentX+nameLength+2, currentY+1, currentX + nameLength + weightLength, charLengthSizeOne, 0, false));\n                    newYs.push(this.addText(description, doc, currentX+nameLength+weightLength+2, currentY+1, currentX+nameLength+weightLength+descriptionLength, charLengthSizeOne, 0, false));\n                    newYs.push(this.addText(learningOutcome, doc, currentX+nameLength+weightLength+descriptionLength+2, currentY+1, width-borderMargin-2, charLengthSizeOne, 0, false));\n                    newYs.push(this.addText(name, doc, currentX+2, currentY+1, currentX + nameLength, charLengthSizeOne, 0, false));\n                    var largestY = Math.max.apply(Math, newYs);\n                    \n                    // Add new page if needed\n                    if(largestY > height - borderMargin){\n                        doc.addPage('a4', 'landscape')\n                        largestY = largestY-currentY + 14;\n                        currentY = 10;\n                        // top line of the table\n                        doc.line(currentX, currentY, width-borderMargin, currentY);\n                        currentY += 4;\n                        oldY = -1; \n                        doc.setFontStyle(\"bold\");\n                        this.addText(\"WEIGHT\", doc, currentX+nameLength+2, currentY+1, currentX + nameLength + weightLength, charLengthSizeOne, 0, true);\n                        this.addText(\"DESCRIPTION\", doc, currentX+nameLength+weightLength+2, currentY+1, currentX+nameLength+weightLength+descriptionLength, charLengthSizeOne, 0,true);\n                        this.addText(\"LEARNING OUTCOME\", doc, currentX+nameLength+weightLength+descriptionLength+2, currentY+1, width-borderMargin-2, charLengthSizeOne, 0,true);\n                        var yBackup = currentY;\n                        currentY = this.addText(\"NAME\", doc, currentX+2, currentY+1, currentX + nameLength, charLengthSizeOne, 0,true);\n                        doc.setFontStyle(\"normal\");\n                        currentY += 7;\n                        largestY += currentY-yBackup;\n                        doc.line(currentX, currentY-4, width-borderMargin, currentY-4);\n                    }\n                    this.addText(weight, doc, currentX+nameLength+2, currentY+1, currentX + nameLength + weightLength, charLengthSizeOne, 0, true);\n                    this.addText(description, doc, currentX+nameLength+weightLength+2, currentY+1, currentX+nameLength+weightLength+descriptionLength, charLengthSizeOne, 0,true);\n                    this.addText(learningOutcome, doc, currentX+nameLength+weightLength+descriptionLength+2, currentY+1, width-borderMargin-2, charLengthSizeOne, 0,true);\n                    this.addText(name, doc, currentX+2, currentY+1, currentX + nameLength, charLengthSizeOne, 0,true);\n                    currentY = largestY + 7;\n\n                    if(oldY < 0){oldY = borderMargin}\n\n                    doc.line(currentX, currentY-4, width-borderMargin, currentY-4); // horizontal line\n                    doc.line(currentX, oldY, currentX, currentY-4);\n                    doc.line(currentX+nameLength, oldY, currentX+nameLength, currentY-4);\n                    doc.line(currentX+nameLength+weightLength, oldY, currentX+nameLength+weightLength, currentY-4);\n                    doc.line(currentX+nameLength+weightLength+descriptionLength, oldY, currentX+nameLength+weightLength+descriptionLength, currentY-4);\n                    doc.line(currentX+nameLength+weightLength+descriptionLength+outcomeLength, oldY, currentX+nameLength+weightLength+descriptionLength+outcomeLength, currentY-4);\n                    doc.line(width-borderMargin, oldY, width-borderMargin, currentY-4);\n                    oldY = currentY-4;\n                    \n                }\n\n                /*\n                doc.setFontStyle(\"bold\");\n                // Add achievements\n                doc.text(\"Your level of achievements of learning outcomes:\", currentX, currentY);\n                doc.setFontStyle(\"normal\");\n                currentY += 8;\n\n                // Start creating the table of learning outcomes\n                if(linkedLearningOutcomes.length > 0){\n                    doc.line(currentX, currentY, rightMargin, currentY);\n                }\n                else{\n                    currentY = this.addText(\"empty\", doc, currentX, currentY, rightMargin, charLengthSizeOne, 0);\n                }\n                currentY += 4;\n                for(i = 0; i < linkedLearningOutcomes.length; i++){\n                    var name = this.learningOutcomes[learningOutcomeSortedIDs.indexOf(linkedLearningOutcomes[i])].name;\n                    currentY = this.addText(name, doc, currentX+2, currentY+1, rightMargin-25, charLengthSizeOne, 0);\n                    currentY += 8;\n                    doc.line(currentX, currentY-4, rightMargin, currentY-4);\n                    doc.line(currentX, currentY-12, currentX, currentY-4);\n                    doc.line(rightMargin, currentY-12, rightMargin, currentY-4);\n                    doc.line(rightMargin-25, currentY-12, rightMargin-25, currentY-4);\n                    // Add new page if needed\n                    if(currentY + 8 > bottomMargin && i < linkedLearningOutcomes.length-1){\n                        doc.addPage();\n                        currentY = 20;\n                        // top line of the table\n                        doc.line(currentX, currentY-4, rightMargin, currentY-4);\n                    }\n                }\n                \n                currentY += 8;\n                // Add new page if needed for the last part\n                if(currentY > 230){\n                    doc.addPage();\n                    currentY = 20;\n                }\n                \n                doc.setFontStyle(\"bold\");\n                // Add expertise level\n                doc.text(\"Your current expertise level in creating EDGs:\", currentX, currentY);\n                doc.setFontStyle(\"normal\");\n                currentY += 8;\n                doc.line(currentX, currentY, rightMargin, currentY);\n                var levels = [\"Basic\",\"Pre-intermediate\",\"Intermediate\",\"Upper-intermediate\",\"Advanced\",\"\"]\n                var count = 0;\n                for(i = currentX; i <= rightMargin; i += (rightMargin-currentX)/5){\n                    doc.line(i, currentY, i, currentY+8);\n                    var textLength = levels[count].length*charLengthSizeOne*doc.getFontSize();\n                    // Center the expertise levels\n                    doc.text(levels[count], i + ((rightMargin-currentX)/5)/2 - textLength/2, currentY+12);\n                    count++;\n                }\n                currentY += 8;\n                doc.line(currentX, currentY, rightMargin, currentY);\n                */\n                \n            },\n            // Generates an excel file containing extra information (sort of summary)\n            createExcel(){ //todo old version and not correct any longer\n                var i;\n                var j;\n                var data = [];\n                var total_weight = 0;\n                data.push([{\n                                value: \"TYPE OF ERROR\",\n                                type: 'string'\n                            }, {\n                                value: 'WEIGHT',\n                                type: 'string'\n                            }\n                            , {\n                                value: \"FEEDBACK\",\n                                type: 'string'\n                            }]);\n                for (j = 0; j < this.getDrawings().length; j++) {\n                    for (i = 0; i < this.getDrawings()[j].length; i++) {\n                        var form = this.getDrawings()[j][i];\n                        if(form.form == \"annotation\" && !(form.error == null && form.feedback.length < 1 )){\n                            var error_text = \"\"\n                            var weight = parseInt(form.weight);\n                            if(form.error == null){\n                                error_text = \"No error given.\"\n                                weight = 0;\n                            }\n                            else{\n                                error_text = form.error.slice(form.error.indexOf(':')+2,form.error.length);\n                            }\n                            var feedback = \"\";\n                            if(form.feedback.length < 1){\n                                feedback = \"No feedback given.\";\n                            }\n                            else{\n                                feedback = form.feedback;\n                            }\n                            data.push([{\n                                value: error_text,\n                                type: 'string'\n                            }, {\n                                value: weight,\n                                type: 'number'\n                            }\n                            , {\n                                value: feedback,\n                                type: 'string'\n                            }]);\n                            total_weight += weight;\n                        }\n                    }\n                }\n                data.push([{\n                                value: \"\",\n                                type: 'string'\n                            }, {\n                                value: 'Sum: ' + String(total_weight),\n                                type: 'string'\n                            }]);\n                \n                const config = {\n                    filename: this.$store.getters.get_pdfName,\n                    sheet: {\n                        data\n                    }\n                };\n\n\n            zipcelx(config); // Let the user download the excel file\n            },\n            // This will trigger the browse window to be opened and the user can select a PDF locally\n            select(){\n                    if(!this.isExporting){\n                        // When select button is pressed, trigger browse action\n                        $(\"#file-to-upload\").trigger('click');\n                    }\n            },\n            // The actual uploading of the PDF after selecting a PDF locally in the browse window\n            upload(){\n                if(!this.isExporting){\n                    // When browsing is done and pdf is selected, trigger browse action\n                    this.$store.commit('update_url', JSON.stringify(URL.createObjectURL($(\"#file-to-upload\").get(0).files[0])));\n                    this.isNewPdf = true;\n                    $(\"#zoomSlider\").get(0).value = 60;\n                    this.CURRENT_PAGE = 1;\n                    this.$store.commit('update_page_number', 1);\n                    this.$store.commit('update_drawings', JSON.stringify([]));\n                    this.$store.commit('update_pdfName', $(\"#file-to-upload\").get(0).files[0].name.replace(/.pdf/gi, ''));\n                    this.pdfName = $(\"#file-to-upload\").get(0).files[0].name;\n                    this.showPDF(URL.createObjectURL($(\"#file-to-upload\").get(0).files[0]), this)\n                }\n            },\n            // Load next page if possible\n            nextPage(){\n                if(this.TOTAL_PAGES > 0 && this.CURRENT_PAGE != this.TOTAL_PAGES && !$(\"#zoomSlider\").get(0).disabled){\n                    this.showPage(++this.CURRENT_PAGE, false);\n                    this.$store.commit('update_page_number', this.CURRENT_PAGE);\n                }\n            },\n            // Load previous page if possible\n            previousPage(){\n                if(this.TOTAL_PAGES > 0 && this.CURRENT_PAGE != 1 && !$(\"#zoomSlider\").get(0).disabled){\n                    this.showPage(--this.CURRENT_PAGE, false);\n                    this.$store.commit('update_page_number', this.CURRENT_PAGE);\n                }\n            },\n            // Load first page if possible\n            firstPage(){\n                if(this.TOTAL_PAGES > 0 && this.CURRENT_PAGE != 1 && !$(\"#zoomSlider\").get(0).disabled){\n                    this.showPage(1, false);\n                    this.$store.commit('update_page_number', this.CURRENT_PAGE);\n                }\n            },\n            // Load last page if possible\n            lastPage(){\n                if(this.TOTAL_PAGES > 0 && this.CURRENT_PAGE != this.TOTAL_PAGES && !$(\"#zoomSlider\").get(0).disabled){\n                    this.showPage(this.TOTAL_PAGES, false);\n                    this.$store.commit('update_page_number', this.CURRENT_PAGE);\n                }\n            },\n            // Reduce the thickness by one\n            thinner(){\n                this.thickness = Math.max(1, this.thickness - 1 );\n                this.$store.commit('update_thickness', String(this.thickness));\n                $(\"#thickness-value\").get(0).innerHTML = \" \" + String(this.thickness) + \" \";\n\n            },\n            // Improve the thickness by one\n            thicker(){\n                this.thickness = Math.min(5, this.thickness + 1 );\n                this.$store.commit('update_thickness', String(this.thickness));\n                $(\"#thickness-value\").get(0).innerHTML = \" \" + String(this.thickness) + \" \";\n            },\n        },\n        \n       }\n</script>\n\n<style scoped> \n/* Some styles applied on different buttons/objects */\n    canvas {border: 2px solid black;cursor:crosshair} \n    \n    #core{\n        /*All elements outside the sidebar should reorder according to the sidebar*/\n        background-color: rgb(233, 233, 233);\n        margin-left: 160px;\n        padding: 0px 10px;\n    }\n    #inner_remaining{\n        background-color: rgb(233, 233, 233);\n        position: absolute;\n        top: 0px;\n        bottom: 0;\n        width: 100%; \n        z-index: -2;\n    }\n    #circle2{\n        margin-left: 160px;\n        margin-top: 50px;\n        z-index: 5;\n    }\n    #colour-part{\n        padding-left: 15px;\n    }\n    #canvases {\n        position:relative; /*This line is needed to position next absolute canvas position*/\n    }\n    #draw-canvas{\n        position:absolute;\n        top:0;bottom:1;right:0;left:0;\n        margin:auto;\n    }\n    #moveHandle{\n        position:absolute;\n        top:0;bottom:1;right:0;left:0;\n        padding-top: 5px;\n        padding-left: 5px;\n    }\n    #form-holding-canvas{\n        position:absolute;\n        top:0;bottom:1;right:0;left:0;\n        margin:auto;\n    }\n    #upload-export{\n        position: absolute;\n        height: 102px;\n        width: 250px;\n        top: 0px; left: 180px;\n        padding-top: 10px;\n    }\n    #upload-button{\n        padding-right: 50px;\n    }\n    #colour-picker:hover{\n        cursor:pointer;\n    }\n    \n    #left-half {\n        display: table-cell;\n        text-align: center;\n        width: 450px;\n        height: 300px;\n        border-right: 1px solid black;\n    }\n\n    #right-half {\n        display: table-cell;\n        text-align: center;\n        width: 450px;\n        height: 300px;\n        border-left: 1px solid black;\n    }\n\n    #cancelButton{\n        position: absolute;\n        top: 0px; left: 380px;\n    }\n\n    #name-space{\n        position: absolute;\n    }\n\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PdfCanvas.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PdfCanvas.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./PdfCanvas.vue?vue&type=template&id=53844765&scoped=true&\"\nimport script from \"./PdfCanvas.vue?vue&type=script&lang=js&\"\nexport * from \"./PdfCanvas.vue?vue&type=script&lang=js&\"\nimport style0 from \"./PdfCanvas.vue?vue&type=style&index=0&id=53844765&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"53844765\",\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport Router from 'vue-router'\nimport DatabaseComponent from '@/views/Database';\nimport PDFComponent from '@/views/PdfCanvas';\n\nVue.use(Router)\n\nexport default new Router({\n  mode: 'history',\n  routes: [\n    { path: '/', redirect: { name: 'PDF' } },\n    { path: '/database', name: 'database', component: DatabaseComponent },\n    { path: '/pdf', name: 'PDF', component: PDFComponent },\n  ]\n});","import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nexport const store = new Vuex.Store({\n  state: {\n    url: '',\n    page_number: 1,\n    firstZoom: null,\n    zoom: '',\n    sliderValue: '60',\n    toolmode: '',\n    thickness: '3',\n    drawings: '[]', \n    lastWidth: '',\n    lastHeight: '',\n    pdfName: '',\n    summary: 'true',\n    excel: 'true',\n  },\n  mutations: {\n    update_url(state, new_url) {\n      state.url = new_url;\n    },\n    update_page_number(state, new_page_number) {\n      state.page_number = new_page_number;\n    },\n    update_firstZoom(state, new_firstZoom) {\n      state.firstZoom = new_firstZoom;\n    },\n    update_zoom(state, new_zoom) {\n      state.zoom = new_zoom;\n    },\n    update_slider(state, new_sliderValue) {\n      state.sliderValue = new_sliderValue;\n    },\n    update_toolmode(state, new_toolmode) {\n      state.toolmode = new_toolmode;\n    },\n    update_thickness(state, new_thickness) {\n      state.thickness = new_thickness;\n    },\n    update_drawings(state, new_drawings) {\n      state.drawings = new_drawings;\n    },\n    update_lastWidth(state, new_lastWidth) {\n      state.lastWidth = new_lastWidth;\n    },\n    update_lastHeight(state, new_lastHeight) {\n      state.lastHeight = new_lastHeight;\n    },\n    update_pdfName(state, new_pdfName) {\n      state.pdfName = new_pdfName;\n    },\n    update_summary(state, new_summary) {\n      state.summary = new_summary;\n    },\n    update_excel(state, new_excel) {\n      state.excel = new_excel;\n    },\n  },\n  getters: {\n    get_url: state => state.url,\n    get_page_number: state => state.page_number,\n    get_firstZoom: state => state.firstZoom,\n    get_zoom: state => state.zoom,\n    get_sliderValue: state => state.sliderValue,\n    get_toolmode: state => state.toolmode,\n    get_thickness: state => state.thickness,\n    get_drawings: state => state.drawings,\n    get_lastWidth: state => state.lastWidth,\n    get_lastHeight: state => state.lastHeight,\n    get_pdfName: state => state.pdfName,\n    get_summary: state => state.summary,\n    get_excel: state => state.excel,\n  }\n})\n","import Vue from 'vue'\nimport App from './App.vue'\nimport router from './router'\nimport VModal from 'vue-js-modal'\nimport Multiselect from 'vue-multiselect'\nimport PrettyCheckbox from 'pretty-checkbox';\nimport vueXlsxTable from 'vue-xlsx-table'\n\nVue.component('multiselect', Multiselect)\nVue.use(VModal, { dialog: true })\nVue.use(PrettyCheckbox);\nVue.use(vueXlsxTable, {rABS: false})\n\nVue.config.productionTip = false\n\nimport { store } from './store'\n\nnew Vue({\n  el: '#app',\n  Multiselect,\n  store,\n  router,\n  render: h => h(App)\n}).$mount('#app')\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PdfCanvas.vue?vue&type=style&index=0&id=53844765&scoped=true&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PdfCanvas.vue?vue&type=style&index=0&id=53844765&scoped=true&lang=css&\"","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=1&lang=css&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=1&lang=css&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Database.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/index.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Database.vue?vue&type=style&index=0&lang=css&\""],"sourceRoot":""}